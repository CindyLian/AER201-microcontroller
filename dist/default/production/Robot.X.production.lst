

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Apr 11 14:39:34 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	text79,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97  0000                     
    98                           ; Version 1.40
    99                           ; Generated 01/12/2016 GMT
   100                           ; 
   101                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F4620 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	mediumconst
   134  00FE7C                     __pmediumconst:
   135                           	opt stack 0
   136  00FE7C  00                 	db	0
   137  00FE7D                     _dpowers:
   138                           	opt stack 0
   139  00FE7D  0001               	dw	1
   140  00FE7F  0000               	dw	0
   141  00FE81  000A               	dw	10
   142  00FE83  0000               	dw	0
   143  00FE85  0064               	dw	100
   144  00FE87  0000               	dw	0
   145  00FE89  03E8               	dw	1000
   146  00FE8B  0000               	dw	0
   147  00FE8D  2710               	dw	10000
   148  00FE8F  0000               	dw	0
   149  00FE91  86A0               	dw	34464
   150  00FE93  0001               	dw	1
   151  00FE95  4240               	dw	16960
   152  00FE97  000F               	dw	15
   153  00FE99  9680               	dw	38528
   154  00FE9B  0098               	dw	152
   155  00FE9D  E100               	dw	57600
   156  00FE9F  05F5               	dw	1525
   157  00FEA1  CA00               	dw	51712
   158  00FEA3  3B9A               	dw	15258
   159  00FEA5                     __end_of_dpowers:
   160                           	opt stack 0
   161  00FEA5                     __npowers_:
   162                           	opt stack 0
   163  00FEA5  00                 	db	0
   164  00FEA6  80                 	db	128
   165  00FEA7  3F                 	db	63
   166  00FEA8  CD                 	db	205
   167  00FEA9  CC                 	db	204
   168  00FEAA  3D                 	db	61
   169  00FEAB  D7                 	db	215
   170  00FEAC  23                 	db	35
   171  00FEAD  3C                 	db	60
   172  00FEAE  12                 	db	18
   173  00FEAF  83                 	db	131
   174  00FEB0  3A                 	db	58
   175  00FEB1  B7                 	db	183
   176  00FEB2  D1                 	db	209
   177  00FEB3  38                 	db	56
   178  00FEB4  C6                 	db	198
   179  00FEB5  27                 	db	39
   180  00FEB6  37                 	db	55
   181  00FEB7  38                 	db	56
   182  00FEB8  86                 	db	134
   183  00FEB9  35                 	db	53
   184  00FEBA  C0                 	db	192
   185  00FEBB  D6                 	db	214
   186  00FEBC  33                 	db	51
   187  00FEBD  CC                 	db	204
   188  00FEBE  2B                 	db	43
   189  00FEBF  32                 	db	50
   190  00FEC0  70                 	db	112
   191  00FEC1  89                 	db	137
   192  00FEC2  30                 	db	48
   193  00FEC3  E7                 	db	231
   194  00FEC4  DB                 	db	219
   195  00FEC5  2E                 	db	46
   196  00FEC6  E5                 	db	229
   197  00FEC7  3C                 	db	60
   198  00FEC8  1E                 	db	30
   199  00FEC9  42                 	db	66
   200  00FECA  A2                 	db	162
   201  00FECB  0D                 	db	13
   202  00FECC                     __end_of__npowers_:
   203                           	opt stack 0
   204  00FECC                     __powers_:
   205                           	opt stack 0
   206  00FECC  00                 	db	0
   207  00FECD  80                 	db	128
   208  00FECE  3F                 	db	63
   209  00FECF  00                 	db	0
   210  00FED0  20                 	db	32
   211  00FED1  41                 	db	65
   212  00FED2  00                 	db	0
   213  00FED3  C8                 	db	200
   214  00FED4  42                 	db	66
   215  00FED5  00                 	db	0
   216  00FED6  7A                 	db	122
   217  00FED7  44                 	db	68
   218  00FED8  40                 	db	64
   219  00FED9  1C                 	db	28
   220  00FEDA  46                 	db	70
   221  00FEDB  50                 	db	80
   222  00FEDC  C3                 	db	195
   223  00FEDD  47                 	db	71
   224  00FEDE  24                 	db	36
   225  00FEDF  74                 	db	116
   226  00FEE0  49                 	db	73
   227  00FEE1  97                 	db	151
   228  00FEE2  18                 	db	24
   229  00FEE3  4B                 	db	75
   230  00FEE4  BC                 	db	188
   231  00FEE5  BE                 	db	190
   232  00FEE6  4C                 	db	76
   233  00FEE7  6B                 	db	107
   234  00FEE8  6E                 	db	110
   235  00FEE9  4E                 	db	78
   236  00FEEA  03                 	db	3
   237  00FEEB  15                 	db	21
   238  00FEEC  50                 	db	80
   239  00FEED  79                 	db	121
   240  00FEEE  AD                 	db	173
   241  00FEEF  60                 	db	96
   242  00FEF0  F3                 	db	243
   243  00FEF1  49                 	db	73
   244  00FEF2  71                 	db	113
   245  00FEF3                     __end_of__powers_:
   246                           	opt stack 0
   247  00FEF3                     _hexpowers:
   248                           	opt stack 0
   249  00FEF3  0001               	dw	1
   250  00FEF5  0000               	dw	0
   251  00FEF7  0010               	dw	16
   252  00FEF9  0000               	dw	0
   253  00FEFB  0100               	dw	256
   254  00FEFD  0000               	dw	0
   255  00FEFF  1000               	dw	4096
   256  00FF01  0000               	dw	0
   257  00FF03  0000               	dw	0
   258  00FF05  0001               	dw	1
   259  00FF07  0000               	dw	0
   260  00FF09  0010               	dw	16
   261  00FF0B  0000               	dw	0
   262  00FF0D  0100               	dw	256
   263  00FF0F  0000               	dw	0
   264  00FF11  1000               	dw	4096
   265  00FF13                     __end_of_hexpowers:
   266                           	opt stack 0
   267  00FF13                     _keys:
   268                           	opt stack 0
   269  00FF13  31                 	db	49
   270  00FF14  32                 	db	50
   271  00FF15  33                 	db	51
   272  00FF16  41                 	db	65
   273  00FF17  34                 	db	52
   274  00FF18  35                 	db	53
   275  00FF19  36                 	db	54
   276  00FF1A  42                 	db	66
   277  00FF1B  37                 	db	55
   278  00FF1C  38                 	db	56
   279  00FF1D  39                 	db	57
   280  00FF1E  43                 	db	67
   281  00FF1F  2A                 	db	42
   282  00FF20  30                 	db	48
   283  00FF21  23                 	db	35
   284  00FF22  44                 	db	68
   285  00FF23  00                 	db	0
   286  00FF24                     __end_of_keys:
   287                           	opt stack 0
   288  00FF24                     _happynewyear:
   289                           	opt stack 0
   290  00FF24  00                 	db	0
   291  00FF25  30                 	db	48
   292  00FF26  00                 	db	0
   293  00FF27  00                 	db	0
   294  00FF28  28                 	db	40
   295  00FF29  03                 	db	3
   296  00FF2A  17                 	db	23
   297  00FF2B                     __end_of_happynewyear:
   298                           	opt stack 0
   299  00FF2B                     _itemArray:
   300                           	opt stack 0
   301  00FF2B  31                 	db	49
   302  00FF2C  32                 	db	50
   303  00FF2D  33                 	db	51
   304  00FF2E  34                 	db	52
   305  00FF2F  35                 	db	53
   306  00FF30  00                 	db	0
   307  00FF31                     __end_of_itemArray:
   308                           	opt stack 0
   309  0000                     _ADCON0	set	4034
   310  0000                     _ADCON0bits	set	4034
   311  0000                     _ADCON1	set	4033
   312  0000                     _ADRESH	set	4036
   313  0000                     _EEADR	set	4009
   314  0000                     _EEADRH	set	4010
   315  0000                     _EECON1bits	set	4006
   316  0000                     _EECON2	set	4007
   317  0000                     _EEDATA	set	4008
   318  0000                     _INTCONbits	set	4082
   319  0000                     _LATCbits	set	3979
   320  0000                     _LATD	set	3980
   321  0000                     _LATDbits	set	3980
   322  0000                     _LATEbits	set	3981
   323  0000                     _PIR2bits	set	4001
   324  0000                     _PORTB	set	3969
   325  0000                     _PORTBbits	set	3969
   326  0000                     _PORTEbits	set	3972
   327  0000                     _SSPADD	set	4040
   328  0000                     _SSPBUF	set	4041
   329  0000                     _SSPCON1	set	4038
   330  0000                     _SSPCON2	set	4037
   331  0000                     _SSPSTAT	set	4039
   332  0000                     _T0CON	set	4053
   333  0000                     _T1CON	set	4045
   334  0000                     _TMR0H	set	4055
   335  0000                     _TMR0L	set	4054
   336  0000                     _TMR1H	set	4047
   337  0000                     _TMR1L	set	4046
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISB	set	3987
   340  0000                     _TRISC	set	3988
   341  0000                     _TRISD	set	3989
   342  0000                     _TRISE	set	3990
   343  0000                     _ACKDT	set	32301
   344  0000                     _ACKEN	set	32300
   345  0000                     _ADON	set	32272
   346  0000                     _INT1IE	set	32643
   347  0000                     _INT1IF	set	32640
   348  0000                     _PEN	set	32298
   349  0000                     _RCEN	set	32299
   350  0000                     _RSEN	set	32297
   351  0000                     _SEN	set	32296
   352  0000                     _TMR0IE	set	32661
   353  0000                     _TMR0IF	set	32658
   354  0000                     _TMR0ON	set	32431
   355  0000                     _TMR1ON	set	32360
   356  0000                     _TRISC3	set	31907
   357  0000                     _TRISC4	set	31908
   358  00FF31                     STR_15:
   359  00FF31  65                 	db	101	;'e'
   360  00FF32  63                 	db	99	;'c'
   361  00FF33  3A                 	db	58	;':'
   362  00FF34  25                 	db	37
   363  00FF35  64                 	db	100	;'d'
   364  00FF36  65                 	db	101	;'e'
   365  00FF37  6E                 	db	110	;'n'
   366  00FF38  3A                 	db	58	;':'
   367  00FF39  25                 	db	37
   368  00FF3A  64                 	db	100	;'d'
   369  00FF3B  79                 	db	121	;'y'
   370  00FF3C  63                 	db	99	;'c'
   371  00FF3D  3A                 	db	58	;':'
   372  00FF3E  25                 	db	37
   373  00FF3F  64                 	db	100	;'d'
   374  00FF40  79                 	db	121	;'y'
   375  00FF41  6E                 	db	110	;'n'
   376  00FF42  3A                 	db	58	;':'
   377  00FF43  25                 	db	37
   378  00FF44  64                 	db	100	;'d'
   379  00FF45  00                 	db	0
   380  00FF46                     STR_23:
   381  00FF46  30                 	db	48	;'0'
   382  00FF47  31                 	db	49	;'1'
   383  00FF48  32                 	db	50	;'2'
   384  00FF49  33                 	db	51	;'3'
   385  00FF4A  34                 	db	52	;'4'
   386  00FF4B  35                 	db	53	;'5'
   387  00FF4C  36                 	db	54	;'6'
   388  00FF4D  37                 	db	55	;'7'
   389  00FF4E  38                 	db	56	;'8'
   390  00FF4F  39                 	db	57	;'9'
   391  00FF50  61                 	db	97	;'a'
   392  00FF51  62                 	db	98	;'b'
   393  00FF52  63                 	db	99	;'c'
   394  00FF53  64                 	db	100	;'d'
   395  00FF54  65                 	db	101	;'e'
   396  00FF55  66                 	db	102	;'f'
   397  00FF56  00                 	db	0
   398  00FF57                     STR_16:
   399  00FF57  54                 	db	84	;'T'
   400  00FF58  6F                 	db	111	;'o'
   401  00FF59  74                 	db	116	;'t'
   402  00FF5A  61                 	db	97	;'a'
   403  00FF5B  6C                 	db	108	;'l'
   404  00FF5C  3A                 	db	58	;':'
   405  00FF5D  25                 	db	37
   406  00FF5E  64                 	db	100	;'d'
   407  00FF5F  20                 	db	32
   408  00FF60  54                 	db	84	;'T'
   409  00FF61  69                 	db	105	;'i'
   410  00FF62  6D                 	db	109	;'m'
   411  00FF63  65                 	db	101	;'e'
   412  00FF64  3A                 	db	58	;':'
   413  00FF65  25                 	db	37
   414  00FF66  64                 	db	100	;'d'
   415  00FF67  00                 	db	0
   416  00FF68                     STR_1:
   417  00FF68  31                 	db	49	;'1'
   418  00FF69  3A                 	db	58	;':'
   419  00FF6A  53                 	db	83	;'S'
   420  00FF6B  74                 	db	116	;'t'
   421  00FF6C  61                 	db	97	;'a'
   422  00FF6D  72                 	db	114	;'r'
   423  00FF6E  74                 	db	116	;'t'
   424  00FF6F  3B                 	db	59	;';'
   425  00FF70  20                 	db	32
   426  00FF71  32                 	db	50	;'2'
   427  00FF72  3A                 	db	58	;':'
   428  00FF73  4C                 	db	76	;'L'
   429  00FF74  6F                 	db	111	;'o'
   430  00FF75  67                 	db	103	;'g'
   431  00FF76  73                 	db	115	;'s'
   432  00FF77  00                 	db	0
   433  00FF78                     STR_22:
   434  00FF78  25                 	db	37
   435  00FF79  30                 	db	48	;'0'
   436  00FF7A  32                 	db	50	;'2'
   437  00FF7B  78                 	db	120	;'x'
   438  00FF7C  3A                 	db	58	;':'
   439  00FF7D  25                 	db	37
   440  00FF7E  30                 	db	48	;'0'
   441  00FF7F  32                 	db	50	;'2'
   442  00FF80  78                 	db	120	;'x'
   443  00FF81  3A                 	db	58	;':'
   444  00FF82  25                 	db	37
   445  00FF83  30                 	db	48	;'0'
   446  00FF84  32                 	db	50	;'2'
   447  00FF85  78                 	db	120	;'x'
   448  00FF86  00                 	db	0
   449  00FF87                     STR_21:
   450  00FF87  25                 	db	37
   451  00FF88  30                 	db	48	;'0'
   452  00FF89  32                 	db	50	;'2'
   453  00FF8A  78                 	db	120	;'x'
   454  00FF8B  2F                 	db	47
   455  00FF8C  25                 	db	37
   456  00FF8D  30                 	db	48	;'0'
   457  00FF8E  32                 	db	50	;'2'
   458  00FF8F  78                 	db	120	;'x'
   459  00FF90  20                 	db	32
   460  00FF91  20                 	db	32
   461  00FF92  00                 	db	0
   462  00FF93                     STR_6:
   463  00FF93  6C                 	db	108	;'l'
   464  00FF94  69                 	db	105	;'i'
   465  00FF95  67                 	db	103	;'g'
   466  00FF96  68                 	db	104	;'h'
   467  00FF97  74                 	db	116	;'t'
   468  00FF98  53                 	db	83	;'S'
   469  00FF99  75                 	db	117	;'u'
   470  00FF9A  6D                 	db	109	;'m'
   471  00FF9B  20                 	db	32
   472  00FF9C  25                 	db	37
   473  00FF9D  66                 	db	102	;'f'
   474  00FF9E  00                 	db	0
   475  00FF9F                     STR_7:
   476  00FF9F  70                 	db	112	;'p'
   477  00FFA0  72                 	db	114	;'r'
   478  00FFA1  6F                 	db	111	;'o'
   479  00FFA2  78                 	db	120	;'x'
   480  00FFA3  56                 	db	86	;'V'
   481  00FFA4  6F                 	db	111	;'o'
   482  00FFA5  6C                 	db	108	;'l'
   483  00FFA6  74                 	db	116	;'t'
   484  00FFA7  20                 	db	32
   485  00FFA8  25                 	db	37
   486  00FFA9  66                 	db	102	;'f'
   487  00FFAA  00                 	db	0
   488  00FFAB                     STR_11:
   489  00FFAB  65                 	db	101	;'e'
   490  00FFAC  73                 	db	115	;'s'
   491  00FFAD  6B                 	db	107	;'k'
   492  00FFAE  61                 	db	97	;'a'
   493  00FFAF  20                 	db	32
   494  00FFB0  6E                 	db	110	;'n'
   495  00FFB1  6F                 	db	111	;'o'
   496  00FFB2  20                 	db	32
   497  00FFB3  63                 	db	99	;'c'
   498  00FFB4  61                 	db	97	;'a'
   499  00FFB5  70                 	db	112	;'p'
   500  00FFB6  00                 	db	0
   501  00FFB7                     STR_13:
   502  00FFB7  79                 	db	121	;'y'
   503  00FFB8  6F                 	db	111	;'o'
   504  00FFB9  70                 	db	112	;'p'
   505  00FFBA  20                 	db	32
   506  00FFBB  6E                 	db	110	;'n'
   507  00FFBC  6F                 	db	111	;'o'
   508  00FFBD  20                 	db	32
   509  00FFBE  63                 	db	99	;'c'
   510  00FFBF  61                 	db	97	;'a'
   511  00FFC0  70                 	db	112	;'p'
   512  00FFC1  00                 	db	0
   513  00FFC2                     STR_18:
   514  00FFC2  49                 	db	73	;'I'
   515  00FFC3  74                 	db	116	;'t'
   516  00FFC4  65                 	db	101	;'e'
   517  00FFC5  6D                 	db	109	;'m'
   518  00FFC6  3A                 	db	58	;':'
   519  00FFC7  20                 	db	32
   520  00FFC8  25                 	db	37
   521  00FFC9  63                 	db	99	;'c'
   522  00FFCA  00                 	db	0
   523  00FFCB                     STR_14:
   524  00FFCB  54                 	db	84	;'T'
   525  00FFCC  69                 	db	105	;'i'
   526  00FFCD  6D                 	db	109	;'m'
   527  00FFCE  65                 	db	101	;'e'
   528  00FFCF  3A                 	db	58	;':'
   529  00FFD0  20                 	db	32
   530  00FFD1  25                 	db	37
   531  00FFD2  64                 	db	100	;'d'
   532  00FFD3  00                 	db	0
   533  00FFD4                     STR_9:
   534  00FFD4  25                 	db	37
   535  00FFD5  64                 	db	100	;'d'
   536  00FFD6  20                 	db	32
   537  00FFD7  25                 	db	37
   538  00FFD8  64                 	db	100	;'d'
   539  00FFD9  20                 	db	32
   540  00FFDA  25                 	db	37
   541  00FFDB  64                 	db	100	;'d'
   542  00FFDC  00                 	db	0
   543  00FFDD                     STR_10:
   544  00FFDD  65                 	db	101	;'e'
   545  00FFDE  73                 	db	115	;'s'
   546  00FFDF  6B                 	db	107	;'k'
   547  00FFE0  61                 	db	97	;'a'
   548  00FFE1  20                 	db	32
   549  00FFE2  63                 	db	99	;'c'
   550  00FFE3  61                 	db	97	;'a'
   551  00FFE4  70                 	db	112	;'p'
   552  00FFE5  00                 	db	0
   553  00FFE6                     STR_12:
   554  00FFE6  79                 	db	121	;'y'
   555  00FFE7  6F                 	db	111	;'o'
   556  00FFE8  70                 	db	112	;'p'
   557  00FFE9  20                 	db	32
   558  00FFEA  63                 	db	99	;'c'
   559  00FFEB  61                 	db	97	;'a'
   560  00FFEC  70                 	db	112	;'p'
   561  00FFED  00                 	db	0
   562  00FFEE                     STR_3:
   563  00FFEE  52                 	db	82	;'R'
   564  00FFEF  45                 	db	69	;'E'
   565  00FFF0  53                 	db	83	;'S'
   566  00FFF1  45                 	db	69	;'E'
   567  00FFF2  54                 	db	84	;'T'
   568  00FFF3  00                 	db	0
   569  00FFF4                     STR_8:
   570  00FFF4  49                 	db	73	;'I'
   571  00FFF5  52                 	db	82	;'R'
   572  00FFF6  20                 	db	32
   573  00FFF7  25                 	db	37
   574  00FFF8  66                 	db	102	;'f'
   575  00FFF9  00                 	db	0
   576  00FFFA  45                 	db	69	;'E'
   577  00FFFB  78                 	db	120	;'x'
   578  00FFFC  69                 	db	105	;'i'
   579  00FFFD  74                 	db	116	;'t'
   580  00FFFE  00                 	db	0
   581  0000                     
   582                           ; #config settings
   583  00FFFF  00                 	db	0	; dummy byte at the end
   584  0000                     
   585                           	psect	cinit
   586  005D1A                     __pcinit:
   587                           	opt stack 0
   588  005D1A                     start_initialization:
   589                           	opt stack 0
   590  005D1A                     __initialization:
   591                           	opt stack 0
   592                           
   593                           ; Clear objects allocated to BANK1 (19 bytes)
   594  005D1A  EE01  F0B3         	lfsr	0,__pbssBANK1
   595  005D1E  0E13               	movlw	19
   596  005D20                     clear_0:
   597  005D20  6AEE               	clrf	postinc0,c
   598  005D22  06E8               	decf	wreg,f,c
   599  005D24  E1FD               	bnz	clear_0
   600                           
   601                           ; Clear objects allocated to BANK0 (2 bytes)
   602  005D26  0100               	movlb	0
   603  005D28  6BC8               	clrf	(__pbssBANK0+1)& (0+255),b
   604  005D2A  6BC7               	clrf	__pbssBANK0& (0+255),b
   605                           
   606                           ; Clear objects allocated to COMRAM (2 bytes)
   607  005D2C  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   608  005D2E  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   609  005D30                     end_of_initialization:
   610                           	opt stack 0
   611  005D30                     __end_of__initialization:
   612                           	opt stack 0
   613  005D30  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   614  005D32  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   615  005D34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   616  005D36  6EF8               	movwf	tblptru,c
   617  005D38  0100               	movlb	0
   618  005D3A  EF6C  F027         	goto	_main	;jump to C main() function
   619                           tblptru	equ	0xFF8
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           
   623                           	psect	bssCOMRAM
   624  00007B                     __pbssCOMRAM:
   625                           	opt stack 0
   626  00007B                     _counter:
   627                           	opt stack 0
   628  00007B                     	ds	2
   629                           tblptru	equ	0xFF8
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           
   633                           	psect	bssBANK0
   634  0000C7                     __pbssBANK0:
   635                           	opt stack 0
   636  0000C7                     _timeElapsed:
   637                           	opt stack 0
   638  0000C7                     	ds	2
   639                           tblptru	equ	0xFF8
   640                           postinc0	equ	0xFEE
   641                           wreg	equ	0xFE8
   642                           
   643                           	psect	bssBANK1
   644  0001B3                     __pbssBANK1:
   645                           	opt stack 0
   646  0001B3                     _time:
   647                           	opt stack 0
   648  0001B3                     	ds	7
   649  0001BA                     _eskaCap:
   650                           	opt stack 0
   651  0001BA                     	ds	2
   652  0001BC                     _eskaNoCap:
   653                           	opt stack 0
   654  0001BC                     	ds	2
   655  0001BE                     _logs:
   656                           	opt stack 0
   657  0001BE                     	ds	2
   658  0001C0                     _sorting:
   659                           	opt stack 0
   660  0001C0                     	ds	2
   661  0001C2                     _yopCap:
   662                           	opt stack 0
   663  0001C2                     	ds	2
   664  0001C4                     _yopNoCap:
   665                           	opt stack 0
   666  0001C4                     	ds	2
   667                           tblptru	equ	0xFF8
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           
   671                           	psect	cstackBANK1
   672  000100                     __pcstackBANK1:
   673                           	opt stack 0
   674  000100                     ?___wmul:
   675                           	opt stack 0
   676  000100                     ?___awtoft:
   677                           	opt stack 0
   678  000100                     ?___llmod:
   679                           	opt stack 0
   680  000100                     ___lltoft@exp:
   681                           	opt stack 0
   682  000100                     ___wmul@multiplier:
   683                           	opt stack 0
   684  000100                     ___awtoft@c:
   685                           	opt stack 0
   686  000100                     I2C_Master_Init@c:
   687                           	opt stack 0
   688  000100                     ___llmod@dividend:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x0
   692  000100                     	ds	2
   693  000102                     ___wmul@multiplicand:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x2
   697  000102                     	ds	1
   698  000103                     ?___ftdiv:
   699                           	opt stack 0
   700  000103                     ___ftdiv@f1:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x3
   704  000103                     	ds	1
   705  000104                     ??_I2C_Master_Init:
   706  000104                     ?___ftmul:
   707                           	opt stack 0
   708  000104                     ___ftmul@f1:
   709                           	opt stack 0
   710  000104                     ___llmod@divisor:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x4
   714  000104                     	ds	2
   715  000106                     ___ftdiv@f2:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x6
   719  000106                     	ds	1
   720  000107                     ___ftmul@f2:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x7
   724  000107                     	ds	2
   725  000109                     ??___ftdiv:
   726                           
   727                           ; 1 bytes @ 0x9
   728  000109                     	ds	1
   729  00010A                     ??___ftmul:
   730                           
   731                           ; 1 bytes @ 0xA
   732  00010A                     	ds	2
   733  00010C                     ___ftdiv@cntr:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0xC
   737  00010C                     	ds	1
   738  00010D                     ___ftmul@exp:
   739                           	opt stack 0
   740  00010D                     ___ftdiv@f3:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0xD
   744  00010D                     	ds	1
   745  00010E                     ___ftmul@f3_as_product:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0xE
   749  00010E                     	ds	2
   750  000110                     ___ftdiv@exp:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x10
   754  000110                     	ds	1
   755  000111                     ___ftdiv@sign:
   756                           	opt stack 0
   757  000111                     ___ftmul@cntr:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x11
   761  000111                     	ds	1
   762  000112                     ___ftmul@sign:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x12
   766  000112                     	ds	1
   767  000113                     ?_fround:
   768                           	opt stack 0
   769  000113                     ?_scale:
   770                           	opt stack 0
   771                           
   772                           ; 3 bytes @ 0x13
   773  000113                     	ds	3
   774  000116                     _fround$1493:
   775                           	opt stack 0
   776  000116                     _scale$1494:
   777                           	opt stack 0
   778                           
   779                           ; 3 bytes @ 0x16
   780  000116                     	ds	3
   781  000119                     scale@scl:
   782                           	opt stack 0
   783  000119                     _fround$1492:
   784                           	opt stack 0
   785                           
   786                           ; 3 bytes @ 0x19
   787  000119                     	ds	1
   788  00011A                     ?___fttol:
   789                           	opt stack 0
   790  00011A                     ___fttol@f1:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0x1A
   794  00011A                     	ds	2
   795  00011C                     fround@prec:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1C
   799  00011C                     	ds	1
   800  00011D                     ?___ftadd:
   801                           	opt stack 0
   802  00011D                     ___ftadd@f1:
   803                           	opt stack 0
   804                           
   805                           ; 3 bytes @ 0x1D
   806  00011D                     	ds	1
   807  00011E                     ??___fttol:
   808                           
   809                           ; 1 bytes @ 0x1E
   810  00011E                     	ds	2
   811  000120                     ___ftadd@f2:
   812                           	opt stack 0
   813                           
   814                           ; 3 bytes @ 0x20
   815  000120                     	ds	3
   816  000123                     ??___ftadd:
   817  000123                     ___fttol@sign1:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x23
   821  000123                     	ds	1
   822  000124                     ___fttol@lval:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x24
   826  000124                     	ds	2
   827  000126                     ___ftadd@sign:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x26
   831  000126                     	ds	1
   832  000127                     ___ftadd@exp2:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x27
   836  000127                     	ds	1
   837  000128                     ___ftadd@exp1:
   838                           	opt stack 0
   839  000128                     ___fttol@exp1:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x28
   843  000128                     	ds	1
   844  000129                     ?_ultrasonicFindBottle:
   845                           	opt stack 0
   846  000129                     ?___ftsub:
   847                           	opt stack 0
   848  000129                     ___ftsub@f1:
   849                           	opt stack 0
   850                           
   851                           ; 3 bytes @ 0x29
   852  000129                     	ds	2
   853  00012B                     ??_ultrasonicFindBottle:
   854                           
   855                           ; 1 bytes @ 0x2B
   856  00012B                     	ds	1
   857  00012C                     ___ftsub@f2:
   858                           	opt stack 0
   859                           
   860                           ; 3 bytes @ 0x2C
   861  00012C                     	ds	3
   862  00012F                     ?_printf:
   863                           	opt stack 0
   864  00012F                     ultrasonicFindBottle@a:
   865                           	opt stack 0
   866  00012F                     printf@f:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x2F
   870  00012F                     	ds	10
   871  000139                     ??_printf:
   872                           
   873                           ; 1 bytes @ 0x39
   874  000139                     	ds	6
   875  00013F                     _printf$1495:
   876                           	opt stack 0
   877                           
   878                           ; 3 bytes @ 0x3F
   879  00013F                     	ds	3
   880  000142                     printf@idx:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x42
   884  000142                     	ds	1
   885  000143                     printf@cp:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x43
   889  000143                     	ds	2
   890  000145                     printf@len:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x45
   894  000145                     	ds	2
   895  000147                     printf@ap:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0x47
   899  000147                     	ds	2
   900  000149                     printf@prec:
   901                           	opt stack 0
   902                           
   903                           ; 2 bytes @ 0x49
   904  000149                     	ds	2
   905  00014B                     printf@tmpval:
   906                           	opt stack 0
   907                           
   908                           ; 4 bytes @ 0x4B
   909  00014B                     	ds	4
   910  00014F                     printf@exp:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x4F
   914  00014F                     	ds	2
   915  000151                     printf@val:
   916                           	opt stack 0
   917                           
   918                           ; 4 bytes @ 0x51
   919  000151                     	ds	4
   920  000155                     printf@flag:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x55
   924  000155                     	ds	2
   925  000157                     printf@fval:
   926                           	opt stack 0
   927                           
   928                           ; 3 bytes @ 0x57
   929  000157                     	ds	3
   930  00015A                     printf@width:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x5A
   934  00015A                     	ds	2
   935  00015C                     printf@c:
   936                           	opt stack 0
   937                           
   938                           ; 1 bytes @ 0x5C
   939  00015C                     	ds	1
   940  00015D                     ??_printRTC:
   941  00015D                     displayLog@eskaCap:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x5D
   945  00015D                     	ds	1
   946  00015E                     printRTC@i_868:
   947                           	opt stack 0
   948                           
   949                           ; 2 bytes @ 0x5E
   950  00015E                     	ds	1
   951  00015F                     displayLog@eskaNoCap:
   952                           	opt stack 0
   953                           
   954                           ; 2 bytes @ 0x5F
   955  00015F                     	ds	1
   956  000160                     printRTC@i:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x60
   960  000160                     	ds	1
   961  000161                     displayLog@yopCap:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x61
   965  000161                     	ds	2
   966  000163                     displayLog@yopNoCap:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x63
   970  000163                     	ds	2
   971  000165                     displayLog@time:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x65
   975  000165                     	ds	2
   976  000167                     ??_displayLog:
   977                           
   978                           ; 1 bytes @ 0x67
   979  000167                     	ds	2
   980  000169                     displayLog@total:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x69
   984  000169                     	ds	2
   985  00016B                     displayLog@press1:
   986                           	opt stack 0
   987                           
   988                           ; 1 bytes @ 0x6B
   989  00016B                     	ds	1
   990  00016C                     ??_sort:
   991                           
   992                           ; 1 bytes @ 0x6C
   993  00016C                     	ds	3
   994  00016F                     sort@timeExceeded:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x6F
   998  00016F                     	ds	2
   999  000171                     sort@lightVolt:
  1000                           	opt stack 0
  1001                           
  1002                           ; 3 bytes @ 0x71
  1003  000171                     	ds	3
  1004  000174                     sort@lightVolt_634:
  1005                           	opt stack 0
  1006                           
  1007                           ; 3 bytes @ 0x74
  1008  000174                     	ds	3
  1009  000177                     sort@lightVolt_640:
  1010                           	opt stack 0
  1011                           
  1012                           ; 3 bytes @ 0x77
  1013  000177                     	ds	3
  1014  00017A                     sort@currentContainer:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x7A
  1018  00017A                     	ds	2
  1019  00017C                     sort@bottleFound:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x7C
  1023  00017C                     	ds	2
  1024  00017E                     sort@timer:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x7E
  1028  00017E                     	ds	2
  1029  000180                     sort@x:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x80
  1033  000180                     	ds	2
  1034  000182                     sort@IRVolt:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x82
  1038  000182                     	ds	3
  1039  000185                     sort@i:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x85
  1043  000185                     	ds	2
  1044  000187                     sort@i_624:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x87
  1048  000187                     	ds	2
  1049  000189                     sort@i_626:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x89
  1053  000189                     	ds	2
  1054  00018B                     sort@i_629:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x8B
  1058  00018B                     	ds	2
  1059  00018D                     sort@i_630:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x8D
  1063  00018D                     	ds	2
  1064  00018F                     sort@i_631:
  1065                           	opt stack 0
  1066                           
  1067                           ; 2 bytes @ 0x8F
  1068  00018F                     	ds	2
  1069  000191                     sort@i_633:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x91
  1073  000191                     	ds	2
  1074  000193                     sort@i_635:
  1075                           	opt stack 0
  1076                           
  1077                           ; 2 bytes @ 0x93
  1078  000193                     	ds	2
  1079  000195                     sort@i_639:
  1080                           	opt stack 0
  1081                           
  1082                           ; 2 bytes @ 0x95
  1083  000195                     	ds	2
  1084  000197                     sort@i_642:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x97
  1088  000197                     	ds	2
  1089  000199                     sort@i_643:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x99
  1093  000199                     	ds	2
  1094  00019B                     sort@i_644:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x9B
  1098  00019B                     	ds	2
  1099  00019D                     sort@i_645:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x9D
  1103  00019D                     	ds	2
  1104  00019F                     sort@done:
  1105                           	opt stack 0
  1106                           
  1107                           ; 2 bytes @ 0x9F
  1108  00019F                     	ds	2
  1109  0001A1                     sort@bottle:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0xA1
  1113  0001A1                     	ds	2
  1114  0001A3                     sort@proxVolt:
  1115                           	opt stack 0
  1116                           
  1117                           ; 3 bytes @ 0xA3
  1118  0001A3                     	ds	3
  1119  0001A6                     sort@lightVoltSum:
  1120                           	opt stack 0
  1121                           
  1122                           ; 3 bytes @ 0xA6
  1123  0001A6                     	ds	3
  1124  0001A9                     sort@lightVoltSum_632:
  1125                           	opt stack 0
  1126                           
  1127                           ; 3 bytes @ 0xA9
  1128  0001A9                     	ds	3
  1129  0001AC                     sort@lightVoltSum_638:
  1130                           	opt stack 0
  1131                           
  1132                           ; 3 bytes @ 0xAC
  1133  0001AC                     	ds	3
  1134  0001AF                     sort@numRotations:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0xAF
  1138  0001AF                     	ds	2
  1139  0001B1                     main@ec:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0xB1
  1143  0001B1                     	ds	2
  1144                           tblptru	equ	0xFF8
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           
  1148                           	psect	cstackBANK0
  1149  000080                     __pcstackBANK0:
  1150                           	opt stack 0
  1151  000080                     keypressed@lightVolt:
  1152                           	opt stack 0
  1153                           
  1154                           ; 3 bytes @ 0x0
  1155  000080                     	ds	3
  1156  000083                     keypressed@proxVolt:
  1157                           	opt stack 0
  1158                           
  1159                           ; 3 bytes @ 0x3
  1160  000083                     	ds	3
  1161  000086                     keypressed@IRSensor:
  1162                           	opt stack 0
  1163                           
  1164                           ; 3 bytes @ 0x6
  1165  000086                     	ds	3
  1166  000089                     keypressed@lightVolt_266:
  1167                           	opt stack 0
  1168                           
  1169                           ; 3 bytes @ 0x9
  1170  000089                     	ds	3
  1171  00008C                     keypressed@prox:
  1172                           	opt stack 0
  1173                           
  1174                           ; 2 bytes @ 0xC
  1175  00008C                     	ds	2
  1176  00008E                     keypressed@light:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0xE
  1180  00008E                     	ds	2
  1181  000090                     keypressed@IR:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x10
  1185  000090                     	ds	2
  1186  000092                     keypressed@i_246:
  1187                           	opt stack 0
  1188                           
  1189                           ; 2 bytes @ 0x12
  1190  000092                     	ds	2
  1191  000094                     keypressed@i:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x14
  1195  000094                     	ds	2
  1196  000096                     keypressed@i_245:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x16
  1200  000096                     	ds	2
  1201  000098                     keypressed@i_248:
  1202                           	opt stack 0
  1203                           
  1204                           ; 2 bytes @ 0x18
  1205  000098                     	ds	2
  1206  00009A                     keypressed@i_250:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x1A
  1210  00009A                     	ds	2
  1211  00009C                     keypressed@i_253:
  1212                           	opt stack 0
  1213                           
  1214                           ; 2 bytes @ 0x1C
  1215  00009C                     	ds	2
  1216  00009E                     keypressed@i_254:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x1E
  1220  00009E                     	ds	2
  1221  0000A0                     keypressed@i_255:
  1222                           	opt stack 0
  1223                           
  1224                           ; 2 bytes @ 0x20
  1225  0000A0                     	ds	2
  1226  0000A2                     keypressed@i_258:
  1227                           	opt stack 0
  1228                           
  1229                           ; 2 bytes @ 0x22
  1230  0000A2                     	ds	2
  1231  0000A4                     keypressed@i_261:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x24
  1235  0000A4                     	ds	2
  1236  0000A6                     keypressed@i_265:
  1237                           	opt stack 0
  1238                           
  1239                           ; 2 bytes @ 0x26
  1240  0000A6                     	ds	2
  1241  0000A8                     keypressed@i_275:
  1242                           	opt stack 0
  1243                           
  1244                           ; 2 bytes @ 0x28
  1245  0000A8                     	ds	2
  1246  0000AA                     keypressed@IRVolt:
  1247                           	opt stack 0
  1248                           
  1249                           ; 3 bytes @ 0x2A
  1250  0000AA                     	ds	3
  1251  0000AD                     keypressed@proxVolt_263:
  1252                           	opt stack 0
  1253                           
  1254                           ; 3 bytes @ 0x2D
  1255  0000AD                     	ds	3
  1256  0000B0                     keypressed@lightVoltSum:
  1257                           	opt stack 0
  1258                           
  1259                           ; 3 bytes @ 0x30
  1260  0000B0                     	ds	3
  1261  0000B3                     keypressed@lightVoltSum_264:
  1262                           	opt stack 0
  1263                           
  1264                           ; 3 bytes @ 0x33
  1265  0000B3                     	ds	3
  1266  0000B6                     keypressed@keypress:
  1267                           	opt stack 0
  1268                           
  1269                           ; 1 bytes @ 0x36
  1270  0000B6                     	ds	1
  1271  0000B7                     ??_readADC:
  1272  0000B7                     ??_rotate90:
  1273  0000B7                     ??_dc_forward:
  1274  0000B7                     ??_dc_reverse:
  1275  0000B7                     ??_rotate180:
  1276  0000B7                     ??_rotate270:
  1277  0000B7                     ??_isdigit:
  1278  0000B7                     ??_I2C_Master_Wait:
  1279  0000B7                     ?_Eeprom_ReadByte:
  1280                           	opt stack 0
  1281  0000B7                     ?___awmod:
  1282                           	opt stack 0
  1283  0000B7                     ?___ftpack:
  1284                           	opt stack 0
  1285  0000B7                     ?___ftneg:
  1286                           	opt stack 0
  1287  0000B7                     ?__tdiv_to_l_:
  1288                           	opt stack 0
  1289  0000B7                     ?__div_to_l_:
  1290                           	opt stack 0
  1291  0000B7                     ?___lldiv:
  1292                           	opt stack 0
  1293  0000B7                     lcdNibble@temp:
  1294                           	opt stack 0
  1295  0000B7                     Eeprom_ReadByte@address:
  1296                           	opt stack 0
  1297  0000B7                     Eeprom_WriteByte@address:
  1298                           	opt stack 0
  1299  0000B7                     ___awmod@dividend:
  1300                           	opt stack 0
  1301  0000B7                     __div_to_l_@f1:
  1302                           	opt stack 0
  1303  0000B7                     ___ftpack@arg:
  1304                           	opt stack 0
  1305  0000B7                     __tdiv_to_l_@f1:
  1306                           	opt stack 0
  1307  0000B7                     ___ftge@ff1:
  1308                           	opt stack 0
  1309  0000B7                     ___ftneg@f1:
  1310                           	opt stack 0
  1311  0000B7                     ___lldiv@dividend:
  1312                           	opt stack 0
  1313                           
  1314                           ; 4 bytes @ 0x37
  1315  0000B7                     	ds	1
  1316  0000B8                     lcdNibble@data:
  1317                           	opt stack 0
  1318  0000B8                     readADC@channel:
  1319                           	opt stack 0
  1320  0000B8                     I2C_Master_Read@a:
  1321                           	opt stack 0
  1322  0000B8                     _isdigit$1152:
  1323                           	opt stack 0
  1324  0000B8                     rotate90@i:
  1325                           	opt stack 0
  1326  0000B8                     rotate180@i:
  1327                           	opt stack 0
  1328  0000B8                     rotate270@i:
  1329                           	opt stack 0
  1330  0000B8                     dc_forward@i:
  1331                           	opt stack 0
  1332  0000B8                     dc_reverse@i:
  1333                           	opt stack 0
  1334  0000B8                     I2C_Master_Write@d:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x38
  1338  0000B8                     	ds	1
  1339  0000B9                     lcdInst@data:
  1340                           	opt stack 0
  1341  0000B9                     putch@data:
  1342                           	opt stack 0
  1343  0000B9                     I2C_Master_Read@temp:
  1344                           	opt stack 0
  1345  0000B9                     isdigit@c:
  1346                           	opt stack 0
  1347  0000B9                     Eeprom_WriteByte@data:
  1348                           	opt stack 0
  1349  0000B9                     ___awmod@divisor:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x39
  1353  0000B9                     	ds	1
  1354  0000BA                     ??_initLCD:
  1355  0000BA                     ___ftpack@exp:
  1356                           	opt stack 0
  1357  0000BA                     __div_to_l_@f2:
  1358                           	opt stack 0
  1359  0000BA                     __tdiv_to_l_@f2:
  1360                           	opt stack 0
  1361  0000BA                     ___ftge@ff2:
  1362                           	opt stack 0
  1363                           
  1364                           ; 3 bytes @ 0x3A
  1365  0000BA                     	ds	1
  1366  0000BB                     ___awmod@counter:
  1367                           	opt stack 0
  1368  0000BB                     ___ftpack@sign:
  1369                           	opt stack 0
  1370  0000BB                     ___lldiv@divisor:
  1371                           	opt stack 0
  1372                           
  1373                           ; 4 bytes @ 0x3B
  1374  0000BB                     	ds	1
  1375  0000BC                     ??___ftpack:
  1376  0000BC                     ___awmod@sign:
  1377                           	opt stack 0
  1378                           
  1379                           ; 1 bytes @ 0x3C
  1380  0000BC                     	ds	1
  1381  0000BD                     ??__tdiv_to_l_:
  1382  0000BD                     ??___ftge:
  1383  0000BD                     ?___awdiv:
  1384                           	opt stack 0
  1385  0000BD                     ___awdiv@dividend:
  1386                           	opt stack 0
  1387  0000BD                     __div_to_l_@quot:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0x3D
  1391  0000BD                     	ds	2
  1392  0000BF                     ?___lltoft:
  1393                           	opt stack 0
  1394  0000BF                     ___awdiv@divisor:
  1395                           	opt stack 0
  1396  0000BF                     ___lldiv@quotient:
  1397                           	opt stack 0
  1398  0000BF                     ___lltoft@c:
  1399                           	opt stack 0
  1400                           
  1401                           ; 4 bytes @ 0x3F
  1402  0000BF                     	ds	1
  1403  0000C0                     __tdiv_to_l_@quot:
  1404                           	opt stack 0
  1405                           
  1406                           ; 4 bytes @ 0x40
  1407  0000C0                     	ds	1
  1408  0000C1                     ___awdiv@counter:
  1409                           	opt stack 0
  1410  0000C1                     __div_to_l_@cntr:
  1411                           	opt stack 0
  1412                           
  1413                           ; 1 bytes @ 0x41
  1414  0000C1                     	ds	1
  1415  0000C2                     ___awdiv@sign:
  1416                           	opt stack 0
  1417  0000C2                     __div_to_l_@exp1:
  1418                           	opt stack 0
  1419                           
  1420                           ; 1 bytes @ 0x42
  1421  0000C2                     	ds	1
  1422  0000C3                     ??___lltoft:
  1423  0000C3                     ___lldiv@counter:
  1424                           	opt stack 0
  1425  0000C3                     ___awdiv@quotient:
  1426                           	opt stack 0
  1427                           
  1428                           ; 2 bytes @ 0x43
  1429  0000C3                     	ds	1
  1430  0000C4                     __tdiv_to_l_@cntr:
  1431                           	opt stack 0
  1432  0000C4                     ___llmod@counter:
  1433                           	opt stack 0
  1434                           
  1435                           ; 1 bytes @ 0x44
  1436  0000C4                     	ds	1
  1437  0000C5                     ___awtoft@sign:
  1438                           	opt stack 0
  1439  0000C5                     __tdiv_to_l_@exp1:
  1440                           	opt stack 0
  1441  0000C5                     ___wmul@product:
  1442                           	opt stack 0
  1443                           
  1444                           ; 2 bytes @ 0x45
  1445  0000C5                     	ds	2
  1446  0000C7                     tblptru	equ	0xFF8
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           
  1450                           ; 1 bytes @ 0x47
  1451                           
  1452                           	psect	cstackCOMRAM
  1453  000001                     __pcstackCOMRAM:
  1454                           	opt stack 0
  1455  000001                     ??i2_rotate90:
  1456  000001                     ??i2_rotate180:
  1457  000001                     ??i2_rotate270:
  1458  000001                     ??i2_dc_forward:
  1459  000001                     ??i2_dc_reverse:
  1460  000001                     ??i2_readADC:
  1461  000001                     ??i2_isdigit:
  1462  000001                     ?i2___awmod:
  1463                           	opt stack 0
  1464  000001                     ?i2___ftpack:
  1465                           	opt stack 0
  1466  000001                     ?i2___ftneg:
  1467                           	opt stack 0
  1468  000001                     ?i2__div_to_l_:
  1469                           	opt stack 0
  1470  000001                     ?i2__tdiv_to_l_:
  1471                           	opt stack 0
  1472  000001                     ?i2___lldiv:
  1473                           	opt stack 0
  1474  000001                     i2lcdNibble@temp:
  1475                           	opt stack 0
  1476  000001                     i2___awmod@dividend:
  1477                           	opt stack 0
  1478  000001                     i2__div_to_l_@f1:
  1479                           	opt stack 0
  1480  000001                     i2___ftpack@arg:
  1481                           	opt stack 0
  1482  000001                     i2__tdiv_to_l_@f1:
  1483                           	opt stack 0
  1484  000001                     i2___ftge@ff1:
  1485                           	opt stack 0
  1486  000001                     i2___ftneg@f1:
  1487                           	opt stack 0
  1488  000001                     i2___lldiv@dividend:
  1489                           	opt stack 0
  1490                           
  1491                           ; 4 bytes @ 0x0
  1492  000001                     	ds	1
  1493  000002                     i2lcdNibble@data:
  1494                           	opt stack 0
  1495  000002                     i2readADC@channel:
  1496                           	opt stack 0
  1497  000002                     i2_isdigit$1152:
  1498                           	opt stack 0
  1499  000002                     i2rotate90@i:
  1500                           	opt stack 0
  1501  000002                     i2rotate180@i:
  1502                           	opt stack 0
  1503  000002                     i2rotate270@i:
  1504                           	opt stack 0
  1505  000002                     i2dc_forward@i:
  1506                           	opt stack 0
  1507  000002                     i2dc_reverse@i:
  1508                           	opt stack 0
  1509                           
  1510                           ; 2 bytes @ 0x1
  1511  000002                     	ds	1
  1512  000003                     i2lcdInst@data:
  1513                           	opt stack 0
  1514  000003                     i2putch@data:
  1515                           	opt stack 0
  1516  000003                     i2isdigit@c:
  1517                           	opt stack 0
  1518  000003                     i2___awmod@divisor:
  1519                           	opt stack 0
  1520                           
  1521                           ; 2 bytes @ 0x2
  1522  000003                     	ds	1
  1523  000004                     ??i2_initLCD:
  1524  000004                     i2___ftpack@exp:
  1525                           	opt stack 0
  1526  000004                     i2__div_to_l_@f2:
  1527                           	opt stack 0
  1528  000004                     i2__tdiv_to_l_@f2:
  1529                           	opt stack 0
  1530  000004                     i2___ftge@ff2:
  1531                           	opt stack 0
  1532                           
  1533                           ; 3 bytes @ 0x3
  1534  000004                     	ds	1
  1535  000005                     i2___awmod@counter:
  1536                           	opt stack 0
  1537  000005                     i2___ftpack@sign:
  1538                           	opt stack 0
  1539  000005                     i2___lldiv@divisor:
  1540                           	opt stack 0
  1541                           
  1542                           ; 4 bytes @ 0x4
  1543  000005                     	ds	1
  1544  000006                     ??i2___ftpack:
  1545  000006                     i2___awmod@sign:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x5
  1549  000006                     	ds	1
  1550  000007                     ??i2__tdiv_to_l_:
  1551  000007                     ??i2___ftge:
  1552  000007                     ?i2___awdiv:
  1553                           	opt stack 0
  1554  000007                     i2___awdiv@dividend:
  1555                           	opt stack 0
  1556  000007                     i2__div_to_l_@quot:
  1557                           	opt stack 0
  1558                           
  1559                           ; 4 bytes @ 0x6
  1560  000007                     	ds	2
  1561  000009                     ?i2___lltoft:
  1562                           	opt stack 0
  1563  000009                     i2___awdiv@divisor:
  1564                           	opt stack 0
  1565  000009                     i2___lldiv@quotient:
  1566                           	opt stack 0
  1567  000009                     i2___lltoft@c:
  1568                           	opt stack 0
  1569                           
  1570                           ; 4 bytes @ 0x8
  1571  000009                     	ds	1
  1572  00000A                     i2__tdiv_to_l_@quot:
  1573                           	opt stack 0
  1574                           
  1575                           ; 4 bytes @ 0x9
  1576  00000A                     	ds	1
  1577  00000B                     i2___awdiv@counter:
  1578                           	opt stack 0
  1579  00000B                     i2__div_to_l_@cntr:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0xA
  1583  00000B                     	ds	1
  1584  00000C                     i2___awdiv@sign:
  1585                           	opt stack 0
  1586  00000C                     i2__div_to_l_@exp1:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0xB
  1590  00000C                     	ds	1
  1591  00000D                     ??i2___lltoft:
  1592  00000D                     i2___lldiv@counter:
  1593                           	opt stack 0
  1594  00000D                     i2___awdiv@quotient:
  1595                           	opt stack 0
  1596                           
  1597                           ; 2 bytes @ 0xC
  1598  00000D                     	ds	1
  1599  00000E                     ?i2___llmod:
  1600                           	opt stack 0
  1601  00000E                     i2__tdiv_to_l_@cntr:
  1602                           	opt stack 0
  1603  00000E                     i2___llmod@dividend:
  1604                           	opt stack 0
  1605                           
  1606                           ; 4 bytes @ 0xD
  1607  00000E                     	ds	1
  1608  00000F                     ?i2___wmul:
  1609                           	opt stack 0
  1610  00000F                     ?i2___awtoft:
  1611                           	opt stack 0
  1612  00000F                     i2__tdiv_to_l_@exp1:
  1613                           	opt stack 0
  1614  00000F                     i2___wmul@multiplier:
  1615                           	opt stack 0
  1616  00000F                     i2___awtoft@c:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0xE
  1620  00000F                     	ds	2
  1621  000011                     i2___lltoft@exp:
  1622                           	opt stack 0
  1623  000011                     i2___wmul@multiplicand:
  1624                           	opt stack 0
  1625                           
  1626                           ; 2 bytes @ 0x10
  1627  000011                     	ds	1
  1628  000012                     i2___awtoft@sign:
  1629                           	opt stack 0
  1630  000012                     i2___llmod@divisor:
  1631                           	opt stack 0
  1632                           
  1633                           ; 4 bytes @ 0x11
  1634  000012                     	ds	1
  1635  000013                     ?i2___ftdiv:
  1636                           	opt stack 0
  1637  000013                     i2___wmul@product:
  1638                           	opt stack 0
  1639  000013                     i2___ftdiv@f1:
  1640                           	opt stack 0
  1641                           
  1642                           ; 3 bytes @ 0x12
  1643  000013                     	ds	2
  1644  000015                     ?i2___ftmul:
  1645                           	opt stack 0
  1646  000015                     i2___ftmul@f1:
  1647                           	opt stack 0
  1648                           
  1649                           ; 3 bytes @ 0x14
  1650  000015                     	ds	1
  1651  000016                     i2___llmod@counter:
  1652                           	opt stack 0
  1653  000016                     i2___ftdiv@f2:
  1654                           	opt stack 0
  1655                           
  1656                           ; 3 bytes @ 0x15
  1657  000016                     	ds	2
  1658  000018                     i2___ftmul@f2:
  1659                           	opt stack 0
  1660                           
  1661                           ; 3 bytes @ 0x17
  1662  000018                     	ds	1
  1663  000019                     ??i2___ftdiv:
  1664                           
  1665                           ; 1 bytes @ 0x18
  1666  000019                     	ds	2
  1667  00001B                     ??i2___ftmul:
  1668                           
  1669                           ; 1 bytes @ 0x1A
  1670  00001B                     	ds	1
  1671  00001C                     i2___ftdiv@cntr:
  1672                           	opt stack 0
  1673                           
  1674                           ; 1 bytes @ 0x1B
  1675  00001C                     	ds	1
  1676  00001D                     i2___ftdiv@f3:
  1677                           	opt stack 0
  1678                           
  1679                           ; 3 bytes @ 0x1C
  1680  00001D                     	ds	1
  1681  00001E                     i2___ftmul@exp:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x1D
  1685  00001E                     	ds	1
  1686  00001F                     i2___ftmul@f3_as_product:
  1687                           	opt stack 0
  1688                           
  1689                           ; 3 bytes @ 0x1E
  1690  00001F                     	ds	1
  1691  000020                     i2___ftdiv@exp:
  1692                           	opt stack 0
  1693                           
  1694                           ; 1 bytes @ 0x1F
  1695  000020                     	ds	1
  1696  000021                     i2___ftdiv@sign:
  1697                           	opt stack 0
  1698                           
  1699                           ; 1 bytes @ 0x20
  1700  000021                     	ds	1
  1701  000022                     i2___ftmul@cntr:
  1702                           	opt stack 0
  1703                           
  1704                           ; 1 bytes @ 0x21
  1705  000022                     	ds	1
  1706  000023                     i2___ftmul@sign:
  1707                           	opt stack 0
  1708                           
  1709                           ; 1 bytes @ 0x22
  1710  000023                     	ds	1
  1711  000024                     ?i2_fround:
  1712                           	opt stack 0
  1713  000024                     ?i2_scale:
  1714                           	opt stack 0
  1715  000024                     ?i2___fttol:
  1716                           	opt stack 0
  1717  000024                     i2___fttol@f1:
  1718                           	opt stack 0
  1719                           
  1720                           ; 3 bytes @ 0x23
  1721  000024                     	ds	3
  1722  000027                     i2_fround$1726:
  1723                           	opt stack 0
  1724  000027                     i2_scale$1727:
  1725                           	opt stack 0
  1726                           
  1727                           ; 3 bytes @ 0x26
  1728  000027                     	ds	1
  1729  000028                     ??i2___fttol:
  1730                           
  1731                           ; 1 bytes @ 0x27
  1732  000028                     	ds	2
  1733  00002A                     i2scale@scl:
  1734                           	opt stack 0
  1735  00002A                     i2_fround$1725:
  1736                           	opt stack 0
  1737                           
  1738                           ; 3 bytes @ 0x29
  1739  00002A                     	ds	3
  1740  00002D                     i2fround@prec:
  1741                           	opt stack 0
  1742  00002D                     i2___fttol@sign1:
  1743                           	opt stack 0
  1744                           
  1745                           ; 1 bytes @ 0x2C
  1746  00002D                     	ds	1
  1747  00002E                     ?i2___ftadd:
  1748                           	opt stack 0
  1749  00002E                     i2___ftadd@f1:
  1750                           	opt stack 0
  1751  00002E                     i2___fttol@lval:
  1752                           	opt stack 0
  1753                           
  1754                           ; 4 bytes @ 0x2D
  1755  00002E                     	ds	3
  1756  000031                     i2___ftadd@f2:
  1757                           	opt stack 0
  1758                           
  1759                           ; 3 bytes @ 0x30
  1760  000031                     	ds	1
  1761  000032                     i2___fttol@exp1:
  1762                           	opt stack 0
  1763                           
  1764                           ; 1 bytes @ 0x31
  1765  000032                     	ds	1
  1766  000033                     ?i2_ultrasonicFindBottle:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x32
  1770  000033                     	ds	1
  1771  000034                     ??i2___ftadd:
  1772                           
  1773                           ; 1 bytes @ 0x33
  1774  000034                     	ds	1
  1775  000035                     ??i2_ultrasonicFindBottle:
  1776                           
  1777                           ; 1 bytes @ 0x34
  1778  000035                     	ds	2
  1779  000037                     i2___ftadd@sign:
  1780                           	opt stack 0
  1781                           
  1782                           ; 1 bytes @ 0x36
  1783  000037                     	ds	1
  1784  000038                     i2___ftadd@exp2:
  1785                           	opt stack 0
  1786                           
  1787                           ; 1 bytes @ 0x37
  1788  000038                     	ds	1
  1789  000039                     i2___ftadd@exp1:
  1790                           	opt stack 0
  1791  000039                     i2ultrasonicFindBottle@a:
  1792                           	opt stack 0
  1793                           
  1794                           ; 2 bytes @ 0x38
  1795  000039                     	ds	1
  1796  00003A                     ?i2___ftsub:
  1797                           	opt stack 0
  1798  00003A                     i2___ftsub@f1:
  1799                           	opt stack 0
  1800                           
  1801                           ; 3 bytes @ 0x39
  1802  00003A                     	ds	3
  1803  00003D                     i2___ftsub@f2:
  1804                           	opt stack 0
  1805                           
  1806                           ; 3 bytes @ 0x3C
  1807  00003D                     	ds	3
  1808  000040                     ?i2_printf:
  1809                           	opt stack 0
  1810  000040                     i2printf@f:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x3F
  1814  000040                     	ds	8
  1815  000048                     ??i2_printf:
  1816                           
  1817                           ; 1 bytes @ 0x47
  1818  000048                     	ds	6
  1819  00004E                     i2_printf$1728:
  1820                           	opt stack 0
  1821                           
  1822                           ; 3 bytes @ 0x4D
  1823  00004E                     	ds	3
  1824  000051                     i2printf@idx:
  1825                           	opt stack 0
  1826                           
  1827                           ; 1 bytes @ 0x50
  1828  000051                     	ds	1
  1829  000052                     i2printf@cp:
  1830                           	opt stack 0
  1831                           
  1832                           ; 2 bytes @ 0x51
  1833  000052                     	ds	2
  1834  000054                     i2printf@len:
  1835                           	opt stack 0
  1836                           
  1837                           ; 2 bytes @ 0x53
  1838  000054                     	ds	2
  1839  000056                     i2printf@ap:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x55
  1843  000056                     	ds	2
  1844  000058                     i2printf@prec:
  1845                           	opt stack 0
  1846                           
  1847                           ; 2 bytes @ 0x57
  1848  000058                     	ds	2
  1849  00005A                     i2printf@tmpval:
  1850                           	opt stack 0
  1851                           
  1852                           ; 4 bytes @ 0x59
  1853  00005A                     	ds	4
  1854  00005E                     i2printf@exp:
  1855                           	opt stack 0
  1856                           
  1857                           ; 2 bytes @ 0x5D
  1858  00005E                     	ds	2
  1859  000060                     i2printf@val:
  1860                           	opt stack 0
  1861                           
  1862                           ; 4 bytes @ 0x5F
  1863  000060                     	ds	4
  1864  000064                     i2printf@flag:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x63
  1868  000064                     	ds	2
  1869  000066                     i2printf@fval:
  1870                           	opt stack 0
  1871                           
  1872                           ; 3 bytes @ 0x65
  1873  000066                     	ds	3
  1874  000069                     i2printf@width:
  1875                           	opt stack 0
  1876                           
  1877                           ; 2 bytes @ 0x68
  1878  000069                     	ds	2
  1879  00006B                     i2printf@c:
  1880                           	opt stack 0
  1881                           
  1882                           ; 1 bytes @ 0x6A
  1883  00006B                     	ds	1
  1884  00006C                     ??_keypressed:
  1885                           
  1886                           ; 1 bytes @ 0x6B
  1887  00006C                     	ds	15
  1888                           tblptru	equ	0xFF8
  1889                           postinc0	equ	0xFEE
  1890                           wreg	equ	0xFE8
  1891                           
  1892 ;;
  1893 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1894 ;;
  1895 ;; *************** function _main *****************
  1896 ;; Defined at:
  1897 ;;		line 49 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  ec              2  177[BANK1 ] int 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels required when called:   11
  1917 ;; This function calls:
  1918 ;;		_Eeprom_ReadByte
  1919 ;;		_I2C_Master_Init
  1920 ;;		_dc_stop
  1921 ;;		_initLCD
  1922 ;;		_lcdInst
  1923 ;;		_printRTC
  1924 ;;		_printf
  1925 ;;		_sort
  1926 ;; This function is called by:
  1927 ;;		Startup code after reset
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text0
  1932  004ED8                     __ptext0:
  1933                           	opt stack 0
  1934  004ED8                     _main:
  1935                           	opt stack 20
  1936                           
  1937                           ;main.c: 52: TRISA = 0xFF;
  1938                           
  1939                           ;incstack = 0
  1940  004ED8  6892               	setf	3986,c	;volatile
  1941                           
  1942                           ;main.c: 53: TRISB = 0xFF;
  1943  004EDA  6893               	setf	3987,c	;volatile
  1944                           
  1945                           ;main.c: 54: TRISC = 0x00;
  1946  004EDC  0E00               	movlw	0
  1947  004EDE  6E94               	movwf	3988,c	;volatile
  1948                           
  1949                           ;main.c: 55: TRISD = 0x00;
  1950  004EE0  0E00               	movlw	0
  1951  004EE2  6E95               	movwf	3989,c	;volatile
  1952                           
  1953                           ;main.c: 56: TRISE = 0b00000010;
  1954  004EE4  0E02               	movlw	2
  1955  004EE6  6E96               	movwf	3990,c	;volatile
  1956                           
  1957                           ;main.c: 58: T1CON = 0x10;
  1958  004EE8  0E10               	movlw	16
  1959  004EEA  6ECD               	movwf	4045,c	;volatile
  1960                           
  1961                           ;main.c: 59: T0CON = 0x80;
  1962  004EEC  0E80               	movlw	128
  1963  004EEE  6ED5               	movwf	4053,c	;volatile
  1964                           
  1965                           ;main.c: 61: ADCON0 = 0x00;
  1966  004EF0  0E00               	movlw	0
  1967  004EF2  6EC2               	movwf	4034,c	;volatile
  1968                           
  1969                           ;main.c: 62: ADCON1 = 0x0D;
  1970  004EF4  0E0D               	movlw	13
  1971  004EF6  6EC1               	movwf	4033,c	;volatile
  1972                           
  1973                           ;main.c: 63: INT1IE = 1;
  1974  004EF8  86F0               	bsf	intcon3,3,c	;volatile
  1975                           
  1976                           ;main.c: 68: {
  1977                           ;main.c: 70: LATCbits.LATC0 = 1;
  1978                           
  1979                           ;main.c: 67: while (1)
  1980  004EFA  808B               	bsf	3979,0,c	;volatile
  1981                           
  1982                           ;main.c: 71: LATCbits.LATC7 = 0;
  1983  004EFC  9E8B               	bcf	3979,7,c	;volatile
  1984                           
  1985                           ;main.c: 72: dc_stop();
  1986  004EFE  EC14  F02F         	call	_dc_stop	;wreg free
  1987                           
  1988                           ;main.c: 75: initLCD();
  1989  004F02  EC95  F02C         	call	_initLCD	;wreg free
  1990                           
  1991                           ;main.c: 76: I2C_Master_Init(10000);
  1992  004F06  0E10               	movlw	16
  1993  004F08  0101               	movlb	1	; () banked
  1994  004F0A  6F00               	movwf	I2C_Master_Init@c& (0+255),b
  1995  004F0C  0E27               	movlw	39
  1996  004F0E  6F01               	movwf	(I2C_Master_Init@c+1)& (0+255),b
  1997  004F10  0E00               	movlw	0
  1998  004F12  6F02               	movwf	(I2C_Master_Init@c+2)& (0+255),b
  1999  004F14  0E00               	movlw	0
  2000  004F16  6F03               	movwf	(I2C_Master_Init@c+3)& (0+255),b
  2001  004F18  EC26  F02B         	call	_I2C_Master_Init	;wreg free
  2002                           
  2003                           ;main.c: 78: (INTCONbits.GIE = 1);
  2004  004F1C  8EF2               	bsf	intcon,7,c	;volatile
  2005  004F1E                     l8164:
  2006                           
  2007                           ;main.c: 81: lcdInst(0b10000000);
  2008  004F1E  0E80               	movlw	128
  2009  004F20  ECF3  F02E         	call	_lcdInst
  2010                           
  2011                           ;main.c: 82: printf("1:Start; 2:Logs");
  2012  004F24  0E68               	movlw	low STR_1
  2013  004F26  0101               	movlb	1	; () banked
  2014  004F28  6F2F               	movwf	printf@f& (0+255),b
  2015  004F2A  0EFF               	movlw	high STR_1
  2016  004F2C  0101               	movlb	1	; () banked
  2017  004F2E  6F30               	movwf	(printf@f+1)& (0+255),b
  2018  004F30  EC09  F000         	call	_printf	;wreg free
  2019                           
  2020                           ;main.c: 83: printRTC();
  2021  004F34  EC40  F024         	call	_printRTC	;wreg free
  2022                           
  2023                           ;main.c: 84: if (sorting == 1) {
  2024  004F38  0101               	movlb	1	; () banked
  2025  004F3A  05C0               	decf	_sorting& (0+255),w,b
  2026  004F3C  0101               	movlb	1	; () banked
  2027  004F3E  11C1               	iorwf	(_sorting+1)& (0+255),w,b
  2028  004F40  A4D8               	btfss	status,2,c
  2029  004F42  D007               	goto	l8176
  2030                           
  2031                           ; BSR set to: 1
  2032                           ;main.c: 85: sort();
  2033  004F44  EC3D  F006         	call	_sort	;wreg free
  2034                           
  2035                           ;main.c: 86: sorting = 0;
  2036  004F48  0E00               	movlw	0
  2037  004F4A  0101               	movlb	1	; () banked
  2038  004F4C  6FC1               	movwf	(_sorting+1)& (0+255),b
  2039  004F4E  0E00               	movlw	0
  2040  004F50  6FC0               	movwf	_sorting& (0+255),b
  2041  004F52                     l8176:
  2042                           
  2043                           ; BSR set to: 1
  2044                           ;main.c: 87: }
  2045                           ;main.c: 88: if (logs == 1) {
  2046  004F52  0101               	movlb	1	; () banked
  2047  004F54  05BE               	decf	_logs& (0+255),w,b
  2048  004F56  0101               	movlb	1	; () banked
  2049  004F58  11BF               	iorwf	(_logs+1)& (0+255),w,b
  2050  004F5A  A4D8               	btfss	status,2,c
  2051  004F5C  D7E0               	goto	l8164
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;main.c: 89: int ec = Eeprom_ReadByte(1);
  2055  004F5E  0E00               	movlw	0
  2056  004F60  0100               	movlb	0	; () banked
  2057  004F62  6FB8               	movwf	(Eeprom_ReadByte@address+1)& (0+255),b
  2058  004F64  0E01               	movlw	1
  2059  004F66  6FB7               	movwf	Eeprom_ReadByte@address& (0+255),b
  2060  004F68  ECC3  F02E         	call	_Eeprom_ReadByte	;wreg free
  2061  004F6C  C0B7  F1B1         	movff	?_Eeprom_ReadByte,main@ec
  2062  004F70  C0B8  F1B2         	movff	?_Eeprom_ReadByte+1,main@ec+1
  2063                           
  2064                           ;main.c: 90: printf("%d", ec);
  2065  004F74  0ED1               	movlw	low (STR_14+6)
  2066  004F76  0101               	movlb	1	; () banked
  2067  004F78  6F2F               	movwf	printf@f& (0+255),b
  2068  004F7A  0EFF               	movlw	high (STR_14+6)
  2069  004F7C  0101               	movlb	1	; () banked
  2070  004F7E  6F30               	movwf	(printf@f+1)& (0+255),b
  2071  004F80  C1B1  F131         	movff	main@ec,?_printf+2
  2072  004F84  C1B2  F132         	movff	main@ec+1,?_printf+3
  2073  004F88  EC09  F000         	call	_printf	;wreg free
  2074                           
  2075                           ;main.c: 92: logs = 0;
  2076  004F8C  0E00               	movlw	0
  2077  004F8E  0101               	movlb	1	; () banked
  2078  004F90  6FBF               	movwf	(_logs+1)& (0+255),b
  2079  004F92  0E00               	movlw	0
  2080  004F94  6FBE               	movwf	_logs& (0+255),b
  2081                           
  2082                           ; BSR set to: 1
  2083                           
  2084                           ; BSR set to: 1
  2085  004F96  D7C3               	goto	l8164
  2086  004F98                     __end_of_main:
  2087                           	opt stack 0
  2088                           tblptru	equ	0xFF8
  2089                           intcon	equ	0xFF2
  2090                           intcon3	equ	0xFF0
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           status	equ	0xFD8
  2094                           
  2095 ;; *************** function _sort *****************
  2096 ;; Defined at:
  2097 ;;		line 141 in file "start.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  i               2  139[BANK1 ] int 
  2102 ;;  lightVolt       3  113[BANK1 ] float 
  2103 ;;  lightVolt       3  116[BANK1 ] float 
  2104 ;;  x               2  128[BANK1 ] int 
  2105 ;;  i               2  137[BANK1 ] int 
  2106 ;;  i               2  135[BANK1 ] int 
  2107 ;;  lightVolt       3  119[BANK1 ] float 
  2108 ;;  i               2  145[BANK1 ] int 
  2109 ;;  i               2  143[BANK1 ] int 
  2110 ;;  i               2  141[BANK1 ] int 
  2111 ;;  lightVoltSum    3  166[BANK1 ] float 
  2112 ;;  i               2  157[BANK1 ] int 
  2113 ;;  i               2  155[BANK1 ] int 
  2114 ;;  i               2  153[BANK1 ] int 
  2115 ;;  i               2  151[BANK1 ] int 
  2116 ;;  i               2  149[BANK1 ] int 
  2117 ;;  i               2  147[BANK1 ] int 
  2118 ;;  lightVoltSum    3  169[BANK1 ] float 
  2119 ;;  lightVoltSum    3  172[BANK1 ] float 
  2120 ;;  proxVolt        3  163[BANK1 ] float 
  2121 ;;  IRVolt          3  130[BANK1 ] float 
  2122 ;;  numRotations    2  175[BANK1 ] int 
  2123 ;;  timer           2  126[BANK1 ] int 
  2124 ;;  bottleFound     2  124[BANK1 ] int 
  2125 ;;  timeExceeded    2  111[BANK1 ] int 
  2126 ;;  i               2  133[BANK1 ] int 
  2127 ;;  bottle          2  161[BANK1 ] int 
  2128 ;;  done            2  159[BANK1 ] int 
  2129 ;;  currentConta    2  122[BANK1 ] int 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:       69 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:   10
  2146 ;; This function calls:
  2147 ;;		_Eeprom_WriteByte
  2148 ;;		___awdiv
  2149 ;;		___awtoft
  2150 ;;		___ftadd
  2151 ;;		___ftdiv
  2152 ;;		___ftge
  2153 ;;		___ftmul
  2154 ;;		_dc_forward
  2155 ;;		_dc_reverse
  2156 ;;		_dc_stop
  2157 ;;		_displayLog
  2158 ;;		_initLCD
  2159 ;;		_lcdInst
  2160 ;;		_printf
  2161 ;;		_readADC
  2162 ;;		_resetCounts
  2163 ;;		_rotate180
  2164 ;;		_rotate270
  2165 ;;		_rotate90
  2166 ;;		_ultrasonicFindBottle
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text1
  2173  000C7A                     __ptext1:
  2174                           	opt stack 0
  2175  000C7A                     _sort:
  2176                           	opt stack 20
  2177                           
  2178                           ;start.c: 144: int bottle;
  2179                           ;start.c: 145: int currentContainer = 0;
  2180                           
  2181                           ; BSR set to: 1
  2182                           ;incstack = 0
  2183  000C7A  0E00               	movlw	0
  2184  000C7C  0101               	movlb	1	; () banked
  2185  000C7E  6F7B               	movwf	(sort@currentContainer+1)& (0+255),b
  2186  000C80  0E00               	movlw	0
  2187  000C82  6F7A               	movwf	sort@currentContainer& (0+255),b
  2188                           
  2189                           ;start.c: 146: timeElapsed = 0;
  2190  000C84  0E00               	movlw	0
  2191  000C86  0100               	movlb	0	; () banked
  2192  000C88  6FC8               	movwf	(_timeElapsed+1)& (0+255),b
  2193  000C8A  0E00               	movlw	0
  2194  000C8C  6FC7               	movwf	_timeElapsed& (0+255),b
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;start.c: 147: resetCounts();
  2198  000C8E  ECF2  F02D         	call	_resetCounts	;wreg free
  2199                           
  2200                           ;start.c: 149: for (int i = 0; i < 50; i++) {
  2201  000C92  0E00               	movlw	0
  2202  000C94  0101               	movlb	1	; () banked
  2203  000C96  6F86               	movwf	(sort@i+1)& (0+255),b
  2204  000C98  0E00               	movlw	0
  2205  000C9A  6F85               	movwf	sort@i& (0+255),b
  2206  000C9C                     l7872:
  2207                           
  2208                           ; BSR set to: 1
  2209  000C9C  0101               	movlb	1	; () banked
  2210  000C9E  BF86               	btfsc	(sort@i+1)& (0+255),7,b
  2211  000CA0  D008               	goto	l301
  2212  000CA2  0101               	movlb	1	; () banked
  2213  000CA4  5186               	movf	(sort@i+1)& (0+255),w,b
  2214  000CA6  E11D               	bnz	l7882
  2215  000CA8  0E32               	movlw	50
  2216  000CAA  0101               	movlb	1	; () banked
  2217  000CAC  5D85               	subwf	sort@i& (0+255),w,b
  2218  000CAE  B0D8               	btfsc	status,0,c
  2219  000CB0  D018               	goto	l7882
  2220  000CB2                     l301:
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;start.c: 150: LATCbits.LATC5 = 1;
  2224  000CB2  8A8B               	bsf	3979,5,c	;volatile
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;start.c: 151: _delay((unsigned long)((3200)*(8000000/4000000.0)));
  2228  000CB4  0E09               	movlw	9
  2229  000CB6  0101               	movlb	1	; () banked
  2230  000CB8  6F6C               	movwf	??_sort& (0+255),b
  2231  000CBA  0E4E               	movlw	78
  2232  000CBC                     u11127:
  2233  000CBC  2EE8               	decfsz	wreg,f,c
  2234  000CBE  D7FE               	bra	u11127
  2235  000CC0  2F6C               	decfsz	??_sort& (0+255),f,b
  2236  000CC2  D7FC               	bra	u11127
  2237  000CC4  F000               	nop	
  2238                           
  2239                           ;start.c: 152: LATCbits.LATC5 = 0;
  2240  000CC6  9A8B               	bcf	3979,5,c	;volatile
  2241                           
  2242                           ;start.c: 153: _delay((unsigned long)((18500)*(8000000/4000000.0)));
  2243  000CC8  0E31               	movlw	49
  2244  000CCA  0101               	movlb	1	; () banked
  2245  000CCC  6F6C               	movwf	??_sort& (0+255),b
  2246  000CCE  0E0B               	movlw	11
  2247  000CD0                     u11137:
  2248  000CD0  2EE8               	decfsz	wreg,f,c
  2249  000CD2  D7FE               	bra	u11137
  2250  000CD4  2F6C               	decfsz	??_sort& (0+255),f,b
  2251  000CD6  D7FC               	bra	u11137
  2252  000CD8  D000               	nop2	
  2253  000CDA  0101               	movlb	1	; () banked
  2254  000CDC  4B85               	infsnz	sort@i& (0+255),f,b
  2255  000CDE  2B86               	incf	(sort@i+1)& (0+255),f,b
  2256  000CE0  D7DD               	goto	l7872
  2257  000CE2                     l7882:
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;start.c: 154: }
  2261                           ;start.c: 157: T0CON = 0b00010111;
  2262  000CE2  0E17               	movlw	23
  2263  000CE4  6ED5               	movwf	4053,c	;volatile
  2264                           
  2265                           ;start.c: 158: TMR0H = 0b11011110;
  2266  000CE6  0EDE               	movlw	222
  2267  000CE8  6ED7               	movwf	4055,c	;volatile
  2268                           
  2269                           ;start.c: 159: TMR0L = 0b11010000;
  2270  000CEA  0ED0               	movlw	208
  2271  000CEC  6ED6               	movwf	4054,c	;volatile
  2272                           
  2273                           ; BSR set to: 1
  2274                           ;start.c: 160: T0CON = T0CON | 0b10000000;
  2275  000CEE  50D5               	movf	4053,w,c	;volatile
  2276  000CF0  0980               	iorlw	128
  2277  000CF2  6ED5               	movwf	4053,c	;volatile
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;start.c: 161: TMR0IE = 1;
  2281  000CF4  8AF2               	bsf	intcon,5,c	;volatile
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;start.c: 162: TMR0ON = 1;
  2285  000CF6  8ED5               	bsf	4053,7,c	;volatile
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;start.c: 163: int done = 0;
  2289  000CF8  0E00               	movlw	0
  2290  000CFA  0101               	movlb	1	; () banked
  2291  000CFC  6FA0               	movwf	(sort@done+1)& (0+255),b
  2292  000CFE  0E00               	movlw	0
  2293  000D00  6F9F               	movwf	sort@done& (0+255),b
  2294  000D02                     l7892:
  2295                           
  2296                           ; BSR set to: 1
  2297                           ;start.c: 171: initLCD();
  2298  000D02  EC95  F02C         	call	_initLCD	;wreg free
  2299                           
  2300                           ;start.c: 172: lcdInst(0b11000000);
  2301  000D06  0EC0               	movlw	192
  2302  000D08  ECF3  F02E         	call	_lcdInst
  2303                           
  2304                           ;start.c: 173: printf("ec:%den:%dyc:%dyn:%d", eskaCap, eskaNoCap, yopCap, yopNoCap);
  2305  000D0C  0E31               	movlw	low STR_15
  2306  000D0E  0101               	movlb	1	; () banked
  2307  000D10  6F2F               	movwf	printf@f& (0+255),b
  2308  000D12  0EFF               	movlw	high STR_15
  2309  000D14  0101               	movlb	1	; () banked
  2310  000D16  6F30               	movwf	(printf@f+1)& (0+255),b
  2311  000D18  C1BA  F131         	movff	_eskaCap,?_printf+2
  2312  000D1C  C1BB  F132         	movff	_eskaCap+1,?_printf+3
  2313  000D20  C1BC  F133         	movff	_eskaNoCap,?_printf+4
  2314  000D24  C1BD  F134         	movff	_eskaNoCap+1,?_printf+5
  2315  000D28  C1C2  F135         	movff	_yopCap,?_printf+6
  2316  000D2C  C1C3  F136         	movff	_yopCap+1,?_printf+7
  2317  000D30  C1C4  F137         	movff	_yopNoCap,?_printf+8
  2318  000D34  C1C5  F138         	movff	_yopNoCap+1,?_printf+9
  2319  000D38  EC09  F000         	call	_printf	;wreg free
  2320                           
  2321                           ;start.c: 189: int bottleFound = 0;
  2322  000D3C  0E00               	movlw	0
  2323  000D3E  0101               	movlb	1	; () banked
  2324  000D40  6F7D               	movwf	(sort@bottleFound+1)& (0+255),b
  2325  000D42  0E00               	movlw	0
  2326  000D44  6F7C               	movwf	sort@bottleFound& (0+255),b
  2327                           
  2328                           ; BSR set to: 1
  2329                           ;start.c: 190: int timeExceeded = 0;
  2330  000D46  0E00               	movlw	0
  2331  000D48  0101               	movlb	1	; () banked
  2332  000D4A  6F70               	movwf	(sort@timeExceeded+1)& (0+255),b
  2333  000D4C  0E00               	movlw	0
  2334  000D4E  6F6F               	movwf	sort@timeExceeded& (0+255),b
  2335                           
  2336                           ; BSR set to: 1
  2337                           ;start.c: 191: int timer = 0;
  2338  000D50  0E00               	movlw	0
  2339  000D52  0101               	movlb	1	; () banked
  2340  000D54  6F7F               	movwf	(sort@timer+1)& (0+255),b
  2341  000D56  0E00               	movlw	0
  2342  000D58  6F7E               	movwf	sort@timer& (0+255),b
  2343  000D5A                     l7904:
  2344                           
  2345                           ;start.c: 193: timer = timeElapsed;
  2346  000D5A  C0C7  F17E         	movff	_timeElapsed,sort@timer
  2347  000D5E  C0C8  F17F         	movff	_timeElapsed+1,sort@timer+1
  2348                           
  2349                           ;start.c: 194: dc_forward();
  2350  000D62  ECD7  F02B         	call	_dc_forward	;wreg free
  2351  000D66                     l7908:
  2352                           
  2353                           ;start.c: 197: if (ultrasonicFindBottle() != 0) {
  2354  000D66  ECEF  F021         	call	_ultrasonicFindBottle	;wreg free
  2355  000D6A  0101               	movlb	1	; () banked
  2356  000D6C  5129               	movf	?_ultrasonicFindBottle& (0+255),w,b
  2357  000D6E  0101               	movlb	1	; () banked
  2358  000D70  112A               	iorwf	(?_ultrasonicFindBottle+1)& (0+255),w,b
  2359  000D72  B4D8               	btfsc	status,2,c
  2360  000D74  D006               	goto	l7912
  2361                           
  2362                           ; BSR set to: 1
  2363                           ;start.c: 198: bottleFound = 1;
  2364  000D76  0E00               	movlw	0
  2365  000D78  0101               	movlb	1	; () banked
  2366  000D7A  6F7D               	movwf	(sort@bottleFound+1)& (0+255),b
  2367  000D7C  0E01               	movlw	1
  2368  000D7E  6F7C               	movwf	sort@bottleFound& (0+255),b
  2369                           
  2370                           ;start.c: 199: break;
  2371  000D80  D02E               	goto	l7920
  2372  000D82                     l7912:
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;start.c: 200: }
  2376                           ;start.c: 201: if ((timeElapsed-timer)>8) {
  2377  000D82  C17E  F16C         	movff	sort@timer,??_sort
  2378  000D86  C17F  F16D         	movff	sort@timer+1,??_sort+1
  2379  000D8A  0101               	movlb	1	; () banked
  2380  000D8C  1F6C               	comf	??_sort& (0+255),f,b
  2381  000D8E  1F6D               	comf	(??_sort+1)& (0+255),f,b
  2382  000D90  4B6C               	infsnz	??_sort& (0+255),f,b
  2383  000D92  2B6D               	incf	(??_sort+1)& (0+255),f,b
  2384  000D94  0100               	movlb	0	; () banked
  2385  000D96  51C7               	movf	_timeElapsed& (0+255),w,b
  2386  000D98  0101               	movlb	1	; () banked
  2387  000D9A  276C               	addwf	??_sort& (0+255),f,b
  2388  000D9C  0100               	movlb	0	; () banked
  2389  000D9E  51C8               	movf	(_timeElapsed+1)& (0+255),w,b
  2390  000DA0  0101               	movlb	1	; () banked
  2391  000DA2  236D               	addwfc	(??_sort+1)& (0+255),f,b
  2392  000DA4  0101               	movlb	1	; () banked
  2393  000DA6  BF6D               	btfsc	(??_sort+1)& (0+255),7,b
  2394  000DA8  D00E               	goto	l7916
  2395  000DAA  0101               	movlb	1	; () banked
  2396  000DAC  516D               	movf	(??_sort+1)& (0+255),w,b
  2397  000DAE  E105               	bnz	u10510
  2398  000DB0  0E09               	movlw	9
  2399  000DB2  0101               	movlb	1	; () banked
  2400  000DB4  5D6C               	subwf	??_sort& (0+255),w,b
  2401  000DB6  A0D8               	btfss	status,0,c
  2402  000DB8  D006               	goto	l7916
  2403  000DBA                     u10510:
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;start.c: 202: timeExceeded = 1;
  2407  000DBA  0E00               	movlw	0
  2408  000DBC  0101               	movlb	1	; () banked
  2409  000DBE  6F70               	movwf	(sort@timeExceeded+1)& (0+255),b
  2410  000DC0  0E01               	movlw	1
  2411  000DC2  6F6F               	movwf	sort@timeExceeded& (0+255),b
  2412                           
  2413                           ;start.c: 203: break;
  2414  000DC4  D00C               	goto	l7920
  2415  000DC6                     l7916:
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;start.c: 204: }
  2419                           ;start.c: 205: if (timeElapsed == 180){
  2420  000DC6  0EB4               	movlw	180
  2421  000DC8  0100               	movlb	0	; () banked
  2422  000DCA  19C7               	xorwf	_timeElapsed& (0+255),w,b
  2423  000DCC  0100               	movlb	0	; () banked
  2424  000DCE  11C8               	iorwf	(_timeElapsed+1)& (0+255),w,b
  2425  000DD0  A4D8               	btfss	status,2,c
  2426  000DD2  D7C9               	goto	l7908
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;start.c: 206: done = 1;
  2430  000DD4  0E00               	movlw	0
  2431  000DD6  0101               	movlb	1	; () banked
  2432  000DD8  6FA0               	movwf	(sort@done+1)& (0+255),b
  2433  000DDA  0E01               	movlw	1
  2434  000DDC  6F9F               	movwf	sort@done& (0+255),b
  2435  000DDE                     l7920:
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;start.c: 208: }
  2439                           ;start.c: 209: }
  2440                           ;start.c: 211: if (done == 1){
  2441  000DDE  0101               	movlb	1	; () banked
  2442  000DE0  059F               	decf	sort@done& (0+255),w,b
  2443  000DE2  0101               	movlb	1	; () banked
  2444  000DE4  11A0               	iorwf	(sort@done+1)& (0+255),w,b
  2445  000DE6  B4D8               	btfsc	status,2,c
  2446  000DE8  D1CF               	goto	l8012
  2447                           
  2448                           ; BSR set to: 1
  2449                           ;start.c: 213: }
  2450                           ;start.c: 215: if (bottleFound) {
  2451                           
  2452                           ; BSR set to: 1
  2453                           
  2454                           ; BSR set to: 1
  2455                           ;start.c: 212: break;
  2456  000DEA  0101               	movlb	1	; () banked
  2457  000DEC  517C               	movf	sort@bottleFound& (0+255),w,b
  2458  000DEE  0101               	movlb	1	; () banked
  2459  000DF0  117D               	iorwf	(sort@bottleFound+1)& (0+255),w,b
  2460  000DF2  B4D8               	btfsc	status,2,c
  2461  000DF4  D0A4               	goto	l7952
  2462                           
  2463                           ; BSR set to: 1
  2464                           ;start.c: 216: for(int i=0;i<400;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  2465  000DF6  0E00               	movlw	0
  2466  000DF8  0101               	movlb	1	; () banked
  2467  000DFA  6F88               	movwf	(sort@i_624+1)& (0+255),b
  2468  000DFC  0E00               	movlw	0
  2469  000DFE  6F87               	movwf	sort@i_624& (0+255),b
  2470  000E00                     l7928:
  2471                           
  2472                           ; BSR set to: 1
  2473  000E00  0101               	movlb	1	; () banked
  2474  000E02  BF88               	btfsc	(sort@i_624+1)& (0+255),7,b
  2475  000E04  D008               	goto	l7932
  2476  000E06  0E90               	movlw	144
  2477  000E08  0101               	movlb	1	; () banked
  2478  000E0A  5D87               	subwf	sort@i_624& (0+255),w,b
  2479  000E0C  0E01               	movlw	1
  2480  000E0E  0101               	movlb	1	; () banked
  2481  000E10  5988               	subwfb	(sort@i_624+1)& (0+255),w,b
  2482  000E12  B0D8               	btfsc	status,0,c
  2483  000E14  D00D               	goto	l7936
  2484  000E16                     l7932:
  2485                           
  2486                           ; BSR set to: 1
  2487  000E16  0E1A               	movlw	26
  2488  000E18  0101               	movlb	1	; () banked
  2489  000E1A  6F6C               	movwf	??_sort& (0+255),b
  2490  000E1C  0EF8               	movlw	248
  2491  000E1E                     u11147:
  2492  000E1E  2EE8               	decfsz	wreg,f,c
  2493  000E20  D7FE               	bra	u11147
  2494  000E22  2F6C               	decfsz	??_sort& (0+255),f,b
  2495  000E24  D7FC               	bra	u11147
  2496  000E26  F000               	nop	
  2497  000E28  0101               	movlb	1	; () banked
  2498  000E2A  4B87               	infsnz	sort@i_624& (0+255),f,b
  2499  000E2C  2B88               	incf	(sort@i_624+1)& (0+255),f,b
  2500  000E2E  D7E8               	goto	l7928
  2501  000E30                     l7936:
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;start.c: 218: float lightVoltSum = 0;
  2505  000E30  0E00               	movlw	0
  2506  000E32  0101               	movlb	1	; () banked
  2507  000E34  6FA6               	movwf	sort@lightVoltSum& (0+255),b
  2508  000E36  0E00               	movlw	0
  2509  000E38  0101               	movlb	1	; () banked
  2510  000E3A  6FA7               	movwf	(sort@lightVoltSum+1)& (0+255),b
  2511  000E3C  0E00               	movlw	0
  2512  000E3E  0101               	movlb	1	; () banked
  2513  000E40  6FA8               	movwf	(sort@lightVoltSum+2)& (0+255),b
  2514                           
  2515                           ;start.c: 219: for (int i = 0; i < 100; i++) {
  2516  000E42  0E00               	movlw	0
  2517  000E44  0101               	movlb	1	; () banked
  2518  000E46  6F8A               	movwf	(sort@i_626+1)& (0+255),b
  2519  000E48  0E00               	movlw	0
  2520  000E4A  6F89               	movwf	sort@i_626& (0+255),b
  2521  000E4C                     l7938:
  2522                           
  2523                           ; BSR set to: 1
  2524  000E4C  0101               	movlb	1	; () banked
  2525  000E4E  BF8A               	btfsc	(sort@i_626+1)& (0+255),7,b
  2526  000E50  D008               	goto	l7942
  2527  000E52  0101               	movlb	1	; () banked
  2528  000E54  518A               	movf	(sort@i_626+1)& (0+255),w,b
  2529  000E56  E148               	bnz	l7948
  2530  000E58  0E64               	movlw	100
  2531  000E5A  0101               	movlb	1	; () banked
  2532  000E5C  5D89               	subwf	sort@i_626& (0+255),w,b
  2533  000E5E  B0D8               	btfsc	status,0,c
  2534  000E60  D043               	goto	l7948
  2535  000E62                     l7942:
  2536                           
  2537                           ; BSR set to: 1
  2538                           ;start.c: 220: readADC(0);
  2539  000E62  0E00               	movlw	0
  2540  000E64  EC3B  F02E         	call	_readADC
  2541                           
  2542                           ;start.c: 221: float lightVolt = (float) ((ADRESH << 8) / 236)*5;
  2543  000E68  0E00               	movlw	0
  2544  000E6A  0100               	movlb	0	; () banked
  2545  000E6C  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2546  000E6E  0EEC               	movlw	236
  2547  000E70  6FBF               	movwf	___awdiv@divisor& (0+255),b
  2548  000E72  50C4               	movf	4036,w,c	;volatile
  2549  000E74  0100               	movlb	0	; () banked
  2550  000E76  6FBE               	movwf	(___awdiv@dividend+1)& (0+255),b
  2551  000E78  6BBD               	clrf	___awdiv@dividend& (0+255),b
  2552  000E7A  ECCC  F027         	call	___awdiv	;wreg free
  2553  000E7E  C0BD  F100         	movff	?___awdiv,___awtoft@c
  2554  000E82  C0BE  F101         	movff	?___awdiv+1,___awtoft@c+1
  2555  000E86  ECDB  F02C         	call	___awtoft	;wreg free
  2556  000E8A  C100  F104         	movff	?___awtoft,___ftmul@f1
  2557  000E8E  C101  F105         	movff	?___awtoft+1,___ftmul@f1+1
  2558  000E92  C102  F106         	movff	?___awtoft+2,___ftmul@f1+2
  2559  000E96  0E00               	movlw	0
  2560  000E98  0101               	movlb	1	; () banked
  2561  000E9A  6F07               	movwf	___ftmul@f2& (0+255),b
  2562  000E9C  0EA0               	movlw	160
  2563  000E9E  0101               	movlb	1	; () banked
  2564  000EA0  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  2565  000EA2  0E40               	movlw	64
  2566  000EA4  0101               	movlb	1	; () banked
  2567  000EA6  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  2568  000EA8  ECF8  F01F         	call	___ftmul	;wreg free
  2569  000EAC  C104  F171         	movff	?___ftmul,sort@lightVolt
  2570  000EB0  C105  F172         	movff	?___ftmul+1,sort@lightVolt+1
  2571  000EB4  C106  F173         	movff	?___ftmul+2,sort@lightVolt+2
  2572                           
  2573                           ;start.c: 222: lightVoltSum += lightVolt;
  2574  000EB8  C1A6  F11D         	movff	sort@lightVoltSum,___ftadd@f1
  2575  000EBC  C1A7  F11E         	movff	sort@lightVoltSum+1,___ftadd@f1+1
  2576  000EC0  C1A8  F11F         	movff	sort@lightVoltSum+2,___ftadd@f1+2
  2577  000EC4  C171  F120         	movff	sort@lightVolt,___ftadd@f2
  2578  000EC8  C172  F121         	movff	sort@lightVolt+1,___ftadd@f2+1
  2579  000ECC  C173  F122         	movff	sort@lightVolt+2,___ftadd@f2+2
  2580  000ED0  EC38  F01B         	call	___ftadd	;wreg free
  2581  000ED4  C11D  F1A6         	movff	?___ftadd,sort@lightVoltSum
  2582  000ED8  C11E  F1A7         	movff	?___ftadd+1,sort@lightVoltSum+1
  2583  000EDC  C11F  F1A8         	movff	?___ftadd+2,sort@lightVoltSum+2
  2584  000EE0  0101               	movlb	1	; () banked
  2585  000EE2  4B89               	infsnz	sort@i_626& (0+255),f,b
  2586  000EE4  2B8A               	incf	(sort@i_626+1)& (0+255),f,b
  2587  000EE6  D7B2               	goto	l7938
  2588  000EE8                     l7948:
  2589                           
  2590                           ; BSR set to: 1
  2591                           ;start.c: 223: }
  2592                           ;start.c: 224: lightVoltSum = lightVoltSum / 1000;
  2593  000EE8  C1A6  F103         	movff	sort@lightVoltSum,___ftdiv@f1
  2594  000EEC  C1A7  F104         	movff	sort@lightVoltSum+1,___ftdiv@f1+1
  2595  000EF0  C1A8  F105         	movff	sort@lightVoltSum+2,___ftdiv@f1+2
  2596  000EF4  0E00               	movlw	0
  2597  000EF6  0101               	movlb	1	; () banked
  2598  000EF8  6F06               	movwf	___ftdiv@f2& (0+255),b
  2599  000EFA  0E7A               	movlw	122
  2600  000EFC  0101               	movlb	1	; () banked
  2601  000EFE  6F07               	movwf	(___ftdiv@f2+1)& (0+255),b
  2602  000F00  0E44               	movlw	68
  2603  000F02  0101               	movlb	1	; () banked
  2604  000F04  6F08               	movwf	(___ftdiv@f2+2)& (0+255),b
  2605  000F06  ECA7  F020         	call	___ftdiv	;wreg free
  2606  000F0A  C103  F1A6         	movff	?___ftdiv,sort@lightVoltSum
  2607  000F0E  C104  F1A7         	movff	?___ftdiv+1,sort@lightVoltSum+1
  2608  000F12  C105  F1A8         	movff	?___ftdiv+2,sort@lightVoltSum+2
  2609                           
  2610                           ;start.c: 226: if (lightVoltSum < 36) {
  2611  000F16  C1A6  F0B7         	movff	sort@lightVoltSum,___ftge@ff1
  2612  000F1A  C1A7  F0B8         	movff	sort@lightVoltSum+1,___ftge@ff1+1
  2613  000F1E  C1A8  F0B9         	movff	sort@lightVoltSum+2,___ftge@ff1+2
  2614  000F22  0E00               	movlw	0
  2615  000F24  0100               	movlb	0	; () banked
  2616  000F26  6FBA               	movwf	___ftge@ff2& (0+255),b
  2617  000F28  0E10               	movlw	16
  2618  000F2A  0100               	movlb	0	; () banked
  2619  000F2C  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  2620  000F2E  0E42               	movlw	66
  2621  000F30  0100               	movlb	0	; () banked
  2622  000F32  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  2623  000F34  EC08  F027         	call	___ftge	;wreg free
  2624  000F38  0100               	movlb	0	; () banked
  2625  000F3A  A0D8               	btfss	status,0,c
  2626  000F3C  D125               	goto	l8012
  2627  000F3E                     l7952:
  2628                           
  2629                           ;start.c: 228: }
  2630                           ;start.c: 229: }
  2631                           ;start.c: 231: if (timeElapsed > 173){
  2632  000F3E  0100               	movlb	0	; () banked
  2633  000F40  BFC8               	btfsc	(_timeElapsed+1)& (0+255),7,b
  2634  000F42  D057               	goto	l7972
  2635  000F44  0100               	movlb	0	; () banked
  2636  000F46  51C8               	movf	(_timeElapsed+1)& (0+255),w,b
  2637  000F48  E105               	bnz	u10600
  2638  000F4A  0EAE               	movlw	174
  2639  000F4C  0100               	movlb	0	; () banked
  2640  000F4E  5DC7               	subwf	_timeElapsed& (0+255),w,b
  2641  000F50  A0D8               	btfss	status,0,c
  2642  000F52  D04F               	goto	l7972
  2643  000F54                     u10600:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;start.c: 232: for (int x = 0; x <= (180-timeElapsed); x++){for(int i=0;i<100;i++){_dela
      +                          y((unsigned long)((10)*(8000000/4000.0)));};}
  2647  000F54  0E00               	movlw	0
  2648  000F56  0101               	movlb	1	; () banked
  2649  000F58  6F81               	movwf	(sort@x+1)& (0+255),b
  2650  000F5A  0E00               	movlw	0
  2651  000F5C  6F80               	movwf	sort@x& (0+255),b
  2652  000F5E  D020               	goto	l7968
  2653  000F60                     l7956:
  2654                           
  2655                           ; BSR set to: 1
  2656  000F60  0E00               	movlw	0
  2657  000F62  0101               	movlb	1	; () banked
  2658  000F64  6F8C               	movwf	(sort@i_629+1)& (0+255),b
  2659  000F66  0E00               	movlw	0
  2660  000F68  6F8B               	movwf	sort@i_629& (0+255),b
  2661  000F6A                     l7958:
  2662                           
  2663                           ; BSR set to: 1
  2664  000F6A  0101               	movlb	1	; () banked
  2665  000F6C  BF8C               	btfsc	(sort@i_629+1)& (0+255),7,b
  2666  000F6E  D008               	goto	l7962
  2667  000F70  0101               	movlb	1	; () banked
  2668  000F72  518C               	movf	(sort@i_629+1)& (0+255),w,b
  2669  000F74  E112               	bnz	l7966
  2670  000F76  0E64               	movlw	100
  2671  000F78  0101               	movlb	1	; () banked
  2672  000F7A  5D8B               	subwf	sort@i_629& (0+255),w,b
  2673  000F7C  B0D8               	btfsc	status,0,c
  2674  000F7E  D00D               	goto	l7966
  2675  000F80                     l7962:
  2676                           
  2677                           ; BSR set to: 1
  2678  000F80  0E1A               	movlw	26
  2679  000F82  0101               	movlb	1	; () banked
  2680  000F84  6F6C               	movwf	??_sort& (0+255),b
  2681  000F86  0EF8               	movlw	248
  2682  000F88                     u11157:
  2683  000F88  2EE8               	decfsz	wreg,f,c
  2684  000F8A  D7FE               	bra	u11157
  2685  000F8C  2F6C               	decfsz	??_sort& (0+255),f,b
  2686  000F8E  D7FC               	bra	u11157
  2687  000F90  F000               	nop	
  2688  000F92  0101               	movlb	1	; () banked
  2689  000F94  4B8B               	infsnz	sort@i_629& (0+255),f,b
  2690  000F96  2B8C               	incf	(sort@i_629+1)& (0+255),f,b
  2691  000F98  D7E8               	goto	l7958
  2692  000F9A                     l7966:
  2693                           
  2694                           ; BSR set to: 1
  2695  000F9A  0101               	movlb	1	; () banked
  2696  000F9C  4B80               	infsnz	sort@x& (0+255),f,b
  2697  000F9E  2B81               	incf	(sort@x+1)& (0+255),f,b
  2698  000FA0                     l7968:
  2699                           
  2700                           ; BSR set to: 1
  2701  000FA0  C0C7  F16C         	movff	_timeElapsed,??_sort
  2702  000FA4  C0C8  F16D         	movff	_timeElapsed+1,??_sort+1
  2703  000FA8  0101               	movlb	1	; () banked
  2704  000FAA  1F6C               	comf	??_sort& (0+255),f,b
  2705  000FAC  1F6D               	comf	(??_sort+1)& (0+255),f,b
  2706  000FAE  4B6C               	infsnz	??_sort& (0+255),f,b
  2707  000FB0  2B6D               	incf	(??_sort+1)& (0+255),f,b
  2708  000FB2  0EB4               	movlw	180
  2709  000FB4  0101               	movlb	1	; () banked
  2710  000FB6  276C               	addwf	??_sort& (0+255),f,b
  2711  000FB8  0E00               	movlw	0
  2712  000FBA  236D               	addwfc	(??_sort+1)& (0+255),f,b
  2713  000FBC  0101               	movlb	1	; () banked
  2714  000FBE  5180               	movf	sort@x& (0+255),w,b
  2715  000FC0  0101               	movlb	1	; () banked
  2716  000FC2  5D6C               	subwf	??_sort& (0+255),w,b
  2717  000FC4  0101               	movlb	1	; () banked
  2718  000FC6  516D               	movf	(??_sort+1)& (0+255),w,b
  2719  000FC8  0A80               	xorlw	128
  2720  000FCA  0101               	movlb	1	; () banked
  2721  000FCC  6F6E               	movwf	(??_sort+2)& (0+255),b
  2722  000FCE  0101               	movlb	1	; () banked
  2723  000FD0  5181               	movf	(sort@x+1)& (0+255),w,b
  2724  000FD2  0A80               	xorlw	128
  2725  000FD4  0101               	movlb	1	; () banked
  2726  000FD6  596E               	subwfb	(??_sort+2)& (0+255),w,b
  2727  000FD8  B0D8               	btfsc	status,0,c
  2728  000FDA  D7C2               	goto	l7956
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;start.c: 233: timeElapsed = 180;
  2732                           
  2733                           ; BSR set to: 1
  2734  000FDC  0E00               	movlw	0
  2735  000FDE  0100               	movlb	0	; () banked
  2736  000FE0  6FC8               	movwf	(_timeElapsed+1)& (0+255),b
  2737  000FE2  0EB4               	movlw	180
  2738  000FE4  6FC7               	movwf	_timeElapsed& (0+255),b
  2739                           
  2740                           ;start.c: 234: done = 1;
  2741  000FE6  0E00               	movlw	0
  2742  000FE8  0101               	movlb	1	; () banked
  2743  000FEA  6FA0               	movwf	(sort@done+1)& (0+255),b
  2744  000FEC  0E01               	movlw	1
  2745  000FEE  6F9F               	movwf	sort@done& (0+255),b
  2746                           
  2747                           ;start.c: 235: break;
  2748  000FF0  D0CB               	goto	l8012
  2749  000FF2                     l7972:
  2750                           
  2751                           ;start.c: 236: }
  2752                           ;start.c: 238: dc_reverse();
  2753  000FF2  ECAF  F02B         	call	_dc_reverse	;wreg free
  2754                           
  2755                           ;start.c: 239: LATCbits.LATC7 = 1;
  2756  000FF6  8E8B               	bsf	3979,7,c	;volatile
  2757                           
  2758                           ;start.c: 240: for(int i=0;i<500;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  2759  000FF8  0E00               	movlw	0
  2760  000FFA  0101               	movlb	1	; () banked
  2761  000FFC  6F8E               	movwf	(sort@i_630+1)& (0+255),b
  2762  000FFE  0E00               	movlw	0
  2763  001000  6F8D               	movwf	sort@i_630& (0+255),b
  2764  001002                     l7978:
  2765                           
  2766                           ; BSR set to: 1
  2767  001002  0101               	movlb	1	; () banked
  2768  001004  BF8E               	btfsc	(sort@i_630+1)& (0+255),7,b
  2769  001006  D008               	goto	l7982
  2770  001008  0EF4               	movlw	244
  2771  00100A  0101               	movlb	1	; () banked
  2772  00100C  5D8D               	subwf	sort@i_630& (0+255),w,b
  2773  00100E  0E01               	movlw	1
  2774  001010  0101               	movlb	1	; () banked
  2775  001012  598E               	subwfb	(sort@i_630+1)& (0+255),w,b
  2776  001014  B0D8               	btfsc	status,0,c
  2777  001016  D00D               	goto	l7986
  2778  001018                     l7982:
  2779                           
  2780                           ; BSR set to: 1
  2781  001018  0E1A               	movlw	26
  2782  00101A  0101               	movlb	1	; () banked
  2783  00101C  6F6C               	movwf	??_sort& (0+255),b
  2784  00101E  0EF8               	movlw	248
  2785  001020                     u11167:
  2786  001020  2EE8               	decfsz	wreg,f,c
  2787  001022  D7FE               	bra	u11167
  2788  001024  2F6C               	decfsz	??_sort& (0+255),f,b
  2789  001026  D7FC               	bra	u11167
  2790  001028  F000               	nop	
  2791  00102A  0101               	movlb	1	; () banked
  2792  00102C  4B8D               	infsnz	sort@i_630& (0+255),f,b
  2793  00102E  2B8E               	incf	(sort@i_630+1)& (0+255),f,b
  2794  001030  D7E8               	goto	l7978
  2795  001032                     l7986:
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;start.c: 241: for(int i=0;i<200;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  2799  001032  0E00               	movlw	0
  2800  001034  0101               	movlb	1	; () banked
  2801  001036  6F90               	movwf	(sort@i_631+1)& (0+255),b
  2802  001038  0E00               	movlw	0
  2803  00103A  6F8F               	movwf	sort@i_631& (0+255),b
  2804                           
  2805                           ; BSR set to: 1
  2806  00103C  0101               	movlb	1	; () banked
  2807  00103E  BF90               	btfsc	(sort@i_631+1)& (0+255),7,b
  2808  001040  D008               	goto	l7992
  2809  001042  0101               	movlb	1	; () banked
  2810  001044  5190               	movf	(sort@i_631+1)& (0+255),w,b
  2811  001046  E118               	bnz	l328
  2812  001048  0EC8               	movlw	200
  2813  00104A  0101               	movlb	1	; () banked
  2814  00104C  5D8F               	subwf	sort@i_631& (0+255),w,b
  2815  00104E  B0D8               	btfsc	status,0,c
  2816  001050  D013               	goto	l328
  2817  001052                     l7992:
  2818                           
  2819                           ; BSR set to: 1
  2820  001052  0E1A               	movlw	26
  2821  001054  0101               	movlb	1	; () banked
  2822  001056  6F6C               	movwf	??_sort& (0+255),b
  2823  001058  0EF8               	movlw	248
  2824  00105A                     u11177:
  2825  00105A  2EE8               	decfsz	wreg,f,c
  2826  00105C  D7FE               	bra	u11177
  2827  00105E  2F6C               	decfsz	??_sort& (0+255),f,b
  2828  001060  D7FC               	bra	u11177
  2829  001062  F000               	nop	
  2830  001064  0101               	movlb	1	; () banked
  2831  001066  4B8F               	infsnz	sort@i_631& (0+255),f,b
  2832  001068  2B90               	incf	(sort@i_631+1)& (0+255),f,b
  2833  00106A  0101               	movlb	1	; () banked
  2834  00106C  BF90               	btfsc	(sort@i_631+1)& (0+255),7,b
  2835  00106E  D7F1               	goto	l7992
  2836  001070  0101               	movlb	1	; () banked
  2837  001072  5190               	movf	(sort@i_631+1)& (0+255),w,b
  2838  001074  E101               	bnz	u10670
  2839  001076  D7E8               	goto	L1
  2840  001078                     u10670:
  2841  001078                     l328:
  2842                           
  2843                           ; BSR set to: 1
  2844                           ;start.c: 242: LATCbits.LATC7 = 0;
  2845  001078  9E8B               	bcf	3979,7,c	;volatile
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;start.c: 244: float lightVoltSum = 0;
  2849  00107A  0E00               	movlw	0
  2850  00107C  0101               	movlb	1	; () banked
  2851  00107E  6FA9               	movwf	sort@lightVoltSum_632& (0+255),b
  2852  001080  0E00               	movlw	0
  2853  001082  0101               	movlb	1	; () banked
  2854  001084  6FAA               	movwf	(sort@lightVoltSum_632+1)& (0+255),b
  2855  001086  0E00               	movlw	0
  2856  001088  0101               	movlb	1	; () banked
  2857  00108A  6FAB               	movwf	(sort@lightVoltSum_632+2)& (0+255),b
  2858                           
  2859                           ;start.c: 245: for (int i = 0; i < 100; i++) {
  2860  00108C  0E00               	movlw	0
  2861  00108E  0101               	movlb	1	; () banked
  2862  001090  6F92               	movwf	(sort@i_633+1)& (0+255),b
  2863  001092  0E00               	movlw	0
  2864  001094  6F91               	movwf	sort@i_633& (0+255),b
  2865  001096                     l7998:
  2866                           
  2867                           ; BSR set to: 1
  2868  001096  0101               	movlb	1	; () banked
  2869  001098  BF92               	btfsc	(sort@i_633+1)& (0+255),7,b
  2870  00109A  D008               	goto	l8002
  2871  00109C  0101               	movlb	1	; () banked
  2872  00109E  5192               	movf	(sort@i_633+1)& (0+255),w,b
  2873  0010A0  E148               	bnz	l8008
  2874  0010A2  0E64               	movlw	100
  2875  0010A4  0101               	movlb	1	; () banked
  2876  0010A6  5D91               	subwf	sort@i_633& (0+255),w,b
  2877  0010A8  B0D8               	btfsc	status,0,c
  2878  0010AA  D043               	goto	l8008
  2879  0010AC                     l8002:
  2880                           
  2881                           ; BSR set to: 1
  2882                           ;start.c: 246: readADC(0);
  2883  0010AC  0E00               	movlw	0
  2884  0010AE  EC3B  F02E         	call	_readADC
  2885                           
  2886                           ;start.c: 247: float lightVolt = (float) ((ADRESH << 8) / 236)*5;
  2887  0010B2  0E00               	movlw	0
  2888  0010B4  0100               	movlb	0	; () banked
  2889  0010B6  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  2890  0010B8  0EEC               	movlw	236
  2891  0010BA  6FBF               	movwf	___awdiv@divisor& (0+255),b
  2892  0010BC  50C4               	movf	4036,w,c	;volatile
  2893  0010BE  0100               	movlb	0	; () banked
  2894  0010C0  6FBE               	movwf	(___awdiv@dividend+1)& (0+255),b
  2895  0010C2  6BBD               	clrf	___awdiv@dividend& (0+255),b
  2896  0010C4  ECCC  F027         	call	___awdiv	;wreg free
  2897  0010C8  C0BD  F100         	movff	?___awdiv,___awtoft@c
  2898  0010CC  C0BE  F101         	movff	?___awdiv+1,___awtoft@c+1
  2899  0010D0  ECDB  F02C         	call	___awtoft	;wreg free
  2900  0010D4  C100  F104         	movff	?___awtoft,___ftmul@f1
  2901  0010D8  C101  F105         	movff	?___awtoft+1,___ftmul@f1+1
  2902  0010DC  C102  F106         	movff	?___awtoft+2,___ftmul@f1+2
  2903  0010E0  0E00               	movlw	0
  2904  0010E2  0101               	movlb	1	; () banked
  2905  0010E4  6F07               	movwf	___ftmul@f2& (0+255),b
  2906  0010E6  0EA0               	movlw	160
  2907  0010E8  0101               	movlb	1	; () banked
  2908  0010EA  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  2909  0010EC  0E40               	movlw	64
  2910  0010EE  0101               	movlb	1	; () banked
  2911  0010F0  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  2912  0010F2  ECF8  F01F         	call	___ftmul	;wreg free
  2913  0010F6  C104  F174         	movff	?___ftmul,sort@lightVolt_634
  2914  0010FA  C105  F175         	movff	?___ftmul+1,sort@lightVolt_634+1
  2915  0010FE  C106  F176         	movff	?___ftmul+2,sort@lightVolt_634+2
  2916                           
  2917                           ;start.c: 248: lightVoltSum += lightVolt;
  2918  001102  C1A9  F11D         	movff	sort@lightVoltSum_632,___ftadd@f1
  2919  001106  C1AA  F11E         	movff	sort@lightVoltSum_632+1,___ftadd@f1+1
  2920  00110A  C1AB  F11F         	movff	sort@lightVoltSum_632+2,___ftadd@f1+2
  2921  00110E  C174  F120         	movff	sort@lightVolt_634,___ftadd@f2
  2922  001112  C175  F121         	movff	sort@lightVolt_634+1,___ftadd@f2+1
  2923  001116  C176  F122         	movff	sort@lightVolt_634+2,___ftadd@f2+2
  2924  00111A  EC38  F01B         	call	___ftadd	;wreg free
  2925  00111E  C11D  F1A9         	movff	?___ftadd,sort@lightVoltSum_632
  2926  001122  C11E  F1AA         	movff	?___ftadd+1,sort@lightVoltSum_632+1
  2927  001126  C11F  F1AB         	movff	?___ftadd+2,sort@lightVoltSum_632+2
  2928  00112A  0101               	movlb	1	; () banked
  2929  00112C  4B91               	infsnz	sort@i_633& (0+255),f,b
  2930  00112E  2B92               	incf	(sort@i_633+1)& (0+255),f,b
  2931  001130  D7B2               	goto	l7998
  2932  001132                     l8008:
  2933                           
  2934                           ; BSR set to: 1
  2935                           ;start.c: 249: }
  2936                           ;start.c: 250: lightVoltSum = lightVoltSum / 1000;
  2937  001132  C1A9  F103         	movff	sort@lightVoltSum_632,___ftdiv@f1
  2938  001136  C1AA  F104         	movff	sort@lightVoltSum_632+1,___ftdiv@f1+1
  2939  00113A  C1AB  F105         	movff	sort@lightVoltSum_632+2,___ftdiv@f1+2
  2940  00113E  0E00               	movlw	0
  2941  001140  0101               	movlb	1	; () banked
  2942  001142  6F06               	movwf	___ftdiv@f2& (0+255),b
  2943  001144  0E7A               	movlw	122
  2944  001146  0101               	movlb	1	; () banked
  2945  001148  6F07               	movwf	(___ftdiv@f2+1)& (0+255),b
  2946  00114A  0E44               	movlw	68
  2947  00114C  0101               	movlb	1	; () banked
  2948  00114E  6F08               	movwf	(___ftdiv@f2+2)& (0+255),b
  2949  001150  ECA7  F020         	call	___ftdiv	;wreg free
  2950  001154  C103  F1A9         	movff	?___ftdiv,sort@lightVoltSum_632
  2951  001158  C104  F1AA         	movff	?___ftdiv+1,sort@lightVoltSum_632+1
  2952  00115C  C105  F1AB         	movff	?___ftdiv+2,sort@lightVoltSum_632+2
  2953                           
  2954                           ;start.c: 251: if (lightVoltSum < 36) {
  2955  001160  C1A9  F0B7         	movff	sort@lightVoltSum_632,___ftge@ff1
  2956  001164  C1AA  F0B8         	movff	sort@lightVoltSum_632+1,___ftge@ff1+1
  2957  001168  C1AB  F0B9         	movff	sort@lightVoltSum_632+2,___ftge@ff1+2
  2958  00116C  0E00               	movlw	0
  2959  00116E  0100               	movlb	0	; () banked
  2960  001170  6FBA               	movwf	___ftge@ff2& (0+255),b
  2961  001172  0E10               	movlw	16
  2962  001174  0100               	movlb	0	; () banked
  2963  001176  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  2964  001178  0E42               	movlw	66
  2965  00117A  0100               	movlb	0	; () banked
  2966  00117C  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  2967  00117E  EC08  F027         	call	___ftge	;wreg free
  2968  001182  0100               	movlb	0	; () banked
  2969  001184  B0D8               	btfsc	status,0,c
  2970  001186  D5E9               	goto	l7904
  2971  001188                     l8012:
  2972                           
  2973                           ;start.c: 253: }
  2974                           ;start.c: 256: }
  2975                           ;start.c: 259: dc_stop();
  2976  001188  EC14  F02F         	call	_dc_stop	;wreg free
  2977                           
  2978                           ;start.c: 260: if (done == 1){
  2979  00118C  0101               	movlb	1	; () banked
  2980  00118E  059F               	decf	sort@done& (0+255),w,b
  2981  001190  0101               	movlb	1	; () banked
  2982  001192  11A0               	iorwf	(sort@done+1)& (0+255),w,b
  2983  001194  B4D8               	btfsc	status,2,c
  2984  001196  D293               	goto	l334
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;start.c: 262: }
  2988                           ;start.c: 263: for(int i=0;i<200;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  2989                           
  2990                           ; BSR set to: 1
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;start.c: 261: break;
  2994  001198  0E00               	movlw	0
  2995  00119A  0101               	movlb	1	; () banked
  2996  00119C  6F94               	movwf	(sort@i_635+1)& (0+255),b
  2997  00119E  0E00               	movlw	0
  2998  0011A0  6F93               	movwf	sort@i_635& (0+255),b
  2999  0011A2                     l8020:
  3000                           
  3001                           ; BSR set to: 1
  3002  0011A2  0101               	movlb	1	; () banked
  3003  0011A4  BF94               	btfsc	(sort@i_635+1)& (0+255),7,b
  3004  0011A6  D008               	goto	l8024
  3005  0011A8  0101               	movlb	1	; () banked
  3006  0011AA  5194               	movf	(sort@i_635+1)& (0+255),w,b
  3007  0011AC  E112               	bnz	l8028
  3008  0011AE  0EC8               	movlw	200
  3009  0011B0  0101               	movlb	1	; () banked
  3010  0011B2  5D93               	subwf	sort@i_635& (0+255),w,b
  3011  0011B4  B0D8               	btfsc	status,0,c
  3012  0011B6  D00D               	goto	l8028
  3013  0011B8                     l8024:
  3014                           
  3015                           ; BSR set to: 1
  3016  0011B8  0E1A               	movlw	26
  3017  0011BA  0101               	movlb	1	; () banked
  3018  0011BC  6F6C               	movwf	??_sort& (0+255),b
  3019  0011BE  0EF8               	movlw	248
  3020  0011C0                     u11187:
  3021  0011C0  2EE8               	decfsz	wreg,f,c
  3022  0011C2  D7FE               	bra	u11187
  3023  0011C4  2F6C               	decfsz	??_sort& (0+255),f,b
  3024  0011C6  D7FC               	bra	u11187
  3025  0011C8  F000               	nop	
  3026  0011CA  0101               	movlb	1	; () banked
  3027  0011CC  4B93               	infsnz	sort@i_635& (0+255),f,b
  3028  0011CE  2B94               	incf	(sort@i_635+1)& (0+255),f,b
  3029  0011D0  D7E8               	goto	l8020
  3030  0011D2                     l8028:
  3031                           
  3032                           ; BSR set to: 1
  3033                           ;start.c: 276: readADC(2);
  3034  0011D2  0E02               	movlw	2
  3035  0011D4  EC3B  F02E         	call	_readADC
  3036                           
  3037                           ;start.c: 277: float IRVolt = (float) ((ADRESH << 8) / 236)*5;
  3038  0011D8  0E00               	movlw	0
  3039  0011DA  0100               	movlb	0	; () banked
  3040  0011DC  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  3041  0011DE  0EEC               	movlw	236
  3042  0011E0  6FBF               	movwf	___awdiv@divisor& (0+255),b
  3043  0011E2  50C4               	movf	4036,w,c	;volatile
  3044  0011E4  0100               	movlb	0	; () banked
  3045  0011E6  6FBE               	movwf	(___awdiv@dividend+1)& (0+255),b
  3046  0011E8  6BBD               	clrf	___awdiv@dividend& (0+255),b
  3047  0011EA  ECCC  F027         	call	___awdiv	;wreg free
  3048  0011EE  C0BD  F100         	movff	?___awdiv,___awtoft@c
  3049  0011F2  C0BE  F101         	movff	?___awdiv+1,___awtoft@c+1
  3050  0011F6  ECDB  F02C         	call	___awtoft	;wreg free
  3051  0011FA  C100  F104         	movff	?___awtoft,___ftmul@f1
  3052  0011FE  C101  F105         	movff	?___awtoft+1,___ftmul@f1+1
  3053  001202  C102  F106         	movff	?___awtoft+2,___ftmul@f1+2
  3054  001206  0E00               	movlw	0
  3055  001208  0101               	movlb	1	; () banked
  3056  00120A  6F07               	movwf	___ftmul@f2& (0+255),b
  3057  00120C  0EA0               	movlw	160
  3058  00120E  0101               	movlb	1	; () banked
  3059  001210  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  3060  001212  0E40               	movlw	64
  3061  001214  0101               	movlb	1	; () banked
  3062  001216  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  3063  001218  ECF8  F01F         	call	___ftmul	;wreg free
  3064  00121C  C104  F182         	movff	?___ftmul,sort@IRVolt
  3065  001220  C105  F183         	movff	?___ftmul+1,sort@IRVolt+1
  3066  001224  C106  F184         	movff	?___ftmul+2,sort@IRVolt+2
  3067                           
  3068                           ;start.c: 278: readADC(1);
  3069  001228  0E01               	movlw	1
  3070  00122A  EC3B  F02E         	call	_readADC
  3071                           
  3072                           ;start.c: 279: float proxVolt = (float) ((ADRESH << 8) / 236)*5;
  3073  00122E  0E00               	movlw	0
  3074  001230  0100               	movlb	0	; () banked
  3075  001232  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  3076  001234  0EEC               	movlw	236
  3077  001236  6FBF               	movwf	___awdiv@divisor& (0+255),b
  3078  001238  50C4               	movf	4036,w,c	;volatile
  3079  00123A  0100               	movlb	0	; () banked
  3080  00123C  6FBE               	movwf	(___awdiv@dividend+1)& (0+255),b
  3081  00123E  6BBD               	clrf	___awdiv@dividend& (0+255),b
  3082  001240  ECCC  F027         	call	___awdiv	;wreg free
  3083  001244  C0BD  F100         	movff	?___awdiv,___awtoft@c
  3084  001248  C0BE  F101         	movff	?___awdiv+1,___awtoft@c+1
  3085  00124C  ECDB  F02C         	call	___awtoft	;wreg free
  3086  001250  C100  F104         	movff	?___awtoft,___ftmul@f1
  3087  001254  C101  F105         	movff	?___awtoft+1,___ftmul@f1+1
  3088  001258  C102  F106         	movff	?___awtoft+2,___ftmul@f1+2
  3089  00125C  0E00               	movlw	0
  3090  00125E  0101               	movlb	1	; () banked
  3091  001260  6F07               	movwf	___ftmul@f2& (0+255),b
  3092  001262  0EA0               	movlw	160
  3093  001264  0101               	movlb	1	; () banked
  3094  001266  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  3095  001268  0E40               	movlw	64
  3096  00126A  0101               	movlb	1	; () banked
  3097  00126C  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  3098  00126E  ECF8  F01F         	call	___ftmul	;wreg free
  3099  001272  C104  F1A3         	movff	?___ftmul,sort@proxVolt
  3100  001276  C105  F1A4         	movff	?___ftmul+1,sort@proxVolt+1
  3101  00127A  C106  F1A5         	movff	?___ftmul+2,sort@proxVolt+2
  3102                           
  3103                           ;start.c: 280: float lightVoltSum = 0;
  3104  00127E  0E00               	movlw	0
  3105  001280  0101               	movlb	1	; () banked
  3106  001282  6FAC               	movwf	sort@lightVoltSum_638& (0+255),b
  3107  001284  0E00               	movlw	0
  3108  001286  0101               	movlb	1	; () banked
  3109  001288  6FAD               	movwf	(sort@lightVoltSum_638+1)& (0+255),b
  3110  00128A  0E00               	movlw	0
  3111  00128C  0101               	movlb	1	; () banked
  3112  00128E  6FAE               	movwf	(sort@lightVoltSum_638+2)& (0+255),b
  3113                           
  3114                           ; BSR set to: 1
  3115                           ;start.c: 281: for (int i = 0; i < 100; i++) {
  3116  001290  0E00               	movlw	0
  3117  001292  0101               	movlb	1	; () banked
  3118  001294  6F96               	movwf	(sort@i_639+1)& (0+255),b
  3119  001296  0E00               	movlw	0
  3120  001298  6F95               	movwf	sort@i_639& (0+255),b
  3121  00129A                     l8034:
  3122                           
  3123                           ; BSR set to: 1
  3124  00129A  0101               	movlb	1	; () banked
  3125  00129C  BF96               	btfsc	(sort@i_639+1)& (0+255),7,b
  3126  00129E  D008               	goto	l8038
  3127  0012A0  0101               	movlb	1	; () banked
  3128  0012A2  5196               	movf	(sort@i_639+1)& (0+255),w,b
  3129  0012A4  E148               	bnz	l8044
  3130  0012A6  0E64               	movlw	100
  3131  0012A8  0101               	movlb	1	; () banked
  3132  0012AA  5D95               	subwf	sort@i_639& (0+255),w,b
  3133  0012AC  B0D8               	btfsc	status,0,c
  3134  0012AE  D043               	goto	l8044
  3135  0012B0                     l8038:
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;start.c: 282: readADC(0);
  3139  0012B0  0E00               	movlw	0
  3140  0012B2  EC3B  F02E         	call	_readADC
  3141                           
  3142                           ;start.c: 283: float lightVolt = (float) ((ADRESH << 8) / 236)*5;
  3143  0012B6  0E00               	movlw	0
  3144  0012B8  0100               	movlb	0	; () banked
  3145  0012BA  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  3146  0012BC  0EEC               	movlw	236
  3147  0012BE  6FBF               	movwf	___awdiv@divisor& (0+255),b
  3148  0012C0  50C4               	movf	4036,w,c	;volatile
  3149  0012C2  0100               	movlb	0	; () banked
  3150  0012C4  6FBE               	movwf	(___awdiv@dividend+1)& (0+255),b
  3151  0012C6  6BBD               	clrf	___awdiv@dividend& (0+255),b
  3152  0012C8  ECCC  F027         	call	___awdiv	;wreg free
  3153  0012CC  C0BD  F100         	movff	?___awdiv,___awtoft@c
  3154  0012D0  C0BE  F101         	movff	?___awdiv+1,___awtoft@c+1
  3155  0012D4  ECDB  F02C         	call	___awtoft	;wreg free
  3156  0012D8  C100  F104         	movff	?___awtoft,___ftmul@f1
  3157  0012DC  C101  F105         	movff	?___awtoft+1,___ftmul@f1+1
  3158  0012E0  C102  F106         	movff	?___awtoft+2,___ftmul@f1+2
  3159  0012E4  0E00               	movlw	0
  3160  0012E6  0101               	movlb	1	; () banked
  3161  0012E8  6F07               	movwf	___ftmul@f2& (0+255),b
  3162  0012EA  0EA0               	movlw	160
  3163  0012EC  0101               	movlb	1	; () banked
  3164  0012EE  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  3165  0012F0  0E40               	movlw	64
  3166  0012F2  0101               	movlb	1	; () banked
  3167  0012F4  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  3168  0012F6  ECF8  F01F         	call	___ftmul	;wreg free
  3169  0012FA  C104  F177         	movff	?___ftmul,sort@lightVolt_640
  3170  0012FE  C105  F178         	movff	?___ftmul+1,sort@lightVolt_640+1
  3171  001302  C106  F179         	movff	?___ftmul+2,sort@lightVolt_640+2
  3172                           
  3173                           ;start.c: 284: lightVoltSum += lightVolt;
  3174  001306  C1AC  F11D         	movff	sort@lightVoltSum_638,___ftadd@f1
  3175  00130A  C1AD  F11E         	movff	sort@lightVoltSum_638+1,___ftadd@f1+1
  3176  00130E  C1AE  F11F         	movff	sort@lightVoltSum_638+2,___ftadd@f1+2
  3177  001312  C177  F120         	movff	sort@lightVolt_640,___ftadd@f2
  3178  001316  C178  F121         	movff	sort@lightVolt_640+1,___ftadd@f2+1
  3179  00131A  C179  F122         	movff	sort@lightVolt_640+2,___ftadd@f2+2
  3180  00131E  EC38  F01B         	call	___ftadd	;wreg free
  3181  001322  C11D  F1AC         	movff	?___ftadd,sort@lightVoltSum_638
  3182  001326  C11E  F1AD         	movff	?___ftadd+1,sort@lightVoltSum_638+1
  3183  00132A  C11F  F1AE         	movff	?___ftadd+2,sort@lightVoltSum_638+2
  3184  00132E  0101               	movlb	1	; () banked
  3185  001330  4B95               	infsnz	sort@i_639& (0+255),f,b
  3186  001332  2B96               	incf	(sort@i_639+1)& (0+255),f,b
  3187  001334  D7B2               	goto	l8034
  3188  001336                     l8044:
  3189                           
  3190                           ; BSR set to: 1
  3191                           ;start.c: 285: }
  3192                           ;start.c: 286: lightVoltSum = lightVoltSum / 1000;
  3193  001336  C1AC  F103         	movff	sort@lightVoltSum_638,___ftdiv@f1
  3194  00133A  C1AD  F104         	movff	sort@lightVoltSum_638+1,___ftdiv@f1+1
  3195  00133E  C1AE  F105         	movff	sort@lightVoltSum_638+2,___ftdiv@f1+2
  3196  001342  0E00               	movlw	0
  3197  001344  0101               	movlb	1	; () banked
  3198  001346  6F06               	movwf	___ftdiv@f2& (0+255),b
  3199  001348  0E7A               	movlw	122
  3200  00134A  0101               	movlb	1	; () banked
  3201  00134C  6F07               	movwf	(___ftdiv@f2+1)& (0+255),b
  3202  00134E  0E44               	movlw	68
  3203  001350  0101               	movlb	1	; () banked
  3204  001352  6F08               	movwf	(___ftdiv@f2+2)& (0+255),b
  3205  001354  ECA7  F020         	call	___ftdiv	;wreg free
  3206  001358  C103  F1AC         	movff	?___ftdiv,sort@lightVoltSum_638
  3207  00135C  C104  F1AD         	movff	?___ftdiv+1,sort@lightVoltSum_638+1
  3208  001360  C105  F1AE         	movff	?___ftdiv+2,sort@lightVoltSum_638+2
  3209                           
  3210                           ;start.c: 288: if (lightVoltSum > 34.5) {
  3211  001364  0E00               	movlw	0
  3212  001366  0100               	movlb	0	; () banked
  3213  001368  6FB7               	movwf	___ftge@ff1& (0+255),b
  3214  00136A  0E0A               	movlw	10
  3215  00136C  0100               	movlb	0	; () banked
  3216  00136E  6FB8               	movwf	(___ftge@ff1+1)& (0+255),b
  3217  001370  0E42               	movlw	66
  3218  001372  0100               	movlb	0	; () banked
  3219  001374  6FB9               	movwf	(___ftge@ff1+2)& (0+255),b
  3220  001376  C1AC  F0BA         	movff	sort@lightVoltSum_638,___ftge@ff2
  3221  00137A  C1AD  F0BB         	movff	sort@lightVoltSum_638+1,___ftge@ff2+1
  3222  00137E  C1AE  F0BC         	movff	sort@lightVoltSum_638+2,___ftge@ff2+2
  3223  001382  EC08  F027         	call	___ftge	;wreg free
  3224  001386  0100               	movlb	0	; () banked
  3225  001388  B0D8               	btfsc	status,0,c
  3226  00138A  D046               	goto	l8058
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;start.c: 289: if (IRVolt < -100 || proxVolt > 300) {
  3230  00138C  C182  F0B7         	movff	sort@IRVolt,___ftge@ff1
  3231  001390  C183  F0B8         	movff	sort@IRVolt+1,___ftge@ff1+1
  3232  001394  C184  F0B9         	movff	sort@IRVolt+2,___ftge@ff1+2
  3233  001398  0E00               	movlw	0
  3234  00139A  0100               	movlb	0	; () banked
  3235  00139C  6FBA               	movwf	___ftge@ff2& (0+255),b
  3236  00139E  0EC8               	movlw	200
  3237  0013A0  0100               	movlb	0	; () banked
  3238  0013A2  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  3239  0013A4  0EC2               	movlw	194
  3240  0013A6  0100               	movlb	0	; () banked
  3241  0013A8  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  3242  0013AA  EC08  F027         	call	___ftge	;wreg free
  3243  0013AE  0100               	movlb	0	; () banked
  3244  0013B0  A0D8               	btfss	status,0,c
  3245  0013B2  D014               	goto	l8050
  3246                           
  3247                           ; BSR set to: 0
  3248  0013B4  0E00               	movlw	0
  3249  0013B6  0100               	movlb	0	; () banked
  3250  0013B8  6FB7               	movwf	___ftge@ff1& (0+255),b
  3251  0013BA  0E96               	movlw	150
  3252  0013BC  0100               	movlb	0	; () banked
  3253  0013BE  6FB8               	movwf	(___ftge@ff1+1)& (0+255),b
  3254  0013C0  0E43               	movlw	67
  3255  0013C2  0100               	movlb	0	; () banked
  3256  0013C4  6FB9               	movwf	(___ftge@ff1+2)& (0+255),b
  3257  0013C6  C1A3  F0BA         	movff	sort@proxVolt,___ftge@ff2
  3258  0013CA  C1A4  F0BB         	movff	sort@proxVolt+1,___ftge@ff2+1
  3259  0013CE  C1A5  F0BC         	movff	sort@proxVolt+2,___ftge@ff2+2
  3260  0013D2  EC08  F027         	call	___ftge	;wreg free
  3261  0013D6  0100               	movlb	0	; () banked
  3262  0013D8  B0D8               	btfsc	status,0,c
  3263  0013DA  D00F               	goto	l8054
  3264  0013DC                     l8050:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;start.c: 290: eskaCap = eskaCap + 1;
  3268  0013DC  0E01               	movlw	1
  3269  0013DE  0101               	movlb	1	; () banked
  3270  0013E0  25BA               	addwf	_eskaCap& (0+255),w,b
  3271  0013E2  0101               	movlb	1	; () banked
  3272  0013E4  6FBA               	movwf	_eskaCap& (0+255),b
  3273  0013E6  0E00               	movlw	0
  3274  0013E8  0101               	movlb	1	; () banked
  3275  0013EA  21BB               	addwfc	(_eskaCap+1)& (0+255),w,b
  3276  0013EC  0101               	movlb	1	; () banked
  3277  0013EE  6FBB               	movwf	(_eskaCap+1)& (0+255),b
  3278                           
  3279                           ; BSR set to: 1
  3280                           ;start.c: 291: bottle = 0;
  3281  0013F0  0E00               	movlw	0
  3282  0013F2  0101               	movlb	1	; () banked
  3283  0013F4  6FA2               	movwf	(sort@bottle+1)& (0+255),b
  3284  0013F6  0E00               	movlw	0
  3285  0013F8  D068               	goto	L4
  3286  0013FA                     l8054:
  3287                           
  3288                           ;start.c: 293: eskaNoCap = eskaNoCap + 1;
  3289  0013FA  0E01               	movlw	1
  3290  0013FC  0101               	movlb	1	; () banked
  3291  0013FE  25BC               	addwf	_eskaNoCap& (0+255),w,b
  3292  001400  0101               	movlb	1	; () banked
  3293  001402  6FBC               	movwf	_eskaNoCap& (0+255),b
  3294  001404  0E00               	movlw	0
  3295  001406  0101               	movlb	1	; () banked
  3296  001408  21BD               	addwfc	(_eskaNoCap+1)& (0+255),w,b
  3297  00140A  0101               	movlb	1	; () banked
  3298  00140C  6FBD               	movwf	(_eskaNoCap+1)& (0+255),b
  3299                           
  3300                           ; BSR set to: 1
  3301                           ;start.c: 294: bottle = 1;
  3302  00140E  0E00               	movlw	0
  3303  001410  0101               	movlb	1	; () banked
  3304  001412  6FA2               	movwf	(sort@bottle+1)& (0+255),b
  3305  001414  0E01               	movlw	1
  3306  001416  D059               	goto	L4
  3307  001418                     l8058:
  3308                           
  3309                           ;start.c: 297: if (IRVolt > 100 && (proxVolt > 280 ||proxVolt < 220)) {
  3310  001418  0E00               	movlw	0
  3311  00141A  0100               	movlb	0	; () banked
  3312  00141C  6FB7               	movwf	___ftge@ff1& (0+255),b
  3313  00141E  0EC8               	movlw	200
  3314  001420  0100               	movlb	0	; () banked
  3315  001422  6FB8               	movwf	(___ftge@ff1+1)& (0+255),b
  3316  001424  0E42               	movlw	66
  3317  001426  0100               	movlb	0	; () banked
  3318  001428  6FB9               	movwf	(___ftge@ff1+2)& (0+255),b
  3319  00142A  C182  F0BA         	movff	sort@IRVolt,___ftge@ff2
  3320  00142E  C183  F0BB         	movff	sort@IRVolt+1,___ftge@ff2+1
  3321  001432  C184  F0BC         	movff	sort@IRVolt+2,___ftge@ff2+2
  3322  001436  EC08  F027         	call	___ftge	;wreg free
  3323  00143A  0100               	movlb	0	; () banked
  3324  00143C  B0D8               	btfsc	status,0,c
  3325  00143E  D037               	goto	l8068
  3326                           
  3327                           ; BSR set to: 0
  3328  001440  0E00               	movlw	0
  3329  001442  0100               	movlb	0	; () banked
  3330  001444  6FB7               	movwf	___ftge@ff1& (0+255),b
  3331  001446  0E8C               	movlw	140
  3332  001448  0100               	movlb	0	; () banked
  3333  00144A  6FB8               	movwf	(___ftge@ff1+1)& (0+255),b
  3334  00144C  0E43               	movlw	67
  3335  00144E  0100               	movlb	0	; () banked
  3336  001450  6FB9               	movwf	(___ftge@ff1+2)& (0+255),b
  3337  001452  C1A3  F0BA         	movff	sort@proxVolt,___ftge@ff2
  3338  001456  C1A4  F0BB         	movff	sort@proxVolt+1,___ftge@ff2+1
  3339  00145A  C1A5  F0BC         	movff	sort@proxVolt+2,___ftge@ff2+2
  3340  00145E  EC08  F027         	call	___ftge	;wreg free
  3341  001462  0100               	movlb	0	; () banked
  3342  001464  A0D8               	btfss	status,0,c
  3343  001466  D014               	goto	l8064
  3344                           
  3345                           ; BSR set to: 0
  3346  001468  C1A3  F0B7         	movff	sort@proxVolt,___ftge@ff1
  3347  00146C  C1A4  F0B8         	movff	sort@proxVolt+1,___ftge@ff1+1
  3348  001470  C1A5  F0B9         	movff	sort@proxVolt+2,___ftge@ff1+2
  3349  001474  0E00               	movlw	0
  3350  001476  0100               	movlb	0	; () banked
  3351  001478  6FBA               	movwf	___ftge@ff2& (0+255),b
  3352  00147A  0E5C               	movlw	92
  3353  00147C  0100               	movlb	0	; () banked
  3354  00147E  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  3355  001480  0E43               	movlw	67
  3356  001482  0100               	movlb	0	; () banked
  3357  001484  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  3358  001486  EC08  F027         	call	___ftge	;wreg free
  3359  00148A  0100               	movlb	0	; () banked
  3360  00148C  B0D8               	btfsc	status,0,c
  3361  00148E  D00F               	goto	l8068
  3362  001490                     l8064:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;start.c: 298: yopCap = yopCap + 1;
  3366  001490  0E01               	movlw	1
  3367  001492  0101               	movlb	1	; () banked
  3368  001494  25C2               	addwf	_yopCap& (0+255),w,b
  3369  001496  0101               	movlb	1	; () banked
  3370  001498  6FC2               	movwf	_yopCap& (0+255),b
  3371  00149A  0E00               	movlw	0
  3372  00149C  0101               	movlb	1	; () banked
  3373  00149E  21C3               	addwfc	(_yopCap+1)& (0+255),w,b
  3374  0014A0  0101               	movlb	1	; () banked
  3375  0014A2  6FC3               	movwf	(_yopCap+1)& (0+255),b
  3376                           
  3377                           ; BSR set to: 1
  3378                           ;start.c: 299: bottle = 2;
  3379  0014A4  0E00               	movlw	0
  3380  0014A6  0101               	movlb	1	; () banked
  3381  0014A8  6FA2               	movwf	(sort@bottle+1)& (0+255),b
  3382  0014AA  0E02               	movlw	2
  3383  0014AC  D00E               	goto	L4
  3384  0014AE                     l8068:
  3385                           
  3386                           ;start.c: 301: yopNoCap = yopNoCap + 1;
  3387  0014AE  0E01               	movlw	1
  3388  0014B0  0101               	movlb	1	; () banked
  3389  0014B2  25C4               	addwf	_yopNoCap& (0+255),w,b
  3390  0014B4  0101               	movlb	1	; () banked
  3391  0014B6  6FC4               	movwf	_yopNoCap& (0+255),b
  3392  0014B8  0E00               	movlw	0
  3393  0014BA  0101               	movlb	1	; () banked
  3394  0014BC  21C5               	addwfc	(_yopNoCap+1)& (0+255),w,b
  3395  0014BE  0101               	movlb	1	; () banked
  3396  0014C0  6FC5               	movwf	(_yopNoCap+1)& (0+255),b
  3397                           
  3398                           ; BSR set to: 1
  3399                           ;start.c: 302: bottle = 3;
  3400  0014C2  0E00               	movlw	0
  3401  0014C4  0101               	movlb	1	; () banked
  3402  0014C6  6FA2               	movwf	(sort@bottle+1)& (0+255),b
  3403  0014C8  0E03               	movlw	3
  3404  0014CA                     L4:
  3405  0014CA  6FA1               	movwf	sort@bottle& (0+255),b
  3406                           
  3407                           ; BSR set to: 1
  3408                           ;start.c: 303: }
  3409                           ;start.c: 304: }
  3410                           ;start.c: 318: int numRotations = bottle - currentContainer;
  3411                           
  3412                           ; BSR set to: 1
  3413                           
  3414                           ; BSR set to: 1
  3415  0014CC  C17A  F16C         	movff	sort@currentContainer,??_sort
  3416  0014D0  C17B  F16D         	movff	sort@currentContainer+1,??_sort+1
  3417  0014D4  0101               	movlb	1	; () banked
  3418  0014D6  1F6C               	comf	??_sort& (0+255),f,b
  3419  0014D8  1F6D               	comf	(??_sort+1)& (0+255),f,b
  3420  0014DA  4B6C               	infsnz	??_sort& (0+255),f,b
  3421  0014DC  2B6D               	incf	(??_sort+1)& (0+255),f,b
  3422  0014DE  0101               	movlb	1	; () banked
  3423  0014E0  51A1               	movf	sort@bottle& (0+255),w,b
  3424  0014E2  0101               	movlb	1	; () banked
  3425  0014E4  256C               	addwf	??_sort& (0+255),w,b
  3426  0014E6  0101               	movlb	1	; () banked
  3427  0014E8  6FAF               	movwf	sort@numRotations& (0+255),b
  3428  0014EA  0101               	movlb	1	; () banked
  3429  0014EC  51A2               	movf	(sort@bottle+1)& (0+255),w,b
  3430  0014EE  0101               	movlb	1	; () banked
  3431  0014F0  216D               	addwfc	(??_sort+1)& (0+255),w,b
  3432  0014F2  0101               	movlb	1	; () banked
  3433  0014F4  6FB0               	movwf	(sort@numRotations+1)& (0+255),b
  3434                           
  3435                           ; BSR set to: 1
  3436                           ;start.c: 320: if (numRotations == 3 || numRotations == -1){
  3437  0014F6  0E03               	movlw	3
  3438  0014F8  0101               	movlb	1	; () banked
  3439  0014FA  19AF               	xorwf	sort@numRotations& (0+255),w,b
  3440  0014FC  0101               	movlb	1	; () banked
  3441  0014FE  11B0               	iorwf	(sort@numRotations+1)& (0+255),w,b
  3442  001500  B4D8               	btfsc	status,2,c
  3443  001502  D007               	goto	l8078
  3444                           
  3445                           ; BSR set to: 1
  3446  001504  0101               	movlb	1	; () banked
  3447  001506  29AF               	incf	sort@numRotations& (0+255),w,b
  3448  001508  E107               	bnz	l8080
  3449  00150A  0101               	movlb	1	; () banked
  3450  00150C  29B0               	incf	(sort@numRotations+1)& (0+255),w,b
  3451  00150E  A4D8               	btfss	status,2,c
  3452  001510  D003               	goto	l8080
  3453  001512                     l8078:
  3454                           
  3455                           ; BSR set to: 1
  3456                           ;start.c: 321: rotate270 ();
  3457  001512  EC71  F02C         	call	_rotate270	;wreg free
  3458                           
  3459                           ;start.c: 322: }
  3460  001516  D021               	goto	l8092
  3461  001518                     l8080:
  3462                           
  3463                           ;start.c: 323: else if (numRotations == 2 || numRotations == -2){
  3464  001518  0E02               	movlw	2
  3465  00151A  0101               	movlb	1	; () banked
  3466  00151C  19AF               	xorwf	sort@numRotations& (0+255),w,b
  3467  00151E  0101               	movlb	1	; () banked
  3468  001520  11B0               	iorwf	(sort@numRotations+1)& (0+255),w,b
  3469  001522  B4D8               	btfsc	status,2,c
  3470  001524  D008               	goto	l8084
  3471                           
  3472                           ; BSR set to: 1
  3473  001526  0EFE               	movlw	254
  3474  001528  0101               	movlb	1	; () banked
  3475  00152A  19AF               	xorwf	sort@numRotations& (0+255),w,b
  3476  00152C  E107               	bnz	l8086
  3477  00152E  0101               	movlb	1	; () banked
  3478  001530  29B0               	incf	(sort@numRotations+1)& (0+255),w,b
  3479  001532  A4D8               	btfss	status,2,c
  3480  001534  D003               	goto	l8086
  3481  001536                     l8084:
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;start.c: 324: rotate180 ();
  3485  001536  EC25  F02C         	call	_rotate180	;wreg free
  3486                           
  3487                           ;start.c: 325: }
  3488  00153A  D00F               	goto	l8092
  3489  00153C                     l8086:
  3490                           
  3491                           ;start.c: 326: else if (numRotations == 1 || numRotations == -3){
  3492  00153C  0101               	movlb	1	; () banked
  3493  00153E  05AF               	decf	sort@numRotations& (0+255),w,b
  3494  001540  0101               	movlb	1	; () banked
  3495  001542  11B0               	iorwf	(sort@numRotations+1)& (0+255),w,b
  3496  001544  B4D8               	btfsc	status,2,c
  3497  001546  D007               	goto	l8090
  3498                           
  3499                           ; BSR set to: 1
  3500  001548  0EFD               	movlw	253
  3501  00154A  0101               	movlb	1	; () banked
  3502  00154C  19AF               	xorwf	sort@numRotations& (0+255),w,b
  3503  00154E  E105               	bnz	l8092
  3504  001550  0101               	movlb	1	; () banked
  3505  001552  29B0               	incf	(sort@numRotations+1)& (0+255),w,b
  3506  001554  B4D8               	btfsc	status,2,c
  3507  001556                     l8090:
  3508                           
  3509                           ; BSR set to: 1
  3510                           ;start.c: 327: rotate90();
  3511  001556  ECFF  F02B         	call	_rotate90	;wreg free
  3512  00155A                     l8092:
  3513                           
  3514                           ;start.c: 328: }
  3515                           ;start.c: 330: currentContainer = bottle;
  3516  00155A  C1A1  F17A         	movff	sort@bottle,sort@currentContainer
  3517  00155E  C1A2  F17B         	movff	sort@bottle+1,sort@currentContainer+1
  3518                           
  3519                           ;start.c: 349: for(int i=0;i<50;i++){_delay((unsigned long)((10)*(8000000/4000.0)));}
  3520  001562  0E00               	movlw	0
  3521  001564  0101               	movlb	1	; () banked
  3522  001566  6F98               	movwf	(sort@i_642+1)& (0+255),b
  3523  001568  0E00               	movlw	0
  3524  00156A  6F97               	movwf	sort@i_642& (0+255),b
  3525  00156C                     l8096:
  3526                           
  3527                           ; BSR set to: 1
  3528  00156C  0101               	movlb	1	; () banked
  3529  00156E  BF98               	btfsc	(sort@i_642+1)& (0+255),7,b
  3530  001570  D008               	goto	l8100
  3531  001572  0101               	movlb	1	; () banked
  3532  001574  5198               	movf	(sort@i_642+1)& (0+255),w,b
  3533  001576  E112               	bnz	l8104
  3534  001578  0E32               	movlw	50
  3535  00157A  0101               	movlb	1	; () banked
  3536  00157C  5D97               	subwf	sort@i_642& (0+255),w,b
  3537  00157E  B0D8               	btfsc	status,0,c
  3538  001580  D00D               	goto	l8104
  3539  001582                     l8100:
  3540                           
  3541                           ; BSR set to: 1
  3542  001582  0E1A               	movlw	26
  3543  001584  0101               	movlb	1	; () banked
  3544  001586  6F6C               	movwf	??_sort& (0+255),b
  3545  001588  0EF8               	movlw	248
  3546  00158A                     u11197:
  3547  00158A  2EE8               	decfsz	wreg,f,c
  3548  00158C  D7FE               	bra	u11197
  3549  00158E  2F6C               	decfsz	??_sort& (0+255),f,b
  3550  001590  D7FC               	bra	u11197
  3551  001592  F000               	nop	
  3552  001594  0101               	movlb	1	; () banked
  3553  001596  4B97               	infsnz	sort@i_642& (0+255),f,b
  3554  001598  2B98               	incf	(sort@i_642+1)& (0+255),f,b
  3555  00159A  D7E8               	goto	l8096
  3556  00159C                     l8104:
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;start.c: 351: for (int i = 0; i < 50; i++) {
  3560  00159C  0E00               	movlw	0
  3561  00159E  0101               	movlb	1	; () banked
  3562  0015A0  6F9A               	movwf	(sort@i_643+1)& (0+255),b
  3563  0015A2  0E00               	movlw	0
  3564  0015A4  6F99               	movwf	sort@i_643& (0+255),b
  3565  0015A6                     l8106:
  3566                           
  3567                           ; BSR set to: 1
  3568  0015A6  0101               	movlb	1	; () banked
  3569  0015A8  BF9A               	btfsc	(sort@i_643+1)& (0+255),7,b
  3570  0015AA  D008               	goto	l362
  3571  0015AC  0101               	movlb	1	; () banked
  3572  0015AE  519A               	movf	(sort@i_643+1)& (0+255),w,b
  3573  0015B0  E11D               	bnz	l8116
  3574  0015B2  0E32               	movlw	50
  3575  0015B4  0101               	movlb	1	; () banked
  3576  0015B6  5D99               	subwf	sort@i_643& (0+255),w,b
  3577  0015B8  B0D8               	btfsc	status,0,c
  3578  0015BA  D018               	goto	l8116
  3579  0015BC                     l362:
  3580                           
  3581                           ; BSR set to: 1
  3582                           ;start.c: 352: LATCbits.LATC5 = 1;
  3583  0015BC  8A8B               	bsf	3979,5,c	;volatile
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;start.c: 353: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  3587  0015BE  0E06               	movlw	6
  3588  0015C0  0101               	movlb	1	; () banked
  3589  0015C2  6F6C               	movwf	??_sort& (0+255),b
  3590  0015C4  0E30               	movlw	48
  3591  0015C6                     u11207:
  3592  0015C6  2EE8               	decfsz	wreg,f,c
  3593  0015C8  D7FE               	bra	u11207
  3594  0015CA  2F6C               	decfsz	??_sort& (0+255),f,b
  3595  0015CC  D7FC               	bra	u11207
  3596  0015CE  F000               	nop	
  3597                           
  3598                           ;start.c: 354: LATCbits.LATC5 = 0;
  3599  0015D0  9A8B               	bcf	3979,5,c	;volatile
  3600                           
  3601                           ;start.c: 355: _delay((unsigned long)((25000)*(8000000/4000000.0)));
  3602  0015D2  0E41               	movlw	65
  3603  0015D4  0101               	movlb	1	; () banked
  3604  0015D6  6F6C               	movwf	??_sort& (0+255),b
  3605  0015D8  0EEE               	movlw	238
  3606  0015DA                     u11217:
  3607  0015DA  2EE8               	decfsz	wreg,f,c
  3608  0015DC  D7FE               	bra	u11217
  3609  0015DE  2F6C               	decfsz	??_sort& (0+255),f,b
  3610  0015E0  D7FC               	bra	u11217
  3611  0015E2  F000               	nop	
  3612  0015E4  0101               	movlb	1	; () banked
  3613  0015E6  4B99               	infsnz	sort@i_643& (0+255),f,b
  3614  0015E8  2B9A               	incf	(sort@i_643+1)& (0+255),f,b
  3615  0015EA  D7DD               	goto	l8106
  3616  0015EC                     l8116:
  3617                           
  3618                           ; BSR set to: 1
  3619                           ;start.c: 356: }
  3620                           ;start.c: 357: for(int i=0;i<200;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  3621  0015EC  0E00               	movlw	0
  3622  0015EE  0101               	movlb	1	; () banked
  3623  0015F0  6F9C               	movwf	(sort@i_644+1)& (0+255),b
  3624  0015F2  0E00               	movlw	0
  3625  0015F4  6F9B               	movwf	sort@i_644& (0+255),b
  3626  0015F6                     l8118:
  3627                           
  3628                           ; BSR set to: 1
  3629  0015F6  0101               	movlb	1	; () banked
  3630  0015F8  BF9C               	btfsc	(sort@i_644+1)& (0+255),7,b
  3631  0015FA  D008               	goto	l8122
  3632  0015FC  0101               	movlb	1	; () banked
  3633  0015FE  519C               	movf	(sort@i_644+1)& (0+255),w,b
  3634  001600  E112               	bnz	l8126
  3635  001602  0EC8               	movlw	200
  3636  001604  0101               	movlb	1	; () banked
  3637  001606  5D9B               	subwf	sort@i_644& (0+255),w,b
  3638  001608  B0D8               	btfsc	status,0,c
  3639  00160A  D00D               	goto	l8126
  3640  00160C                     l8122:
  3641                           
  3642                           ; BSR set to: 1
  3643  00160C  0E1A               	movlw	26
  3644  00160E  0101               	movlb	1	; () banked
  3645  001610  6F6C               	movwf	??_sort& (0+255),b
  3646  001612  0EF8               	movlw	248
  3647  001614                     u11227:
  3648  001614  2EE8               	decfsz	wreg,f,c
  3649  001616  D7FE               	bra	u11227
  3650  001618  2F6C               	decfsz	??_sort& (0+255),f,b
  3651  00161A  D7FC               	bra	u11227
  3652  00161C  F000               	nop	
  3653  00161E  0101               	movlb	1	; () banked
  3654  001620  4B9B               	infsnz	sort@i_644& (0+255),f,b
  3655  001622  2B9C               	incf	(sort@i_644+1)& (0+255),f,b
  3656  001624  D7E8               	goto	l8118
  3657  001626                     l8126:
  3658                           
  3659                           ; BSR set to: 1
  3660                           ;start.c: 359: for (int i = 0; i < 50; i++) {
  3661  001626  0E00               	movlw	0
  3662  001628  0101               	movlb	1	; () banked
  3663  00162A  6F9E               	movwf	(sort@i_645+1)& (0+255),b
  3664  00162C  0E00               	movlw	0
  3665  00162E  6F9D               	movwf	sort@i_645& (0+255),b
  3666  001630                     l8128:
  3667                           
  3668                           ; BSR set to: 1
  3669  001630  0101               	movlb	1	; () banked
  3670  001632  BF9E               	btfsc	(sort@i_645+1)& (0+255),7,b
  3671  001634  D008               	goto	l366
  3672  001636  0101               	movlb	1	; () banked
  3673  001638  519E               	movf	(sort@i_645+1)& (0+255),w,b
  3674  00163A  E11D               	bnz	l8138
  3675  00163C  0E32               	movlw	50
  3676  00163E  0101               	movlb	1	; () banked
  3677  001640  5D9D               	subwf	sort@i_645& (0+255),w,b
  3678  001642  B0D8               	btfsc	status,0,c
  3679  001644  D018               	goto	l8138
  3680  001646                     l366:
  3681                           
  3682                           ; BSR set to: 1
  3683                           ;start.c: 360: LATCbits.LATC5 = 1;
  3684  001646  8A8B               	bsf	3979,5,c	;volatile
  3685                           
  3686                           ; BSR set to: 1
  3687                           ;start.c: 361: _delay((unsigned long)((3200)*(8000000/4000000.0)));
  3688  001648  0E09               	movlw	9
  3689  00164A  0101               	movlb	1	; () banked
  3690  00164C  6F6C               	movwf	??_sort& (0+255),b
  3691  00164E  0E4E               	movlw	78
  3692  001650                     u11237:
  3693  001650  2EE8               	decfsz	wreg,f,c
  3694  001652  D7FE               	bra	u11237
  3695  001654  2F6C               	decfsz	??_sort& (0+255),f,b
  3696  001656  D7FC               	bra	u11237
  3697  001658  F000               	nop	
  3698                           
  3699                           ;start.c: 362: LATCbits.LATC5 = 0;
  3700  00165A  9A8B               	bcf	3979,5,c	;volatile
  3701                           
  3702                           ;start.c: 363: _delay((unsigned long)((18500)*(8000000/4000000.0)));
  3703  00165C  0E31               	movlw	49
  3704  00165E  0101               	movlb	1	; () banked
  3705  001660  6F6C               	movwf	??_sort& (0+255),b
  3706  001662  0E0B               	movlw	11
  3707  001664                     u11247:
  3708  001664  2EE8               	decfsz	wreg,f,c
  3709  001666  D7FE               	bra	u11247
  3710  001668  2F6C               	decfsz	??_sort& (0+255),f,b
  3711  00166A  D7FC               	bra	u11247
  3712  00166C  D000               	nop2	
  3713  00166E  0101               	movlb	1	; () banked
  3714  001670  4B9D               	infsnz	sort@i_645& (0+255),f,b
  3715  001672  2B9E               	incf	(sort@i_645+1)& (0+255),f,b
  3716  001674  D7DD               	goto	l8128
  3717  001676                     l8138:
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;start.c: 364: }
  3721                           ;start.c: 369: if ((eskaCap + eskaNoCap + yopCap + yopNoCap) == 10) break;
  3722  001676  0101               	movlb	1	; () banked
  3723  001678  51BC               	movf	_eskaNoCap& (0+255),w,b
  3724  00167A  0101               	movlb	1	; () banked
  3725  00167C  25BA               	addwf	_eskaCap& (0+255),w,b
  3726  00167E  0101               	movlb	1	; () banked
  3727  001680  6F6C               	movwf	??_sort& (0+255),b
  3728  001682  0101               	movlb	1	; () banked
  3729  001684  51BD               	movf	(_eskaNoCap+1)& (0+255),w,b
  3730  001686  0101               	movlb	1	; () banked
  3731  001688  21BB               	addwfc	(_eskaCap+1)& (0+255),w,b
  3732  00168A  0101               	movlb	1	; () banked
  3733  00168C  6F6D               	movwf	(??_sort+1)& (0+255),b
  3734  00168E  0101               	movlb	1	; () banked
  3735  001690  51C2               	movf	_yopCap& (0+255),w,b
  3736  001692  0101               	movlb	1	; () banked
  3737  001694  276C               	addwf	??_sort& (0+255),f,b
  3738  001696  0101               	movlb	1	; () banked
  3739  001698  51C3               	movf	(_yopCap+1)& (0+255),w,b
  3740  00169A  0101               	movlb	1	; () banked
  3741  00169C  236D               	addwfc	(??_sort+1)& (0+255),f,b
  3742  00169E  0101               	movlb	1	; () banked
  3743  0016A0  51C4               	movf	_yopNoCap& (0+255),w,b
  3744  0016A2  0101               	movlb	1	; () banked
  3745  0016A4  276C               	addwf	??_sort& (0+255),f,b
  3746  0016A6  0101               	movlb	1	; () banked
  3747  0016A8  51C5               	movf	(_yopNoCap+1)& (0+255),w,b
  3748  0016AA  0101               	movlb	1	; () banked
  3749  0016AC  236D               	addwfc	(??_sort+1)& (0+255),f,b
  3750  0016AE  0E0A               	movlw	10
  3751  0016B0  0101               	movlb	1	; () banked
  3752  0016B2  196C               	xorwf	??_sort& (0+255),w,b
  3753  0016B4  0101               	movlb	1	; () banked
  3754  0016B6  116D               	iorwf	(??_sort+1)& (0+255),w,b
  3755  0016B8  A4D8               	btfss	status,2,c
  3756  0016BA  EF81  F006         	goto	l7892
  3757  0016BE                     l334:
  3758                           
  3759                           ; BSR set to: 1
  3760                           ;start.c: 371: }
  3761                           ;start.c: 373: TMR0ON = 0;
  3762  0016BE  9ED5               	bcf	4053,7,c	;volatile
  3763                           
  3764                           ;start.c: 374: TMR0IE = 0;
  3765  0016C0  9AF2               	bcf	intcon,5,c	;volatile
  3766                           
  3767                           ; BSR set to: 1
  3768                           ;start.c: 376: Eeprom_WriteByte(1, yopCap);
  3769  0016C2  0E00               	movlw	0
  3770  0016C4  0100               	movlb	0	; () banked
  3771  0016C6  6FB8               	movwf	(Eeprom_WriteByte@address+1)& (0+255),b
  3772  0016C8  0E01               	movlw	1
  3773  0016CA  6FB7               	movwf	Eeprom_WriteByte@address& (0+255),b
  3774  0016CC  C1C2  F0B9         	movff	_yopCap,Eeprom_WriteByte@data
  3775  0016D0  C1C3  F0BA         	movff	_yopCap+1,Eeprom_WriteByte@data+1
  3776  0016D4  EC66  F02E         	call	_Eeprom_WriteByte	;wreg free
  3777                           
  3778                           ;start.c: 378: displayLog(eskaCap, eskaNoCap, yopCap, yopNoCap, timeElapsed);
  3779  0016D8  C1BA  F15D         	movff	_eskaCap,displayLog@eskaCap
  3780  0016DC  C1BB  F15E         	movff	_eskaCap+1,displayLog@eskaCap+1
  3781  0016E0  C1BC  F15F         	movff	_eskaNoCap,displayLog@eskaNoCap
  3782  0016E4  C1BD  F160         	movff	_eskaNoCap+1,displayLog@eskaNoCap+1
  3783  0016E8  C1C2  F161         	movff	_yopCap,displayLog@yopCap
  3784  0016EC  C1C3  F162         	movff	_yopCap+1,displayLog@yopCap+1
  3785  0016F0  C1C4  F163         	movff	_yopNoCap,displayLog@yopNoCap
  3786  0016F4  C1C5  F164         	movff	_yopNoCap+1,displayLog@yopNoCap+1
  3787  0016F8  C0C7  F165         	movff	_timeElapsed,displayLog@time
  3788  0016FC  C0C8  F166         	movff	_timeElapsed+1,displayLog@time+1
  3789  001700  ECA2  F026         	call	_displayLog	;wreg free
  3790  001704  0012               	return		;funcret
  3791  001706                     __end_of_sort:
  3792                           	opt stack 0
  3793                           tblptru	equ	0xFF8
  3794                           intcon	equ	0xFF2
  3795                           intcon3	equ	0xFF0
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _ultrasonicFindBottle *****************
  3801 ;; Defined at:
  3802 ;;		line 36 in file "start.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  a               2   47[BANK1 ] int 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2   41[BANK1 ] int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3816 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;Total ram usage:        8 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    7
  3823 ;; This function calls:
  3824 ;;		___awtoft
  3825 ;;		___ftdiv
  3826 ;;		___fttol
  3827 ;; This function is called by:
  3828 ;;		_sort
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text2
  3833  0043DE                     __ptext2:
  3834                           	opt stack 0
  3835  0043DE                     _ultrasonicFindBottle:
  3836                           	opt stack 22
  3837                           
  3838                           ;start.c: 37: int a;
  3839                           ;start.c: 38: LATEbits.LATE0 = 1;
  3840                           
  3841                           ;incstack = 0
  3842  0043DE  808D               	bsf	3981,0,c	;volatile
  3843                           
  3844                           ;start.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
  3845  0043E0  0E06               	movlw	6
  3846  0043E2                     u11257:
  3847  0043E2  2EE8               	decfsz	wreg,f,c
  3848  0043E4  D7FE               	bra	u11257
  3849  0043E6  D000               	nop2	
  3850                           
  3851                           ;start.c: 40: LATEbits.LATE0 = 0;
  3852  0043E8  908D               	bcf	3981,0,c	;volatile
  3853                           
  3854                           ;start.c: 42: TMR1H = 0;
  3855  0043EA  0E00               	movlw	0
  3856  0043EC  6ECF               	movwf	4047,c	;volatile
  3857                           
  3858                           ;start.c: 43: TMR1L = 0;
  3859  0043EE  0E00               	movlw	0
  3860  0043F0  6ECE               	movwf	4046,c	;volatile
  3861                           
  3862                           ;start.c: 45: TMR1ON = 1;
  3863  0043F2  80CD               	bsf	4045,0,c	;volatile
  3864                           
  3865                           ;start.c: 46: while (!PORTEbits.RE1)
  3866  0043F4  D025               	goto	l256
  3867  0043F6                     l7786:
  3868                           
  3869                           ;start.c: 47: {
  3870                           ;start.c: 48: a = (TMR1L | (TMR1H << 8));
  3871  0043F6  50CF               	movf	4047,w,c	;volatile
  3872  0043F8  0101               	movlb	1	; () banked
  3873  0043FA  6F2C               	movwf	(??_ultrasonicFindBottle+1)& (0+255),b
  3874  0043FC  6B2B               	clrf	??_ultrasonicFindBottle& (0+255),b
  3875  0043FE  50CE               	movf	4046,w,c	;volatile
  3876  004400  0101               	movlb	1	; () banked
  3877  004402  6F2D               	movwf	(??_ultrasonicFindBottle+2)& (0+255),b
  3878  004404  6B2E               	clrf	(??_ultrasonicFindBottle+3)& (0+255),b
  3879  004406  0101               	movlb	1	; () banked
  3880  004408  512B               	movf	??_ultrasonicFindBottle& (0+255),w,b
  3881  00440A  0101               	movlb	1	; () banked
  3882  00440C  112D               	iorwf	(??_ultrasonicFindBottle+2)& (0+255),w,b
  3883  00440E  0101               	movlb	1	; () banked
  3884  004410  6F2F               	movwf	ultrasonicFindBottle@a& (0+255),b
  3885  004412  0101               	movlb	1	; () banked
  3886  004414  512C               	movf	(??_ultrasonicFindBottle+1)& (0+255),w,b
  3887  004416  0101               	movlb	1	; () banked
  3888  004418  112E               	iorwf	(??_ultrasonicFindBottle+3)& (0+255),w,b
  3889  00441A  0101               	movlb	1	; () banked
  3890  00441C  6F30               	movwf	(ultrasonicFindBottle@a+1)& (0+255),b
  3891                           
  3892                           ;start.c: 49: if (a > 50) return 0;
  3893  00441E  0101               	movlb	1	; () banked
  3894  004420  BF30               	btfsc	(ultrasonicFindBottle@a+1)& (0+255),7,b
  3895  004422  D00E               	goto	l256
  3896  004424  0101               	movlb	1	; () banked
  3897  004426  5130               	movf	(ultrasonicFindBottle@a+1)& (0+255),w,b
  3898  004428  E105               	bnz	u10350
  3899  00442A  0E33               	movlw	51
  3900  00442C  0101               	movlb	1	; () banked
  3901  00442E  5D2F               	subwf	ultrasonicFindBottle@a& (0+255),w,b
  3902  004430  A0D8               	btfss	status,0,c
  3903  004432  D006               	goto	l256
  3904  004434                     u10350:
  3905                           
  3906                           ; BSR set to: 1
  3907  004434  0E00               	movlw	0
  3908  004436  0101               	movlb	1	; () banked
  3909  004438  6F2A               	movwf	(?_ultrasonicFindBottle+1)& (0+255),b
  3910  00443A  0E00               	movlw	0
  3911  00443C  6F29               	movwf	?_ultrasonicFindBottle& (0+255),b
  3912                           
  3913                           ; BSR set to: 1
  3914  00443E  0012               	return	
  3915  004440                     l256:
  3916  004440  A284               	btfss	3972,1,c	;volatile
  3917  004442  D7D9               	goto	l7786
  3918                           
  3919                           ;start.c: 50: }
  3920                           ;start.c: 51: TMR1ON = 0;
  3921  004444  90CD               	bcf	4045,0,c	;volatile
  3922                           
  3923                           ;start.c: 53: TMR1H = 0;
  3924  004446  0E00               	movlw	0
  3925  004448  6ECF               	movwf	4047,c	;volatile
  3926                           
  3927                           ;start.c: 54: TMR1L = 0;
  3928  00444A  0E00               	movlw	0
  3929  00444C  6ECE               	movwf	4046,c	;volatile
  3930                           
  3931                           ;start.c: 56: TMR1ON = 1;
  3932  00444E  80CD               	bsf	4045,0,c	;volatile
  3933  004450                     l261:
  3934  004450  B284               	btfsc	3972,1,c	;volatile
  3935  004452  D7FE               	goto	l261
  3936                           
  3937                           ;start.c: 58: TMR1ON = 0;
  3938  004454  90CD               	bcf	4045,0,c	;volatile
  3939                           
  3940                           ;start.c: 60: a = (TMR1L | (TMR1H << 8));
  3941  004456  50CF               	movf	4047,w,c	;volatile
  3942  004458  0101               	movlb	1	; () banked
  3943  00445A  6F2C               	movwf	(??_ultrasonicFindBottle+1)& (0+255),b
  3944  00445C  6B2B               	clrf	??_ultrasonicFindBottle& (0+255),b
  3945  00445E  50CE               	movf	4046,w,c	;volatile
  3946  004460  0101               	movlb	1	; () banked
  3947  004462  6F2D               	movwf	(??_ultrasonicFindBottle+2)& (0+255),b
  3948  004464  6B2E               	clrf	(??_ultrasonicFindBottle+3)& (0+255),b
  3949  004466  0101               	movlb	1	; () banked
  3950  004468  512B               	movf	??_ultrasonicFindBottle& (0+255),w,b
  3951  00446A  0101               	movlb	1	; () banked
  3952  00446C  112D               	iorwf	(??_ultrasonicFindBottle+2)& (0+255),w,b
  3953  00446E  0101               	movlb	1	; () banked
  3954  004470  6F2F               	movwf	ultrasonicFindBottle@a& (0+255),b
  3955  004472  0101               	movlb	1	; () banked
  3956  004474  512C               	movf	(??_ultrasonicFindBottle+1)& (0+255),w,b
  3957  004476  0101               	movlb	1	; () banked
  3958  004478  112E               	iorwf	(??_ultrasonicFindBottle+3)& (0+255),w,b
  3959  00447A  0101               	movlb	1	; () banked
  3960  00447C  6F30               	movwf	(ultrasonicFindBottle@a+1)& (0+255),b
  3961                           
  3962                           ; BSR set to: 1
  3963                           ;start.c: 61: a = (int) a / 58.82;
  3964  00447E  0E48               	movlw	72
  3965  004480  0101               	movlb	1	; () banked
  3966  004482  6F06               	movwf	___ftdiv@f2& (0+255),b
  3967  004484  0E6B               	movlw	107
  3968  004486  0101               	movlb	1	; () banked
  3969  004488  6F07               	movwf	(___ftdiv@f2+1)& (0+255),b
  3970  00448A  0E42               	movlw	66
  3971  00448C  0101               	movlb	1	; () banked
  3972  00448E  6F08               	movwf	(___ftdiv@f2+2)& (0+255),b
  3973  004490  C12F  F100         	movff	ultrasonicFindBottle@a,___awtoft@c
  3974  004494  C130  F101         	movff	ultrasonicFindBottle@a+1,___awtoft@c+1
  3975  004498  ECDB  F02C         	call	___awtoft	;wreg free
  3976  00449C  C100  F103         	movff	?___awtoft,___ftdiv@f1
  3977  0044A0  C101  F104         	movff	?___awtoft+1,___ftdiv@f1+1
  3978  0044A4  C102  F105         	movff	?___awtoft+2,___ftdiv@f1+2
  3979  0044A8  ECA7  F020         	call	___ftdiv	;wreg free
  3980  0044AC  C103  F11A         	movff	?___ftdiv,___fttol@f1
  3981  0044B0  C104  F11B         	movff	?___ftdiv+1,___fttol@f1+1
  3982  0044B4  C105  F11C         	movff	?___ftdiv+2,___fttol@f1+2
  3983  0044B8  EC4D  F021         	call	___fttol	;wreg free
  3984  0044BC  C11A  F12F         	movff	?___fttol,ultrasonicFindBottle@a
  3985  0044C0  C11B  F130         	movff	?___fttol+1,ultrasonicFindBottle@a+1
  3986                           
  3987                           ;start.c: 62: a = a + 1;
  3988  0044C4  0E01               	movlw	1
  3989  0044C6  0101               	movlb	1	; () banked
  3990  0044C8  252F               	addwf	ultrasonicFindBottle@a& (0+255),w,b
  3991  0044CA  0101               	movlb	1	; () banked
  3992  0044CC  6F2F               	movwf	ultrasonicFindBottle@a& (0+255),b
  3993  0044CE  0E00               	movlw	0
  3994  0044D0  0101               	movlb	1	; () banked
  3995  0044D2  2130               	addwfc	(ultrasonicFindBottle@a+1)& (0+255),w,b
  3996  0044D4  0101               	movlb	1	; () banked
  3997  0044D6  6F30               	movwf	(ultrasonicFindBottle@a+1)& (0+255),b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;start.c: 64: if (a > 1 & a <= 5) {
  4001  0044D8  0101               	movlb	1	; () banked
  4002  0044DA  BF30               	btfsc	(ultrasonicFindBottle@a+1)& (0+255),7,b
  4003  0044DC  D018               	goto	l7808
  4004  0044DE  0101               	movlb	1	; () banked
  4005  0044E0  5130               	movf	(ultrasonicFindBottle@a+1)& (0+255),w,b
  4006  0044E2  E105               	bnz	u10380
  4007  0044E4  0E02               	movlw	2
  4008  0044E6  0101               	movlb	1	; () banked
  4009  0044E8  5D2F               	subwf	ultrasonicFindBottle@a& (0+255),w,b
  4010  0044EA  A0D8               	btfss	status,0,c
  4011  0044EC  D010               	goto	l7808
  4012  0044EE                     u10380:
  4013                           
  4014                           ; BSR set to: 1
  4015  0044EE  0101               	movlb	1	; () banked
  4016  0044F0  BF30               	btfsc	(ultrasonicFindBottle@a+1)& (0+255),7,b
  4017  0044F2  D008               	goto	l7806
  4018  0044F4  0101               	movlb	1	; () banked
  4019  0044F6  5130               	movf	(ultrasonicFindBottle@a+1)& (0+255),w,b
  4020  0044F8  E10A               	bnz	l7808
  4021  0044FA  0E06               	movlw	6
  4022  0044FC  0101               	movlb	1	; () banked
  4023  0044FE  5D2F               	subwf	ultrasonicFindBottle@a& (0+255),w,b
  4024  004500  B0D8               	btfsc	status,0,c
  4025  004502  D005               	goto	l7808
  4026  004504                     l7806:
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;start.c: 65: return a;
  4030  004504  C12F  F129         	movff	ultrasonicFindBottle@a,?_ultrasonicFindBottle
  4031  004508  C130  F12A         	movff	ultrasonicFindBottle@a+1,?_ultrasonicFindBottle+1
  4032  00450C  0012               	return	
  4033  00450E                     l7808:
  4034                           
  4035                           ; BSR set to: 1
  4036                           ;start.c: 66: }
  4037                           ;start.c: 67: return 0;
  4038  00450E  0E00               	movlw	0
  4039  004510  0101               	movlb	1	; () banked
  4040  004512  6F2A               	movwf	(?_ultrasonicFindBottle+1)& (0+255),b
  4041  004514  0E00               	movlw	0
  4042  004516  6F29               	movwf	?_ultrasonicFindBottle& (0+255),b
  4043  004518  0012               	return	
  4044  00451A                     __end_of_ultrasonicFindBottle:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           intcon	equ	0xFF2
  4048                           intcon3	equ	0xFF0
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function ___ftdiv *****************
  4054 ;; Defined at:
  4055 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  f1              3    3[BANK1 ] float 
  4058 ;;  f2              3    6[BANK1 ] float 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  f3              3   13[BANK1 ] float 
  4061 ;;  sign            1   17[BANK1 ] unsigned char 
  4062 ;;  exp             1   16[BANK1 ] unsigned char 
  4063 ;;  cntr            1   12[BANK1 ] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  3    3[BANK1 ] float 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4073 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;Total ram usage:       15 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    6
  4080 ;; This function calls:
  4081 ;;		___ftpack
  4082 ;; This function is called by:
  4083 ;;		_ultrasonicFindBottle
  4084 ;;		_sort
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text3
  4089  00414E                     __ptext3:
  4090                           	opt stack 0
  4091  00414E                     ___ftdiv:
  4092                           	opt stack 22
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;incstack = 0
  4096  00414E  C105  F109         	movff	___ftdiv@f1+2,??___ftdiv
  4097  004152  0101               	movlb	1	; () banked
  4098  004154  6B0A               	clrf	(??___ftdiv+1)& (0+255),b
  4099  004156  6B0B               	clrf	(??___ftdiv+2)& (0+255),b
  4100  004158  0101               	movlb	1	; () banked
  4101  00415A  3504               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4102  00415C  0101               	movlb	1	; () banked
  4103  00415E  3709               	rlcf	??___ftdiv& (0+255),f,b
  4104  004160  E301               	bnc	u10291
  4105  004162  810A               	bsf	(??___ftdiv+1)& (0+255),0,b
  4106  004164                     u10291:
  4107  004164  0101               	movlb	1	; () banked
  4108  004166  5109               	movf	??___ftdiv& (0+255),w,b
  4109  004168  0101               	movlb	1	; () banked
  4110  00416A  6F10               	movwf	___ftdiv@exp& (0+255),b
  4111  00416C  0101               	movlb	1	; () banked
  4112  00416E  5110               	movf	___ftdiv@exp& (0+255),w,b
  4113  004170  A4D8               	btfss	status,2,c
  4114  004172  D00A               	goto	l7722
  4115                           
  4116                           ; BSR set to: 1
  4117  004174  0E00               	movlw	0
  4118  004176  0101               	movlb	1	; () banked
  4119  004178  6F03               	movwf	?___ftdiv& (0+255),b
  4120  00417A  0E00               	movlw	0
  4121  00417C  0101               	movlb	1	; () banked
  4122  00417E  6F04               	movwf	(?___ftdiv+1)& (0+255),b
  4123  004180  0E00               	movlw	0
  4124  004182  0101               	movlb	1	; () banked
  4125  004184  6F05               	movwf	(?___ftdiv+2)& (0+255),b
  4126                           
  4127                           ; BSR set to: 1
  4128  004186  0012               	return	
  4129  004188                     l7722:
  4130                           
  4131                           ; BSR set to: 1
  4132  004188  C108  F109         	movff	___ftdiv@f2+2,??___ftdiv
  4133  00418C  0101               	movlb	1	; () banked
  4134  00418E  6B0A               	clrf	(??___ftdiv+1)& (0+255),b
  4135  004190  6B0B               	clrf	(??___ftdiv+2)& (0+255),b
  4136  004192  0101               	movlb	1	; () banked
  4137  004194  3507               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4138  004196  0101               	movlb	1	; () banked
  4139  004198  3709               	rlcf	??___ftdiv& (0+255),f,b
  4140  00419A  E301               	bnc	u10311
  4141  00419C  810A               	bsf	(??___ftdiv+1)& (0+255),0,b
  4142  00419E                     u10311:
  4143  00419E  0101               	movlb	1	; () banked
  4144  0041A0  5109               	movf	??___ftdiv& (0+255),w,b
  4145  0041A2  0101               	movlb	1	; () banked
  4146  0041A4  6F11               	movwf	___ftdiv@sign& (0+255),b
  4147  0041A6  0101               	movlb	1	; () banked
  4148  0041A8  5111               	movf	___ftdiv@sign& (0+255),w,b
  4149  0041AA  A4D8               	btfss	status,2,c
  4150  0041AC  D00A               	goto	l7728
  4151                           
  4152                           ; BSR set to: 1
  4153  0041AE  0E00               	movlw	0
  4154  0041B0  0101               	movlb	1	; () banked
  4155  0041B2  6F03               	movwf	?___ftdiv& (0+255),b
  4156  0041B4  0E00               	movlw	0
  4157  0041B6  0101               	movlb	1	; () banked
  4158  0041B8  6F04               	movwf	(?___ftdiv+1)& (0+255),b
  4159  0041BA  0E00               	movlw	0
  4160  0041BC  0101               	movlb	1	; () banked
  4161  0041BE  6F05               	movwf	(?___ftdiv+2)& (0+255),b
  4162                           
  4163                           ; BSR set to: 1
  4164  0041C0  0012               	return	
  4165  0041C2                     l7728:
  4166                           
  4167                           ; BSR set to: 1
  4168  0041C2  0E00               	movlw	0
  4169  0041C4  0101               	movlb	1	; () banked
  4170  0041C6  6F0D               	movwf	___ftdiv@f3& (0+255),b
  4171  0041C8  0E00               	movlw	0
  4172  0041CA  0101               	movlb	1	; () banked
  4173  0041CC  6F0E               	movwf	(___ftdiv@f3+1)& (0+255),b
  4174  0041CE  0E00               	movlw	0
  4175  0041D0  0101               	movlb	1	; () banked
  4176  0041D2  6F0F               	movwf	(___ftdiv@f3+2)& (0+255),b
  4177                           
  4178                           ; BSR set to: 1
  4179  0041D4  0101               	movlb	1	; () banked
  4180  0041D6  5111               	movf	___ftdiv@sign& (0+255),w,b
  4181  0041D8  0F89               	addlw	137
  4182  0041DA  0101               	movlb	1	; () banked
  4183  0041DC  5F10               	subwf	___ftdiv@exp& (0+255),f,b
  4184                           
  4185                           ; BSR set to: 1
  4186  0041DE  C105  F111         	movff	___ftdiv@f1+2,___ftdiv@sign
  4187                           
  4188                           ; BSR set to: 1
  4189  0041E2  0101               	movlb	1	; () banked
  4190  0041E4  5108               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4191  0041E6  0101               	movlb	1	; () banked
  4192  0041E8  1B11               	xorwf	___ftdiv@sign& (0+255),f,b
  4193                           
  4194                           ; BSR set to: 1
  4195  0041EA  0E80               	movlw	128
  4196  0041EC  0101               	movlb	1	; () banked
  4197  0041EE  1711               	andwf	___ftdiv@sign& (0+255),f,b
  4198                           
  4199                           ; BSR set to: 1
  4200  0041F0  0101               	movlb	1	; () banked
  4201  0041F2  8F04               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4202                           
  4203                           ; BSR set to: 1
  4204  0041F4  0EFF               	movlw	255
  4205  0041F6  0101               	movlb	1	; () banked
  4206  0041F8  1703               	andwf	___ftdiv@f1& (0+255),f,b
  4207  0041FA  0EFF               	movlw	255
  4208  0041FC  0101               	movlb	1	; () banked
  4209  0041FE  1704               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4210  004200  0E00               	movlw	0
  4211  004202  0101               	movlb	1	; () banked
  4212  004204  1705               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4213                           
  4214                           ; BSR set to: 1
  4215  004206  0101               	movlb	1	; () banked
  4216  004208  8F07               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4217                           
  4218                           ; BSR set to: 1
  4219  00420A  0EFF               	movlw	255
  4220  00420C  0101               	movlb	1	; () banked
  4221  00420E  1706               	andwf	___ftdiv@f2& (0+255),f,b
  4222  004210  0EFF               	movlw	255
  4223  004212  0101               	movlb	1	; () banked
  4224  004214  1707               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4225  004216  0E00               	movlw	0
  4226  004218  0101               	movlb	1	; () banked
  4227  00421A  1708               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4228                           
  4229                           ; BSR set to: 1
  4230  00421C  0E18               	movlw	24
  4231  00421E  0101               	movlb	1	; () banked
  4232  004220  6F0C               	movwf	___ftdiv@cntr& (0+255),b
  4233  004222                     l7748:
  4234                           
  4235                           ; BSR set to: 1
  4236  004222  0101               	movlb	1	; () banked
  4237  004224  90D8               	bcf	status,0,c
  4238  004226  370D               	rlcf	___ftdiv@f3& (0+255),f,b
  4239  004228  370E               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4240  00422A  370F               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4241                           
  4242                           ; BSR set to: 1
  4243  00422C  0101               	movlb	1	; () banked
  4244  00422E  5106               	movf	___ftdiv@f2& (0+255),w,b
  4245  004230  0101               	movlb	1	; () banked
  4246  004232  5D03               	subwf	___ftdiv@f1& (0+255),w,b
  4247  004234  0101               	movlb	1	; () banked
  4248  004236  5107               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4249  004238  0101               	movlb	1	; () banked
  4250  00423A  5904               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4251  00423C  0101               	movlb	1	; () banked
  4252  00423E  5108               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4253  004240  0101               	movlb	1	; () banked
  4254  004242  5905               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4255  004244  A0D8               	btfss	status,0,c
  4256  004246  D00E               	goto	l977
  4257                           
  4258                           ; BSR set to: 1
  4259  004248  0101               	movlb	1	; () banked
  4260  00424A  5106               	movf	___ftdiv@f2& (0+255),w,b
  4261  00424C  0101               	movlb	1	; () banked
  4262  00424E  5F03               	subwf	___ftdiv@f1& (0+255),f,b
  4263  004250  0101               	movlb	1	; () banked
  4264  004252  5107               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4265  004254  0101               	movlb	1	; () banked
  4266  004256  5B04               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4267  004258  0101               	movlb	1	; () banked
  4268  00425A  5108               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4269  00425C  0101               	movlb	1	; () banked
  4270  00425E  5B05               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4271                           
  4272                           ; BSR set to: 1
  4273  004260  0101               	movlb	1	; () banked
  4274  004262  810D               	bsf	___ftdiv@f3& (0+255),0,b
  4275  004264                     l977:
  4276                           
  4277                           ; BSR set to: 1
  4278  004264  0101               	movlb	1	; () banked
  4279  004266  90D8               	bcf	status,0,c
  4280  004268  3703               	rlcf	___ftdiv@f1& (0+255),f,b
  4281  00426A  3704               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4282  00426C  3705               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4283                           
  4284                           ; BSR set to: 1
  4285  00426E  0101               	movlb	1	; () banked
  4286  004270  2F0C               	decfsz	___ftdiv@cntr& (0+255),f,b
  4287  004272  D7D7               	goto	l7748
  4288                           
  4289                           ; BSR set to: 1
  4290                           
  4291                           ; BSR set to: 1
  4292  004274  C10D  F0B7         	movff	___ftdiv@f3,___ftpack@arg
  4293  004278  C10E  F0B8         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4294  00427C  C10F  F0B9         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4295  004280  C110  F0BA         	movff	___ftdiv@exp,___ftpack@exp
  4296  004284  C111  F0BB         	movff	___ftdiv@sign,___ftpack@sign
  4297  004288  ECBA  F023         	call	___ftpack	;wreg free
  4298  00428C  C0B7  F103         	movff	?___ftpack,?___ftdiv
  4299  004290  C0B8  F104         	movff	?___ftpack+1,?___ftdiv+1
  4300  004294  C0B9  F105         	movff	?___ftpack+2,?___ftdiv+2
  4301  004298  0012               	return	
  4302  00429A                     __end_of___ftdiv:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           intcon	equ	0xFF2
  4306                           intcon3	equ	0xFF0
  4307                           postinc0	equ	0xFEE
  4308                           wreg	equ	0xFE8
  4309                           status	equ	0xFD8
  4310                           
  4311 ;; *************** function ___awtoft *****************
  4312 ;; Defined at:
  4313 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  c               2    0[BANK1 ] int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  sign            1   69[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  3    0[BANK1 ] float 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4327 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;Total ram usage:        4 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    6
  4334 ;; This function calls:
  4335 ;;		___ftpack
  4336 ;; This function is called by:
  4337 ;;		_ultrasonicFindBottle
  4338 ;;		_sort
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text4
  4343  0059B6                     __ptext4:
  4344                           	opt stack 0
  4345  0059B6                     ___awtoft:
  4346                           	opt stack 22
  4347                           
  4348                           ;incstack = 0
  4349  0059B6  0E00               	movlw	0
  4350  0059B8  0100               	movlb	0	; () banked
  4351  0059BA  6FC5               	movwf	___awtoft@sign& (0+255),b
  4352                           
  4353                           ; BSR set to: 0
  4354  0059BC  0101               	movlb	1	; () banked
  4355  0059BE  AF01               	btfss	(___awtoft@c+1)& (0+255),7,b
  4356  0059C0  D008               	goto	l7770
  4357                           
  4358                           ; BSR set to: 1
  4359  0059C2  0101               	movlb	1	; () banked
  4360  0059C4  6D00               	negf	___awtoft@c& (0+255),b
  4361  0059C6  1F01               	comf	(___awtoft@c+1)& (0+255),f,b
  4362  0059C8  B0D8               	btfsc	status,0,c
  4363  0059CA  2B01               	incf	(___awtoft@c+1)& (0+255),f,b
  4364                           
  4365                           ; BSR set to: 1
  4366  0059CC  0E01               	movlw	1
  4367  0059CE  0100               	movlb	0	; () banked
  4368  0059D0  6FC5               	movwf	___awtoft@sign& (0+255),b
  4369  0059D2                     l7770:
  4370  0059D2  C100  F0B7         	movff	___awtoft@c,___ftpack@arg
  4371  0059D6  C101  F0B8         	movff	___awtoft@c+1,___ftpack@arg+1
  4372  0059DA  0100               	movlb	0	; () banked
  4373  0059DC  6BB9               	clrf	(___ftpack@arg+2)& (0+255),b
  4374  0059DE  0E8E               	movlw	142
  4375  0059E0  0100               	movlb	0	; () banked
  4376  0059E2  6FBA               	movwf	___ftpack@exp& (0+255),b
  4377  0059E4  C0C5  F0BB         	movff	___awtoft@sign,___ftpack@sign
  4378  0059E8  ECBA  F023         	call	___ftpack	;wreg free
  4379  0059EC  C0B7  F100         	movff	?___ftpack,?___awtoft
  4380  0059F0  C0B8  F101         	movff	?___ftpack+1,?___awtoft+1
  4381  0059F4  C0B9  F102         	movff	?___ftpack+2,?___awtoft+2
  4382  0059F8  0012               	return	
  4383  0059FA                     __end_of___awtoft:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           intcon	equ	0xFF2
  4387                           intcon3	equ	0xFF0
  4388                           postinc0	equ	0xFEE
  4389                           wreg	equ	0xFE8
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function _rotate90 *****************
  4393 ;; Defined at:
  4394 ;;		line 74 in file "start.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  i               2   56[BANK0 ] unsigned int 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;Total ram usage:        3 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    5
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_sort
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text5
  4423  0057FE                     __ptext5:
  4424                           	opt stack 0
  4425  0057FE                     _rotate90:
  4426                           	opt stack 24
  4427                           
  4428                           ;start.c: 75: unsigned int i;
  4429                           ;start.c: 76: for (i = 0; i < 50; i++) {
  4430                           
  4431                           ;incstack = 0
  4432  0057FE  0E00               	movlw	0
  4433  005800  0100               	movlb	0	; () banked
  4434  005802  6FB9               	movwf	(rotate90@i+1)& (0+255),b
  4435  005804  0E00               	movlw	0
  4436  005806  6FB8               	movwf	rotate90@i& (0+255),b
  4437  005808                     l5562:
  4438                           
  4439                           ; BSR set to: 0
  4440  005808  0100               	movlb	0	; () banked
  4441  00580A  51B9               	movf	(rotate90@i+1)& (0+255),w,b
  4442  00580C  E11D               	bnz	l269
  4443  00580E  0E32               	movlw	50
  4444  005810  0100               	movlb	0	; () banked
  4445  005812  5DB8               	subwf	rotate90@i& (0+255),w,b
  4446  005814  B0D8               	btfsc	status,0,c
  4447  005816  0012               	return	
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;start.c: 77: LATCbits.LATC6 = 1;
  4451                           
  4452                           ; BSR set to: 0
  4453  005818  8C8B               	bsf	3979,6,c	;volatile
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;start.c: 78: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  4457  00581A  0E06               	movlw	6
  4458  00581C  0100               	movlb	0	; () banked
  4459  00581E  6FB7               	movwf	??_rotate90& (0+255),b
  4460  005820  0E30               	movlw	48
  4461  005822                     u11267:
  4462  005822  2EE8               	decfsz	wreg,f,c
  4463  005824  D7FE               	bra	u11267
  4464  005826  2FB7               	decfsz	??_rotate90& (0+255),f,b
  4465  005828  D7FC               	bra	u11267
  4466  00582A  F000               	nop	
  4467                           
  4468                           ;start.c: 79: LATCbits.LATC6 = 0;
  4469  00582C  9C8B               	bcf	3979,6,c	;volatile
  4470                           
  4471                           ;start.c: 80: _delay((unsigned long)((18000)*(8000000/4000000.0)));
  4472  00582E  0E2F               	movlw	47
  4473  005830  0100               	movlb	0	; () banked
  4474  005832  6FB7               	movwf	??_rotate90& (0+255),b
  4475  005834  0EBF               	movlw	191
  4476  005836                     u11277:
  4477  005836  2EE8               	decfsz	wreg,f,c
  4478  005838  D7FE               	bra	u11277
  4479  00583A  2FB7               	decfsz	??_rotate90& (0+255),f,b
  4480  00583C  D7FC               	bra	u11277
  4481  00583E  D000               	nop2	
  4482  005840  0100               	movlb	0	; () banked
  4483  005842  4BB8               	infsnz	rotate90@i& (0+255),f,b
  4484  005844  2BB9               	incf	(rotate90@i+1)& (0+255),f,b
  4485  005846  D7E0               	goto	l5562
  4486  005848                     l269:
  4487                           
  4488                           ; BSR set to: 0
  4489  005848  0012               	return		;funcret
  4490  00584A                     __end_of_rotate90:
  4491                           	opt stack 0
  4492                           tblptru	equ	0xFF8
  4493                           intcon	equ	0xFF2
  4494                           intcon3	equ	0xFF0
  4495                           postinc0	equ	0xFEE
  4496                           wreg	equ	0xFE8
  4497                           status	equ	0xFD8
  4498                           
  4499 ;; *************** function _rotate270 *****************
  4500 ;; Defined at:
  4501 ;;		line 93 in file "start.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  i               2   56[BANK0 ] unsigned int 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  2   68[None  ] int 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:        3 bytes
  4520 ;; Hardware stack levels used:    1
  4521 ;; Hardware stack levels required when called:    5
  4522 ;; This function calls:
  4523 ;;		Nothing
  4524 ;; This function is called by:
  4525 ;;		_sort
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text6
  4530  0058E2                     __ptext6:
  4531                           	opt stack 0
  4532  0058E2                     _rotate270:
  4533                           	opt stack 24
  4534                           
  4535                           ;start.c: 94: unsigned int i;
  4536                           ;start.c: 95: for (i = 0; i < 50; i++) {
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;incstack = 0
  4540  0058E2  0E00               	movlw	0
  4541  0058E4  0100               	movlb	0	; () banked
  4542  0058E6  6FB9               	movwf	(rotate270@i+1)& (0+255),b
  4543  0058E8  0E00               	movlw	0
  4544  0058EA  6FB8               	movwf	rotate270@i& (0+255),b
  4545  0058EC                     l5610:
  4546                           
  4547                           ; BSR set to: 0
  4548  0058EC  0100               	movlb	0	; () banked
  4549  0058EE  51B9               	movf	(rotate270@i+1)& (0+255),w,b
  4550  0058F0  E11B               	bnz	l279
  4551  0058F2  0E32               	movlw	50
  4552  0058F4  0100               	movlb	0	; () banked
  4553  0058F6  5DB8               	subwf	rotate270@i& (0+255),w,b
  4554  0058F8  B0D8               	btfsc	status,0,c
  4555  0058FA  0012               	return	
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;start.c: 96: LATCbits.LATC6 = 1;
  4559                           
  4560                           ; BSR set to: 0
  4561  0058FC  8C8B               	bsf	3979,6,c	;volatile
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;start.c: 97: _delay((unsigned long)((1730)*(8000000/4000000.0)));
  4565  0058FE  0E05               	movlw	5
  4566  005900  0100               	movlb	0	; () banked
  4567  005902  6FB7               	movwf	??_rotate270& (0+255),b
  4568  005904  0E7D               	movlw	125
  4569  005906                     u11287:
  4570  005906  2EE8               	decfsz	wreg,f,c
  4571  005908  D7FE               	bra	u11287
  4572  00590A  2FB7               	decfsz	??_rotate270& (0+255),f,b
  4573  00590C  D7FC               	bra	u11287
  4574                           
  4575                           ;start.c: 98: LATCbits.LATC6 = 0;
  4576  00590E  9C8B               	bcf	3979,6,c	;volatile
  4577                           
  4578                           ;start.c: 99: _delay((unsigned long)((18270)*(8000000/4000000.0)));
  4579  005910  0E30               	movlw	48
  4580  005912  0100               	movlb	0	; () banked
  4581  005914  6FB7               	movwf	??_rotate270& (0+255),b
  4582  005916  0E73               	movlw	115
  4583  005918                     u11297:
  4584  005918  2EE8               	decfsz	wreg,f,c
  4585  00591A  D7FE               	bra	u11297
  4586  00591C  2FB7               	decfsz	??_rotate270& (0+255),f,b
  4587  00591E  D7FC               	bra	u11297
  4588  005920  0100               	movlb	0	; () banked
  4589  005922  4BB8               	infsnz	rotate270@i& (0+255),f,b
  4590  005924  2BB9               	incf	(rotate270@i+1)& (0+255),f,b
  4591  005926  D7E2               	goto	l5610
  4592  005928                     l279:
  4593                           
  4594                           ; BSR set to: 0
  4595  005928  0012               	return		;funcret
  4596  00592A                     __end_of_rotate270:
  4597                           	opt stack 0
  4598                           tblptru	equ	0xFF8
  4599                           intcon	equ	0xFF2
  4600                           intcon3	equ	0xFF0
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function _rotate180 *****************
  4606 ;; Defined at:
  4607 ;;		line 84 in file "start.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  i               2   56[BANK0 ] unsigned int 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2   66[None  ] int 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;Total ram usage:        3 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    5
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_sort
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text7
  4636  00584A                     __ptext7:
  4637                           	opt stack 0
  4638  00584A                     _rotate180:
  4639                           	opt stack 24
  4640                           
  4641                           ;start.c: 85: unsigned int i;
  4642                           ;start.c: 86: for (i = 0; i < 100; i++) {
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;incstack = 0
  4646  00584A  0E00               	movlw	0
  4647  00584C  0100               	movlb	0	; () banked
  4648  00584E  6FB9               	movwf	(rotate180@i+1)& (0+255),b
  4649  005850  0E00               	movlw	0
  4650  005852  6FB8               	movwf	rotate180@i& (0+255),b
  4651  005854                     l5598:
  4652                           
  4653                           ; BSR set to: 0
  4654  005854  0100               	movlb	0	; () banked
  4655  005856  51B9               	movf	(rotate180@i+1)& (0+255),w,b
  4656  005858  E11D               	bnz	l274
  4657  00585A  0E64               	movlw	100
  4658  00585C  0100               	movlb	0	; () banked
  4659  00585E  5DB8               	subwf	rotate180@i& (0+255),w,b
  4660  005860  B0D8               	btfsc	status,0,c
  4661  005862  0012               	return	
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;start.c: 87: LATCbits.LATC6 = 1;
  4665                           
  4666                           ; BSR set to: 0
  4667  005864  8C8B               	bsf	3979,6,c	;volatile
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;start.c: 88: _delay((unsigned long)((2000)*(8000000/4000000.0)));
  4671  005866  0E06               	movlw	6
  4672  005868  0100               	movlb	0	; () banked
  4673  00586A  6FB7               	movwf	??_rotate180& (0+255),b
  4674  00586C  0E30               	movlw	48
  4675  00586E                     u11307:
  4676  00586E  2EE8               	decfsz	wreg,f,c
  4677  005870  D7FE               	bra	u11307
  4678  005872  2FB7               	decfsz	??_rotate180& (0+255),f,b
  4679  005874  D7FC               	bra	u11307
  4680  005876  F000               	nop	
  4681                           
  4682                           ;start.c: 89: LATCbits.LATC6 = 0;
  4683  005878  9C8B               	bcf	3979,6,c	;volatile
  4684                           
  4685                           ;start.c: 90: _delay((unsigned long)((18000)*(8000000/4000000.0)));
  4686  00587A  0E2F               	movlw	47
  4687  00587C  0100               	movlb	0	; () banked
  4688  00587E  6FB7               	movwf	??_rotate180& (0+255),b
  4689  005880  0EBF               	movlw	191
  4690  005882                     u11317:
  4691  005882  2EE8               	decfsz	wreg,f,c
  4692  005884  D7FE               	bra	u11317
  4693  005886  2FB7               	decfsz	??_rotate180& (0+255),f,b
  4694  005888  D7FC               	bra	u11317
  4695  00588A  D000               	nop2	
  4696  00588C  0100               	movlb	0	; () banked
  4697  00588E  4BB8               	infsnz	rotate180@i& (0+255),f,b
  4698  005890  2BB9               	incf	(rotate180@i+1)& (0+255),f,b
  4699  005892  D7E0               	goto	l5598
  4700  005894                     l274:
  4701                           
  4702                           ; BSR set to: 0
  4703  005894  0012               	return		;funcret
  4704  005896                     __end_of_rotate180:
  4705                           	opt stack 0
  4706                           tblptru	equ	0xFF8
  4707                           intcon	equ	0xFF2
  4708                           intcon3	equ	0xFF0
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _resetCounts *****************
  4714 ;; Defined at:
  4715 ;;		line 23 in file "start.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    5
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_sort
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text8
  4744  005BE4                     __ptext8:
  4745                           	opt stack 0
  4746  005BE4                     _resetCounts:
  4747                           	opt stack 24
  4748                           
  4749                           ;start.c: 24: eskaCap = 0;
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;incstack = 0
  4753  005BE4  0E00               	movlw	0
  4754  005BE6  0101               	movlb	1	; () banked
  4755  005BE8  6FBB               	movwf	(_eskaCap+1)& (0+255),b
  4756  005BEA  0E00               	movlw	0
  4757  005BEC  6FBA               	movwf	_eskaCap& (0+255),b
  4758                           
  4759                           ;start.c: 25: eskaNoCap = 0;
  4760  005BEE  0E00               	movlw	0
  4761  005BF0  0101               	movlb	1	; () banked
  4762  005BF2  6FBD               	movwf	(_eskaNoCap+1)& (0+255),b
  4763  005BF4  0E00               	movlw	0
  4764  005BF6  6FBC               	movwf	_eskaNoCap& (0+255),b
  4765                           
  4766                           ;start.c: 26: yopCap = 0;
  4767  005BF8  0E00               	movlw	0
  4768  005BFA  0101               	movlb	1	; () banked
  4769  005BFC  6FC3               	movwf	(_yopCap+1)& (0+255),b
  4770  005BFE  0E00               	movlw	0
  4771  005C00  6FC2               	movwf	_yopCap& (0+255),b
  4772                           
  4773                           ;start.c: 27: yopNoCap = 0;
  4774  005C02  0E00               	movlw	0
  4775  005C04  0101               	movlb	1	; () banked
  4776  005C06  6FC5               	movwf	(_yopNoCap+1)& (0+255),b
  4777  005C08  0E00               	movlw	0
  4778  005C0A  6FC4               	movwf	_yopNoCap& (0+255),b
  4779                           
  4780                           ;start.c: 28: timeElapsed = 0;
  4781  005C0C  0E00               	movlw	0
  4782  005C0E  0100               	movlb	0	; () banked
  4783  005C10  6FC8               	movwf	(_timeElapsed+1)& (0+255),b
  4784  005C12  0E00               	movlw	0
  4785  005C14  6FC7               	movwf	_timeElapsed& (0+255),b
  4786                           
  4787                           ; BSR set to: 0
  4788  005C16  0012               	return		;funcret
  4789  005C18                     __end_of_resetCounts:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           intcon	equ	0xFF2
  4793                           intcon3	equ	0xFF0
  4794                           postinc0	equ	0xFEE
  4795                           wreg	equ	0xFE8
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _readADC *****************
  4799 ;; Defined at:
  4800 ;;		line 126 in file "start.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  channel         1    wreg     unsigned char 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  channel         1   56[BANK0 ] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;Total ram usage:        2 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    5
  4821 ;; This function calls:
  4822 ;;		Nothing
  4823 ;; This function is called by:
  4824 ;;		_sort
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text9
  4829  005C76                     __ptext9:
  4830                           	opt stack 0
  4831  005C76                     _readADC:
  4832                           	opt stack 24
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;incstack = 0
  4836                           ;readADC@channel stored from wreg
  4837  005C76  0100               	movlb	0	; () banked
  4838  005C78  6FB8               	movwf	readADC@channel& (0+255),b
  4839                           
  4840                           ;start.c: 128: ADCON0 = ((channel << 2));
  4841  005C7A  0100               	movlb	0	; () banked
  4842  005C7C  45B8               	rlncf	readADC@channel& (0+255),w,b
  4843  005C7E  46E8               	rlncf	wreg,f,c
  4844  005C80  0BFC               	andlw	252
  4845  005C82  6EC2               	movwf	4034,c	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;start.c: 129: ADON = 1;
  4849  005C84  80C2               	bsf	4034,0,c	;volatile
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;start.c: 130: ADCON0bits.GO = 1;
  4853  005C86  82C2               	bsf	4034,1,c	;volatile
  4854                           
  4855                           ;start.c: 131: while (ADCON0bits.GO_NOT_DONE) {
  4856  005C88  D009               	goto	l5558
  4857  005C8A                     l5556:
  4858                           
  4859                           ;start.c: 132: _delay((unsigned long)((5)*(8000000/4000.0)));
  4860  005C8A  0E0D               	movlw	13
  4861  005C8C  0100               	movlb	0	; () banked
  4862  005C8E  6FB7               	movwf	??_readADC& (0+255),b
  4863  005C90  0EFB               	movlw	251
  4864  005C92                     u11327:
  4865  005C92  2EE8               	decfsz	wreg,f,c
  4866  005C94  D7FE               	bra	u11327
  4867  005C96  2FB7               	decfsz	??_readADC& (0+255),f,b
  4868  005C98  D7FC               	bra	u11327
  4869  005C9A  D000               	nop2	
  4870  005C9C                     l5558:
  4871  005C9C  A2C2               	btfss	4034,1,c	;volatile
  4872  005C9E  0012               	return	
  4873  005CA0  D7F4               	goto	l5556
  4874  005CA2                     __end_of_readADC:
  4875                           	opt stack 0
  4876                           tblptru	equ	0xFF8
  4877                           intcon	equ	0xFF2
  4878                           intcon3	equ	0xFF0
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           status	equ	0xFD8
  4882                           
  4883 ;; *************** function _initLCD *****************
  4884 ;; Defined at:
  4885 ;;		line 15 in file "lcd.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;Total ram usage:        1 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    7
  4906 ;; This function calls:
  4907 ;;		_lcdInst
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;;		_sort
  4911 ;;		_showLogMenu
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text10
  4916  00592A                     __ptext10:
  4917                           	opt stack 0
  4918  00592A                     _initLCD:
  4919                           	opt stack 22
  4920                           
  4921                           ;lcd.c: 16: _delay((unsigned long)((15)*(8000000/4000.0)));
  4922                           
  4923                           ;incstack = 0
  4924  00592A  0E27               	movlw	39
  4925  00592C  0100               	movlb	0	; () banked
  4926  00592E  6FBA               	movwf	??_initLCD& (0+255),b
  4927  005930  0EF5               	movlw	245
  4928  005932                     u11337:
  4929  005932  2EE8               	decfsz	wreg,f,c
  4930  005934  D7FE               	bra	u11337
  4931  005936  2FBA               	decfsz	??_initLCD& (0+255),f,b
  4932  005938  D7FC               	bra	u11337
  4933                           
  4934                           ;lcd.c: 17: lcdInst(0b00110011);
  4935  00593A  0E33               	movlw	51
  4936  00593C  ECF3  F02E         	call	_lcdInst
  4937                           
  4938                           ;lcd.c: 18: lcdInst(0b00110010);
  4939  005940  0E32               	movlw	50
  4940  005942  ECF3  F02E         	call	_lcdInst
  4941                           
  4942                           ;lcd.c: 19: lcdInst(0b00101000);
  4943  005946  0E28               	movlw	40
  4944  005948  ECF3  F02E         	call	_lcdInst
  4945                           
  4946                           ;lcd.c: 20: lcdInst(0b00001111);
  4947  00594C  0E0F               	movlw	15
  4948  00594E  ECF3  F02E         	call	_lcdInst
  4949                           
  4950                           ;lcd.c: 21: lcdInst(0b00000110);
  4951  005952  0E06               	movlw	6
  4952  005954  ECF3  F02E         	call	_lcdInst
  4953                           
  4954                           ;lcd.c: 22: lcdInst(0b00000001);
  4955  005958  0E01               	movlw	1
  4956  00595A  ECF3  F02E         	call	_lcdInst
  4957                           
  4958                           ;lcd.c: 23: _delay((unsigned long)((15)*(8000000/4000.0)));
  4959  00595E  0E27               	movlw	39
  4960  005960  0100               	movlb	0	; () banked
  4961  005962  6FBA               	movwf	??_initLCD& (0+255),b
  4962  005964  0EF5               	movlw	245
  4963  005966                     u11347:
  4964  005966  2EE8               	decfsz	wreg,f,c
  4965  005968  D7FE               	bra	u11347
  4966  00596A  2FBA               	decfsz	??_initLCD& (0+255),f,b
  4967  00596C  D7FC               	bra	u11347
  4968  00596E  0012               	return		;funcret
  4969  005970                     __end_of_initLCD:
  4970                           	opt stack 0
  4971                           tblptru	equ	0xFF8
  4972                           intcon	equ	0xFF2
  4973                           intcon3	equ	0xFF0
  4974                           postinc0	equ	0xFEE
  4975                           wreg	equ	0xFE8
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function _displayLog *****************
  4979 ;; Defined at:
  4980 ;;		line 18 in file "logs.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  eskaCap         2   93[BANK1 ] int 
  4983 ;;  eskaNoCap       2   95[BANK1 ] int 
  4984 ;;  yopCap          2   97[BANK1 ] int 
  4985 ;;  yopNoCap        2   99[BANK1 ] int 
  4986 ;;  time            2  101[BANK1 ] int 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  press1          1  107[BANK1 ] unsigned char 
  4989 ;;  total           2  105[BANK1 ] int 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:       15 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    9
  5006 ;; This function calls:
  5007 ;;		_lcdInst
  5008 ;;		_printf
  5009 ;; This function is called by:
  5010 ;;		_sort
  5011 ;;		_showLogMenu
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text11
  5016  004D44                     __ptext11:
  5017                           	opt stack 0
  5018  004D44                     _displayLog:
  5019                           	opt stack 20
  5020                           
  5021                           ;logs.c: 20: int total = eskaCap + eskaNoCap + yopCap + yopNoCap;
  5022                           
  5023                           ;incstack = 0
  5024  004D44  0101               	movlb	1	; () banked
  5025  004D46  515F               	movf	displayLog@eskaNoCap& (0+255),w,b
  5026  004D48  0101               	movlb	1	; () banked
  5027  004D4A  255D               	addwf	displayLog@eskaCap& (0+255),w,b
  5028  004D4C  0101               	movlb	1	; () banked
  5029  004D4E  6F67               	movwf	??_displayLog& (0+255),b
  5030  004D50  0101               	movlb	1	; () banked
  5031  004D52  5160               	movf	(displayLog@eskaNoCap+1)& (0+255),w,b
  5032  004D54  0101               	movlb	1	; () banked
  5033  004D56  215E               	addwfc	(displayLog@eskaCap+1)& (0+255),w,b
  5034  004D58  0101               	movlb	1	; () banked
  5035  004D5A  6F68               	movwf	(??_displayLog+1)& (0+255),b
  5036  004D5C  0101               	movlb	1	; () banked
  5037  004D5E  5161               	movf	displayLog@yopCap& (0+255),w,b
  5038  004D60  0101               	movlb	1	; () banked
  5039  004D62  2767               	addwf	??_displayLog& (0+255),f,b
  5040  004D64  0101               	movlb	1	; () banked
  5041  004D66  5162               	movf	(displayLog@yopCap+1)& (0+255),w,b
  5042  004D68  0101               	movlb	1	; () banked
  5043  004D6A  2368               	addwfc	(??_displayLog+1)& (0+255),f,b
  5044  004D6C  0101               	movlb	1	; () banked
  5045  004D6E  5163               	movf	displayLog@yopNoCap& (0+255),w,b
  5046  004D70  0101               	movlb	1	; () banked
  5047  004D72  2567               	addwf	??_displayLog& (0+255),w,b
  5048  004D74  0101               	movlb	1	; () banked
  5049  004D76  6F69               	movwf	displayLog@total& (0+255),b
  5050  004D78  0101               	movlb	1	; () banked
  5051  004D7A  5164               	movf	(displayLog@yopNoCap+1)& (0+255),w,b
  5052  004D7C  0101               	movlb	1	; () banked
  5053  004D7E  2168               	addwfc	(??_displayLog+1)& (0+255),w,b
  5054  004D80  0101               	movlb	1	; () banked
  5055  004D82  6F6A               	movwf	(displayLog@total+1)& (0+255),b
  5056                           
  5057                           ; BSR set to: 1
  5058                           ;logs.c: 21: lcdInst (0b10000000);
  5059  004D84  0E80               	movlw	128
  5060  004D86  ECF3  F02E         	call	_lcdInst
  5061                           
  5062                           ;logs.c: 22: printf ("Total:%d Time:%d", total, time);
  5063  004D8A  0E57               	movlw	low STR_16
  5064  004D8C  0101               	movlb	1	; () banked
  5065  004D8E  6F2F               	movwf	printf@f& (0+255),b
  5066  004D90  0EFF               	movlw	high STR_16
  5067  004D92  0101               	movlb	1	; () banked
  5068  004D94  6F30               	movwf	(printf@f+1)& (0+255),b
  5069  004D96  C169  F131         	movff	displayLog@total,?_printf+2
  5070  004D9A  C16A  F132         	movff	displayLog@total+1,?_printf+3
  5071  004D9E  C165  F133         	movff	displayLog@time,?_printf+4
  5072  004DA2  C166  F134         	movff	displayLog@time+1,?_printf+5
  5073  004DA6  EC09  F000         	call	_printf	;wreg free
  5074                           
  5075                           ;logs.c: 23: lcdInst(0b11000000);
  5076  004DAA  0EC0               	movlw	192
  5077  004DAC  ECF3  F02E         	call	_lcdInst
  5078                           
  5079                           ;logs.c: 24: printf("ec:%den:%dyc:%dyn:%d", eskaCap, eskaNoCap, yopCap, yopNoCap);
  5080  004DB0  0E31               	movlw	low STR_15
  5081  004DB2  0101               	movlb	1	; () banked
  5082  004DB4  6F2F               	movwf	printf@f& (0+255),b
  5083  004DB6  0EFF               	movlw	high STR_15
  5084  004DB8  0101               	movlb	1	; () banked
  5085  004DBA  6F30               	movwf	(printf@f+1)& (0+255),b
  5086  004DBC  C15D  F131         	movff	displayLog@eskaCap,?_printf+2
  5087  004DC0  C15E  F132         	movff	displayLog@eskaCap+1,?_printf+3
  5088  004DC4  C15F  F133         	movff	displayLog@eskaNoCap,?_printf+4
  5089  004DC8  C160  F134         	movff	displayLog@eskaNoCap+1,?_printf+5
  5090  004DCC  C161  F135         	movff	displayLog@yopCap,?_printf+6
  5091  004DD0  C162  F136         	movff	displayLog@yopCap+1,?_printf+7
  5092  004DD4  C163  F137         	movff	displayLog@yopNoCap,?_printf+8
  5093  004DD8  C164  F138         	movff	displayLog@yopNoCap+1,?_printf+9
  5094  004DDC  EC09  F000         	call	_printf	;wreg free
  5095  004DE0                     l404:
  5096  004DE0  A281               	btfss	3969,1,c	;volatile
  5097  004DE2  D7FE               	goto	l404
  5098                           
  5099                           ;logs.c: 28: unsigned char press1 =(PORTB & 0xF0)>>4;
  5100  004DE4  3881               	swapf	3969,w,c	;volatile
  5101  004DE6  0B0F               	andlw	15
  5102  004DE8  0B0F               	andlw	15
  5103  004DEA  0101               	movlb	1	; () banked
  5104  004DEC  6F6B               	movwf	displayLog@press1& (0+255),b
  5105  004DEE                     l407:
  5106  004DEE  B281               	btfsc	3969,1,c	;volatile
  5107  004DF0  D7FE               	goto	l407
  5108                           
  5109                           ;logs.c: 30: if (keys[press1] == 'C') return;
  5110  004DF2  0101               	movlb	1	; () banked
  5111  004DF4  516B               	movf	displayLog@press1& (0+255),w,b
  5112  004DF6  0D01               	mullw	1
  5113  004DF8  0E13               	movlw	low _keys
  5114  004DFA  24F3               	addwf	prodl,w,c
  5115  004DFC  6EF6               	movwf	tblptrl,c
  5116  004DFE  0EFF               	movlw	high _keys
  5117  004E00  20F4               	addwfc	prodh,w,c
  5118  004E02  6EF7               	movwf	tblptrh,c
  5119  004E04                     	if	0	;There are less than 3 active tblptr bytes
  5120  004E04                     	endif
  5121  004E04  0008               	tblrd		*
  5122  004E06  50F5               	movf	tablat,w,c
  5123  004E08  0A43               	xorlw	67
  5124  004E0A  B4D8               	btfsc	status,2,c
  5125  004E0C  0012               	return	
  5126  004E0E  D7E8               	goto	l404
  5127  004E10                     __end_of_displayLog:
  5128                           	opt stack 0
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           intcon	equ	0xFF2
  5136                           intcon3	equ	0xFF0
  5137                           postinc0	equ	0xFEE
  5138                           wreg	equ	0xFE8
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _dc_reverse *****************
  5142 ;; Defined at:
  5143 ;;		line 115 in file "start.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  i               2   56[BANK0 ] int 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;Total ram usage:        3 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:    6
  5164 ;; This function calls:
  5165 ;;		_dc_stop
  5166 ;; This function is called by:
  5167 ;;		_sort
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text12
  5172  00575E                     __ptext12:
  5173                           	opt stack 0
  5174  00575E                     _dc_reverse:
  5175                           	opt stack 23
  5176                           
  5177                           ;start.c: 116: dc_stop();
  5178                           
  5179                           ; BSR set to: 1
  5180                           ;incstack = 0
  5181  00575E  EC14  F02F         	call	_dc_stop	;wreg free
  5182                           
  5183                           ;start.c: 117: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  5184  005762  0E00               	movlw	0
  5185  005764  0100               	movlb	0	; () banked
  5186  005766  6FB9               	movwf	(dc_reverse@i+1)& (0+255),b
  5187  005768  0E00               	movlw	0
  5188  00576A  6FB8               	movwf	dc_reverse@i& (0+255),b
  5189                           
  5190                           ; BSR set to: 0
  5191  00576C  0100               	movlb	0	; () banked
  5192  00576E  BFB9               	btfsc	(dc_reverse@i+1)& (0+255),7,b
  5193  005770  D008               	goto	l5592
  5194  005772  0100               	movlb	0	; () banked
  5195  005774  51B9               	movf	(dc_reverse@i+1)& (0+255),w,b
  5196  005776  E118               	bnz	l291
  5197  005778  0E64               	movlw	100
  5198  00577A  0100               	movlb	0	; () banked
  5199  00577C  5DB8               	subwf	dc_reverse@i& (0+255),w,b
  5200  00577E  B0D8               	btfsc	status,0,c
  5201  005780  D013               	goto	l291
  5202  005782                     l5592:
  5203                           
  5204                           ; BSR set to: 0
  5205  005782  0E1A               	movlw	26
  5206  005784  0100               	movlb	0	; () banked
  5207  005786  6FB7               	movwf	??_dc_reverse& (0+255),b
  5208  005788  0EF8               	movlw	248
  5209  00578A                     u11357:
  5210  00578A  2EE8               	decfsz	wreg,f,c
  5211  00578C  D7FE               	bra	u11357
  5212  00578E  2FB7               	decfsz	??_dc_reverse& (0+255),f,b
  5213  005790  D7FC               	bra	u11357
  5214  005792  F000               	nop	
  5215  005794  0100               	movlb	0	; () banked
  5216  005796  4BB8               	infsnz	dc_reverse@i& (0+255),f,b
  5217  005798  2BB9               	incf	(dc_reverse@i+1)& (0+255),f,b
  5218  00579A  0100               	movlb	0	; () banked
  5219  00579C  BFB9               	btfsc	(dc_reverse@i+1)& (0+255),7,b
  5220  00579E  D7F1               	goto	l5592
  5221  0057A0  0100               	movlb	0	; () banked
  5222  0057A2  51B9               	movf	(dc_reverse@i+1)& (0+255),w,b
  5223  0057A4  E101               	bnz	u6790
  5224  0057A6  D7E8               	goto	L5
  5225  0057A8                     u6790:
  5226  0057A8                     l291:
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;start.c: 118: LATCbits.LATC2 = 0;
  5230  0057A8  948B               	bcf	3979,2,c	;volatile
  5231                           
  5232                           ;start.c: 119: LATCbits.LATC1 = 1;
  5233  0057AA  828B               	bsf	3979,1,c	;volatile
  5234                           
  5235                           ; BSR set to: 0
  5236  0057AC  0012               	return		;funcret
  5237  0057AE                     __end_of_dc_reverse:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           intcon3	equ	0xFF0
  5247                           postinc0	equ	0xFEE
  5248                           wreg	equ	0xFE8
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function _dc_forward *****************
  5252 ;; Defined at:
  5253 ;;		line 108 in file "start.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;  i               2   56[BANK0 ] int 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0, cstack
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;Total ram usage:        3 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    6
  5274 ;; This function calls:
  5275 ;;		_dc_stop
  5276 ;; This function is called by:
  5277 ;;		_sort
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text13
  5282  0057AE                     __ptext13:
  5283                           	opt stack 0
  5284  0057AE                     _dc_forward:
  5285                           	opt stack 23
  5286                           
  5287                           ;start.c: 109: dc_stop();
  5288                           
  5289                           ; BSR set to: 0
  5290                           ;incstack = 0
  5291  0057AE  EC14  F02F         	call	_dc_stop	;wreg free
  5292                           
  5293                           ;start.c: 110: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  5294  0057B2  0E00               	movlw	0
  5295  0057B4  0100               	movlb	0	; () banked
  5296  0057B6  6FB9               	movwf	(dc_forward@i+1)& (0+255),b
  5297  0057B8  0E00               	movlw	0
  5298  0057BA  6FB8               	movwf	dc_forward@i& (0+255),b
  5299                           
  5300                           ; BSR set to: 0
  5301  0057BC  0100               	movlb	0	; () banked
  5302  0057BE  BFB9               	btfsc	(dc_forward@i+1)& (0+255),7,b
  5303  0057C0  D008               	goto	l5580
  5304  0057C2  0100               	movlb	0	; () banked
  5305  0057C4  51B9               	movf	(dc_forward@i+1)& (0+255),w,b
  5306  0057C6  E118               	bnz	l286
  5307  0057C8  0E64               	movlw	100
  5308  0057CA  0100               	movlb	0	; () banked
  5309  0057CC  5DB8               	subwf	dc_forward@i& (0+255),w,b
  5310  0057CE  B0D8               	btfsc	status,0,c
  5311  0057D0  D013               	goto	l286
  5312  0057D2                     l5580:
  5313                           
  5314                           ; BSR set to: 0
  5315  0057D2  0E1A               	movlw	26
  5316  0057D4  0100               	movlb	0	; () banked
  5317  0057D6  6FB7               	movwf	??_dc_forward& (0+255),b
  5318  0057D8  0EF8               	movlw	248
  5319  0057DA                     u11367:
  5320  0057DA  2EE8               	decfsz	wreg,f,c
  5321  0057DC  D7FE               	bra	u11367
  5322  0057DE  2FB7               	decfsz	??_dc_forward& (0+255),f,b
  5323  0057E0  D7FC               	bra	u11367
  5324  0057E2  F000               	nop	
  5325  0057E4  0100               	movlb	0	; () banked
  5326  0057E6  4BB8               	infsnz	dc_forward@i& (0+255),f,b
  5327  0057E8  2BB9               	incf	(dc_forward@i+1)& (0+255),f,b
  5328  0057EA  0100               	movlb	0	; () banked
  5329  0057EC  BFB9               	btfsc	(dc_forward@i+1)& (0+255),7,b
  5330  0057EE  D7F1               	goto	l5580
  5331  0057F0  0100               	movlb	0	; () banked
  5332  0057F2  51B9               	movf	(dc_forward@i+1)& (0+255),w,b
  5333  0057F4  E101               	bnz	u6770
  5334  0057F6  D7E8               	goto	L6
  5335  0057F8                     u6770:
  5336  0057F8                     l286:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;start.c: 111: LATCbits.LATC1 = 0;
  5340  0057F8  928B               	bcf	3979,1,c	;volatile
  5341                           
  5342                           ;start.c: 112: LATCbits.LATC2 = 1;
  5343  0057FA  848B               	bsf	3979,2,c	;volatile
  5344                           
  5345                           ; BSR set to: 0
  5346  0057FC  0012               	return		;funcret
  5347  0057FE                     __end_of_dc_forward:
  5348                           	opt stack 0
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           intcon	equ	0xFF2
  5356                           intcon3	equ	0xFF0
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           status	equ	0xFD8
  5360                           
  5361 ;; *************** function _dc_stop *****************
  5362 ;; Defined at:
  5363 ;;		line 103 in file "start.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;		None
  5366 ;; Auto vars:     Size  Location     Type
  5367 ;;		None
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  1    wreg      void 
  5370 ;; Registers used:
  5371 ;;		None
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;Total ram usage:        0 bytes
  5382 ;; Hardware stack levels used:    1
  5383 ;; Hardware stack levels required when called:    5
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;;		_dc_forward
  5389 ;;		_dc_reverse
  5390 ;;		_sort
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text14
  5395  005E28                     __ptext14:
  5396                           	opt stack 0
  5397  005E28                     _dc_stop:
  5398                           	opt stack 24
  5399                           
  5400                           ;start.c: 104: LATCbits.LATC2 = 0;
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;incstack = 0
  5404  005E28  948B               	bcf	3979,2,c	;volatile
  5405                           
  5406                           ;start.c: 105: LATCbits.LATC1 = 0;
  5407  005E2A  928B               	bcf	3979,1,c	;volatile
  5408  005E2C  0012               	return		;funcret
  5409  005E2E                     __end_of_dc_stop:
  5410                           	opt stack 0
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           prodh	equ	0xFF4
  5416                           prodl	equ	0xFF3
  5417                           intcon	equ	0xFF2
  5418                           intcon3	equ	0xFF0
  5419                           postinc0	equ	0xFEE
  5420                           wreg	equ	0xFE8
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _Eeprom_WriteByte *****************
  5424 ;; Defined at:
  5425 ;;		line 59 in file "logs.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  address         2   55[BANK0 ] unsigned short 
  5428 ;;  data            2   57[BANK0 ] unsigned short 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        4 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    5
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_sort
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text15
  5455  005CCC                     __ptext15:
  5456                           	opt stack 0
  5457  005CCC                     _Eeprom_WriteByte:
  5458                           	opt stack 24
  5459                           
  5460                           ;logs.c: 62: EEADRH = (unsigned int)(address >> 8);
  5461                           
  5462                           ;incstack = 0
  5463  005CCC  0100               	movlb	0	; () banked
  5464  005CCE  51B8               	movf	(Eeprom_WriteByte@address+1)& (0+255),w,b
  5465  005CD0  6EAA               	movwf	4010,c	;volatile
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;logs.c: 63: EEADR = (unsigned int)address;
  5469  005CD2  C0B7  FFA9         	movff	Eeprom_WriteByte@address,4009	;volatile
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;logs.c: 65: EEDATA = data;
  5473  005CD6  C0B9  FFA8         	movff	Eeprom_WriteByte@data,4008	;volatile
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;logs.c: 66: EECON1bits.EEPGD = 0;
  5477  005CDA  9EA6               	bcf	4006,7,c	;volatile
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;logs.c: 67: EECON1bits.CFGS = 0;
  5481  005CDC  9CA6               	bcf	4006,6,c	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;logs.c: 68: EECON1bits.WREN = 1;
  5485  005CDE  84A6               	bsf	4006,2,c	;volatile
  5486                           
  5487                           ;logs.c: 72: EECON2 = 0x55;
  5488  005CE0  0E55               	movlw	85
  5489  005CE2  6EA7               	movwf	4007,c	;volatile
  5490                           
  5491                           ;logs.c: 73: EECON2 = 0xAA;
  5492  005CE4  0EAA               	movlw	170
  5493  005CE6  6EA7               	movwf	4007,c	;volatile
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;logs.c: 74: EECON1bits.WR = 1;
  5497  005CE8  82A6               	bsf	4006,1,c	;volatile
  5498  005CEA                     l422:
  5499  005CEA  A8A1               	btfss	4001,4,c	;volatile
  5500  005CEC  D7FE               	goto	l422
  5501                           
  5502                           ;logs.c: 80: }
  5503                           ;logs.c: 82: PIR2bits.EEIF = 0;
  5504  005CEE  98A1               	bcf	4001,4,c	;volatile
  5505                           
  5506                           ;logs.c: 83: EECON1bits.WREN = 0;
  5507  005CF0  94A6               	bcf	4006,2,c	;volatile
  5508  005CF2  0012               	return		;funcret
  5509  005CF4                     __end_of_Eeprom_WriteByte:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           prodh	equ	0xFF4
  5516                           prodl	equ	0xFF3
  5517                           intcon	equ	0xFF2
  5518                           intcon3	equ	0xFF0
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           status	equ	0xFD8
  5522                           
  5523 ;; *************** function _printRTC *****************
  5524 ;; Defined at:
  5525 ;;		line 71 in file "I2C.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;		None
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  i               2   94[BANK1 ] int 
  5530 ;;  i               1   96[BANK1 ] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:        4 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    9
  5547 ;; This function calls:
  5548 ;;		_I2C_Master_Read
  5549 ;;		_I2C_Master_Start
  5550 ;;		_I2C_Master_Stop
  5551 ;;		_I2C_Master_Write
  5552 ;;		_lcdInst
  5553 ;;		_printf
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559                           	psect	text16
  5560  004880                     __ptext16:
  5561                           	opt stack 0
  5562  004880                     _printRTC:
  5563                           	opt stack 21
  5564                           
  5565                           ;I2C.c: 73: I2C_Master_Start();
  5566                           
  5567                           ;incstack = 0
  5568  004880  EC10  F02F         	call	_I2C_Master_Start	;wreg free
  5569                           
  5570                           ;I2C.c: 74: I2C_Master_Write(0b11010000);
  5571  004884  0E00               	movlw	0
  5572  004886  0100               	movlb	0	; () banked
  5573  004888  6FB9               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  5574  00488A  0ED0               	movlw	208
  5575  00488C  6FB8               	movwf	I2C_Master_Write@d& (0+255),b
  5576  00488E  EC07  F02F         	call	_I2C_Master_Write	;wreg free
  5577                           
  5578                           ;I2C.c: 75: I2C_Master_Write(0x00);
  5579  004892  0E00               	movlw	0
  5580  004894  0100               	movlb	0	; () banked
  5581  004896  6FB9               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  5582  004898  0E00               	movlw	0
  5583  00489A  6FB8               	movwf	I2C_Master_Write@d& (0+255),b
  5584  00489C  EC07  F02F         	call	_I2C_Master_Write	;wreg free
  5585                           
  5586                           ;I2C.c: 76: I2C_Master_Stop();
  5587  0048A0  EC0C  F02F         	call	_I2C_Master_Stop	;wreg free
  5588                           
  5589                           ;I2C.c: 79: I2C_Master_Start();
  5590  0048A4  EC10  F02F         	call	_I2C_Master_Start	;wreg free
  5591                           
  5592                           ;I2C.c: 80: I2C_Master_Write(0b11010001);
  5593  0048A8  0E00               	movlw	0
  5594  0048AA  0100               	movlb	0	; () banked
  5595  0048AC  6FB9               	movwf	(I2C_Master_Write@d+1)& (0+255),b
  5596  0048AE  0ED1               	movlw	209
  5597  0048B0  6FB8               	movwf	I2C_Master_Write@d& (0+255),b
  5598  0048B2  EC07  F02F         	call	_I2C_Master_Write	;wreg free
  5599                           
  5600                           ;I2C.c: 81: for (unsigned char i = 0; i < 0x06; i++) {
  5601  0048B6  0E00               	movlw	0
  5602  0048B8  0101               	movlb	1	; () banked
  5603  0048BA  6F60               	movwf	printRTC@i& (0+255),b
  5604  0048BC                     l7840:
  5605                           
  5606                           ; BSR set to: 1
  5607  0048BC  0E05               	movlw	5
  5608  0048BE  0101               	movlb	1	; () banked
  5609  0048C0  6560               	cpfsgt	printRTC@i& (0+255),b
  5610  0048C2  D001               	goto	l7844
  5611  0048C4  D010               	goto	l7850
  5612  0048C6                     l7844:
  5613                           
  5614                           ; BSR set to: 1
  5615                           ;I2C.c: 82: time[i] = I2C_Master_Read(1);
  5616  0048C6  0101               	movlb	1	; () banked
  5617  0048C8  5160               	movf	printRTC@i& (0+255),w,b
  5618  0048CA  0D01               	mullw	1
  5619  0048CC  0EB3               	movlw	low _time
  5620  0048CE  24F3               	addwf	prodl,w,c
  5621  0048D0  6ED9               	movwf	fsr2l,c
  5622  0048D2  0E01               	movlw	high _time
  5623  0048D4  20F4               	addwfc	prodh,w,c
  5624  0048D6  6EDA               	movwf	fsr2h,c
  5625  0048D8  0E01               	movlw	1
  5626  0048DA  EC24  F02E         	call	_I2C_Master_Read
  5627  0048DE  6EDF               	movwf	indf2,c
  5628  0048E0  0101               	movlb	1	; () banked
  5629  0048E2  2B60               	incf	printRTC@i& (0+255),f,b
  5630  0048E4  D7EB               	goto	l7840
  5631  0048E6                     l7850:
  5632                           
  5633                           ; BSR set to: 1
  5634                           ;I2C.c: 83: }
  5635                           ;I2C.c: 84: time[6] = I2C_Master_Read(0);
  5636  0048E6  0E00               	movlw	0
  5637  0048E8  EC24  F02E         	call	_I2C_Master_Read
  5638  0048EC  0101               	movlb	1	; () banked
  5639  0048EE  6FB9               	movwf	(_time+6)& (0+255),b
  5640                           
  5641                           ;I2C.c: 85: I2C_Master_Stop();
  5642  0048F0  EC0C  F02F         	call	_I2C_Master_Stop	;wreg free
  5643                           
  5644                           ;I2C.c: 86: lcdInst(0b11000000);
  5645  0048F4  0EC0               	movlw	192
  5646  0048F6  ECF3  F02E         	call	_lcdInst
  5647                           
  5648                           ;I2C.c: 87: printf("%02x/%02x  ", time[5], time[4]);
  5649  0048FA  0E87               	movlw	low STR_21
  5650  0048FC  0101               	movlb	1	; () banked
  5651  0048FE  6F2F               	movwf	printf@f& (0+255),b
  5652  004900  0EFF               	movlw	high STR_21
  5653  004902  0101               	movlb	1	; () banked
  5654  004904  6F30               	movwf	(printf@f+1)& (0+255),b
  5655  004906  C1B8  F131         	movff	_time+5,?_printf+2
  5656  00490A  0101               	movlb	1	; () banked
  5657  00490C  6B32               	clrf	(?_printf+3)& (0+255),b
  5658  00490E  C1B7  F133         	movff	_time+4,?_printf+4
  5659  004912  0101               	movlb	1	; () banked
  5660  004914  6B34               	clrf	(?_printf+5)& (0+255),b
  5661  004916  EC09  F000         	call	_printf	;wreg free
  5662                           
  5663                           ;I2C.c: 88: printf("%02x:%02x:%02x", time[2], time[1], time[0]);
  5664  00491A  0E78               	movlw	low STR_22
  5665  00491C  0101               	movlb	1	; () banked
  5666  00491E  6F2F               	movwf	printf@f& (0+255),b
  5667  004920  0EFF               	movlw	high STR_22
  5668  004922  0101               	movlb	1	; () banked
  5669  004924  6F30               	movwf	(printf@f+1)& (0+255),b
  5670  004926  C1B5  F131         	movff	_time+2,?_printf+2
  5671  00492A  0101               	movlb	1	; () banked
  5672  00492C  6B32               	clrf	(?_printf+3)& (0+255),b
  5673  00492E  C1B4  F133         	movff	_time+1,?_printf+4
  5674  004932  0101               	movlb	1	; () banked
  5675  004934  6B34               	clrf	(?_printf+5)& (0+255),b
  5676  004936  C1B3  F135         	movff	_time,?_printf+6
  5677  00493A  0101               	movlb	1	; () banked
  5678  00493C  6B36               	clrf	(?_printf+7)& (0+255),b
  5679  00493E  EC09  F000         	call	_printf	;wreg free
  5680                           
  5681                           ;I2C.c: 89: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
  5682  004942  0E00               	movlw	0
  5683  004944  0101               	movlb	1	; () banked
  5684  004946  6F5F               	movwf	(printRTC@i_868+1)& (0+255),b
  5685  004948  0E00               	movlw	0
  5686  00494A  6F5E               	movwf	printRTC@i_868& (0+255),b
  5687  00494C                     l7858:
  5688                           
  5689                           ; BSR set to: 1
  5690  00494C  0101               	movlb	1	; () banked
  5691  00494E  BF5F               	btfsc	(printRTC@i_868+1)& (0+255),7,b
  5692  004950  D008               	goto	l7862
  5693  004952  0101               	movlb	1	; () banked
  5694  004954  515F               	movf	(printRTC@i_868+1)& (0+255),w,b
  5695  004956  E112               	bnz	l525
  5696  004958  0E64               	movlw	100
  5697  00495A  0101               	movlb	1	; () banked
  5698  00495C  5D5E               	subwf	printRTC@i_868& (0+255),w,b
  5699  00495E  B0D8               	btfsc	status,0,c
  5700  004960  0012               	return	
  5701  004962                     l7862:
  5702                           
  5703                           ; BSR set to: 1
  5704  004962  0E1A               	movlw	26
  5705  004964  0101               	movlb	1	; () banked
  5706  004966  6F5D               	movwf	??_printRTC& (0+255),b
  5707  004968  0EF8               	movlw	248
  5708  00496A                     u11377:
  5709  00496A  2EE8               	decfsz	wreg,f,c
  5710  00496C  D7FE               	bra	u11377
  5711  00496E  2F5D               	decfsz	??_printRTC& (0+255),f,b
  5712  004970  D7FC               	bra	u11377
  5713  004972  F000               	nop	
  5714  004974  0101               	movlb	1	; () banked
  5715  004976  4B5E               	infsnz	printRTC@i_868& (0+255),f,b
  5716  004978  2B5F               	incf	(printRTC@i_868+1)& (0+255),f,b
  5717  00497A  D7E8               	goto	l7858
  5718  00497C                     l525:
  5719                           
  5720                           ; BSR set to: 1
  5721  00497C  0012               	return		;funcret
  5722  00497E                     __end_of_printRTC:
  5723                           	opt stack 0
  5724                           tblptru	equ	0xFF8
  5725                           tblptrh	equ	0xFF7
  5726                           tblptrl	equ	0xFF6
  5727                           tablat	equ	0xFF5
  5728                           prodh	equ	0xFF4
  5729                           prodl	equ	0xFF3
  5730                           intcon	equ	0xFF2
  5731                           intcon3	equ	0xFF0
  5732                           postinc0	equ	0xFEE
  5733                           wreg	equ	0xFE8
  5734                           indf2	equ	0xFDF
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8
  5738                           
  5739 ;; *************** function _printf *****************
  5740 ;; Defined at:
  5741 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  f               2   47[BANK1 ] PTR const unsigned char 
  5744 ;;		 -> STR_22(15), STR_21(12), STR_20(5), STR_19(9), 
  5745 ;;		 -> STR_18(9), STR_17(21), STR_16(17), STR_15(21), 
  5746 ;;		 -> STR_14(9), STR_13(11), STR_12(8), STR_11(12), 
  5747 ;;		 -> STR_10(9), STR_9(9), STR_8(6), STR_7(12), 
  5748 ;;		 -> STR_6(12), STR_5(3), STR_4(5), STR_3(6), 
  5749 ;;		 -> STR_2(3), STR_1(16), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  idx             1   66[BANK1 ] unsigned char 
  5752 ;;  val             4   81[BANK1 ] unsigned long 
  5753 ;;  tmpval          4   75[BANK1 ] struct .
  5754 ;;  fval            3   87[BANK1 ] struct .
  5755 ;;  width           2   90[BANK1 ] int 
  5756 ;;  flag            2   85[BANK1 ] unsigned short 
  5757 ;;  exp             2   79[BANK1 ] int 
  5758 ;;  prec            2   73[BANK1 ] int 
  5759 ;;  ap              2   71[BANK1 ] PTR void [1]
  5760 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5761 ;;  len             2   69[BANK1 ] unsigned int 
  5762 ;;  cp              2   67[BANK1 ] PTR const unsigned char 
  5763 ;;		 -> printf@c(1), 
  5764 ;;  c               1   92[BANK1 ] char 
  5765 ;;  d               1    0        unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  2   47[BANK1 ] int 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5775 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;Total ram usage:       46 bytes
  5780 ;; Hardware stack levels used:    1
  5781 ;; Hardware stack levels required when called:    8
  5782 ;; This function calls:
  5783 ;;		___awdiv
  5784 ;;		___ftadd
  5785 ;;		___ftge
  5786 ;;		___ftmul
  5787 ;;		___ftneg
  5788 ;;		___ftsub
  5789 ;;		___fttol
  5790 ;;		___lldiv
  5791 ;;		___llmod
  5792 ;;		___lltoft
  5793 ;;		___wmul
  5794 ;;		__div_to_l_
  5795 ;;		__tdiv_to_l_
  5796 ;;		_fround
  5797 ;;		_isdigit
  5798 ;;		_putch
  5799 ;;		_scale
  5800 ;; This function is called by:
  5801 ;;		_main
  5802 ;;		_sort
  5803 ;;		_displayLog
  5804 ;;		_printRTC
  5805 ;;		_showLogMenu
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text17
  5810  000012                     __ptext17:
  5811                           	opt stack 0
  5812  000012                     _printf:
  5813                           	opt stack 21
  5814                           
  5815                           ;doprnt.c: 466: va_list ap;
  5816                           ;doprnt.c: 499: signed char c;
  5817                           ;doprnt.c: 501: int width;
  5818                           ;doprnt.c: 504: int prec;
  5819                           ;doprnt.c: 508: unsigned short flag;
  5820                           ;doprnt.c: 515: char d;
  5821                           ;doprnt.c: 516: double fval;
  5822                           ;doprnt.c: 517: int exp;
  5823                           ;doprnt.c: 523: union {
  5824                           ;doprnt.c: 524: unsigned long vd;
  5825                           ;doprnt.c: 525: double integ;
  5826                           ;doprnt.c: 526: } tmpval;
  5827                           ;doprnt.c: 528: unsigned long val;
  5828                           ;doprnt.c: 529: unsigned len;
  5829                           ;doprnt.c: 530: const char * cp;
  5830                           ;doprnt.c: 533: *ap = __va_start();
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;incstack = 0
  5834  000012  0E31               	movlw	low (?_printf+2)
  5835  000014  0101               	movlb	1	; () banked
  5836  000016  6F47               	movwf	printf@ap& (0+255),b
  5837  000018  0E01               	movlw	high (?_printf+2)
  5838  00001A  0101               	movlb	1	; () banked
  5839  00001C  6F48               	movwf	(printf@ap+1)& (0+255),b
  5840                           
  5841                           ;doprnt.c: 536: while(c = *f++) {
  5842  00001E  EF2D  F006         	goto	l7714
  5843  000022                     l7404:
  5844                           
  5845                           ; BSR set to: 1
  5846                           ;doprnt.c: 538: if(c != '%')
  5847  000022  0E25               	movlw	37
  5848  000024  0101               	movlb	1	; () banked
  5849  000026  195C               	xorwf	printf@c& (0+255),w,b
  5850  000028  B4D8               	btfsc	status,2,c
  5851  00002A  D006               	goto	l7408
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;doprnt.c: 540: {
  5855                           ;doprnt.c: 541: (putch(c) );
  5856  00002C  0101               	movlb	1	; () banked
  5857  00002E  515C               	movf	printf@c& (0+255),w,b
  5858  000030  ECEB  F02E         	call	_putch
  5859                           
  5860                           ;doprnt.c: 542: continue;
  5861  000034  EF2D  F006         	goto	l7714
  5862  000038                     l7408:
  5863                           
  5864                           ;doprnt.c: 543: }
  5865                           ;doprnt.c: 546: width = 0;
  5866  000038  0E00               	movlw	0
  5867  00003A  0101               	movlb	1	; () banked
  5868  00003C  6F5B               	movwf	(printf@width+1)& (0+255),b
  5869  00003E  0E00               	movlw	0
  5870  000040  6F5A               	movwf	printf@width& (0+255),b
  5871                           
  5872                           ;doprnt.c: 548: flag = 0;
  5873  000042  0E00               	movlw	0
  5874  000044  0101               	movlb	1	; () banked
  5875  000046  6F56               	movwf	(printf@flag+1)& (0+255),b
  5876  000048  0E00               	movlw	0
  5877  00004A  6F55               	movwf	printf@flag& (0+255),b
  5878                           
  5879                           ; BSR set to: 1
  5880                           ;doprnt.c: 551: switch(*f) {
  5881                           
  5882                           ;doprnt.c: 550: for(;;) {
  5883  00004C  D005               	goto	l7414
  5884  00004E                     l7410:
  5885                           
  5886                           ;doprnt.c: 580: flag |= 0x04;
  5887  00004E  0101               	movlb	1	; () banked
  5888  000050  8555               	bsf	printf@flag& (0+255),2,b
  5889                           
  5890                           ;doprnt.c: 581: f++;
  5891  000052  0101               	movlb	1	; () banked
  5892  000054  4B2F               	infsnz	printf@f& (0+255),f,b
  5893  000056  2B30               	incf	(printf@f+1)& (0+255),f,b
  5894  000058                     l7414:
  5895  000058  C12F  FFF6         	movff	printf@f,tblptrl
  5896  00005C  C130  FFF7         	movff	printf@f+1,tblptrh
  5897  000060                     	if	0	;tblptru may be non-zero
  5898  000060                     	endif
  5899  000060                     	if	0	;tblptru may be non-zero
  5900  000060                     	endif
  5901  000060  0008               	tblrd		*
  5902  000062  50F5               	movf	tablat,w,c
  5903                           
  5904                           ; Switch size 1, requested type "space"
  5905                           ; Number of cases is 1, Range of values is 48 to 48
  5906                           ; switch strategies available:
  5907                           ; Name         Instructions Cycles
  5908                           ; simple_byte            4     3 (average)
  5909                           ;	Chosen strategy is simple_byte
  5910  000064  0A30               	xorlw	48	; case 48
  5911  000066  B4D8               	btfsc	status,2,c
  5912  000068  D7F2               	goto	l7410
  5913                           
  5914                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5915                           
  5916                           ;doprnt.c: 586: }
  5917                           
  5918                           ;doprnt.c: 585: break;
  5919  00006A  C12F  FFF6         	movff	printf@f,tblptrl
  5920  00006E  C130  FFF7         	movff	printf@f+1,tblptrh
  5921  000072                     	if	0	;tblptru may be non-zero
  5922  000072                     	endif
  5923  000072                     	if	0	;tblptru may be non-zero
  5924  000072                     	endif
  5925  000072  0008               	tblrd		*
  5926  000074  50F5               	movf	tablat,w,c
  5927  000076  EC51  F02E         	call	_isdigit
  5928  00007A  A0D8               	btfss	status,0,c
  5929  00007C  D09E               	goto	l7458
  5930                           
  5931                           ;doprnt.c: 598: width = 0;
  5932  00007E  0E00               	movlw	0
  5933  000080  0101               	movlb	1	; () banked
  5934  000082  6F5B               	movwf	(printf@width+1)& (0+255),b
  5935  000084  0E00               	movlw	0
  5936  000086  6F5A               	movwf	printf@width& (0+255),b
  5937  000088                     l7420:
  5938                           
  5939                           ;doprnt.c: 600: width *= 10;
  5940  000088  C15A  F100         	movff	printf@width,___wmul@multiplier
  5941  00008C  C15B  F101         	movff	printf@width+1,___wmul@multiplier+1
  5942  000090  0E00               	movlw	0
  5943  000092  0101               	movlb	1	; () banked
  5944  000094  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5945  000096  0E0A               	movlw	10
  5946  000098  6F02               	movwf	___wmul@multiplicand& (0+255),b
  5947  00009A  ECD7  F02D         	call	___wmul	;wreg free
  5948  00009E  C100  F15A         	movff	?___wmul,printf@width
  5949  0000A2  C101  F15B         	movff	?___wmul+1,printf@width+1
  5950                           
  5951                           ;doprnt.c: 601: width += *f++ - '0';
  5952  0000A6  0ED0               	movlw	208
  5953  0000A8  0101               	movlb	1	; () banked
  5954  0000AA  6F39               	movwf	??_printf& (0+255),b
  5955  0000AC  0EFF               	movlw	255
  5956  0000AE  0101               	movlb	1	; () banked
  5957  0000B0  6F3A               	movwf	(??_printf+1)& (0+255),b
  5958  0000B2  C12F  FFF6         	movff	printf@f,tblptrl
  5959  0000B6  C130  FFF7         	movff	printf@f+1,tblptrh
  5960  0000BA                     	if	0	;tblptru may be non-zero
  5961  0000BA                     	endif
  5962  0000BA                     	if	0	;tblptru may be non-zero
  5963  0000BA                     	endif
  5964  0000BA  0008               	tblrd		*
  5965  0000BC  50F5               	movf	tablat,w,c
  5966  0000BE  0101               	movlb	1	; () banked
  5967  0000C0  6F3B               	movwf	(??_printf+2)& (0+255),b
  5968  0000C2  6B3C               	clrf	(??_printf+3)& (0+255),b
  5969  0000C4  0101               	movlb	1	; () banked
  5970  0000C6  5139               	movf	??_printf& (0+255),w,b
  5971  0000C8  0101               	movlb	1	; () banked
  5972  0000CA  273B               	addwf	(??_printf+2)& (0+255),f,b
  5973  0000CC  0101               	movlb	1	; () banked
  5974  0000CE  513A               	movf	(??_printf+1)& (0+255),w,b
  5975  0000D0  0101               	movlb	1	; () banked
  5976  0000D2  233C               	addwfc	(??_printf+3)& (0+255),f,b
  5977  0000D4  0101               	movlb	1	; () banked
  5978  0000D6  513B               	movf	(??_printf+2)& (0+255),w,b
  5979  0000D8  0101               	movlb	1	; () banked
  5980  0000DA  275A               	addwf	printf@width& (0+255),f,b
  5981  0000DC  0101               	movlb	1	; () banked
  5982  0000DE  513C               	movf	(??_printf+3)& (0+255),w,b
  5983  0000E0  0101               	movlb	1	; () banked
  5984  0000E2  235B               	addwfc	(printf@width+1)& (0+255),f,b
  5985                           
  5986                           ; BSR set to: 1
  5987  0000E4  0101               	movlb	1	; () banked
  5988  0000E6  4B2F               	infsnz	printf@f& (0+255),f,b
  5989  0000E8  2B30               	incf	(printf@f+1)& (0+255),f,b
  5990                           
  5991                           ; BSR set to: 1
  5992                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5993  0000EA  C12F  FFF6         	movff	printf@f,tblptrl
  5994  0000EE  C130  FFF7         	movff	printf@f+1,tblptrh
  5995  0000F2                     	if	0	;tblptru may be non-zero
  5996  0000F2                     	endif
  5997  0000F2                     	if	0	;tblptru may be non-zero
  5998  0000F2                     	endif
  5999  0000F2  0008               	tblrd		*
  6000  0000F4  50F5               	movf	tablat,w,c
  6001  0000F6  EC51  F02E         	call	_isdigit
  6002  0000FA  A0D8               	btfss	status,0,c
  6003  0000FC  D05E               	goto	l7458
  6004  0000FE  D7C4               	goto	l7420
  6005  000100                     l7428:
  6006                           
  6007                           ;doprnt.c: 663: flag |= 0x400;
  6008  000100  0101               	movlb	1	; () banked
  6009  000102  8556               	bsf	(printf@flag+1)& (0+255),2,b
  6010                           
  6011                           ; BSR set to: 1
  6012                           ;doprnt.c: 698: case 'i':
  6013                           ;doprnt.c: 699: break;
  6014                           
  6015                           ; BSR set to: 1
  6016                           
  6017                           ;doprnt.c: 697: case 'd':
  6018                           
  6019                           ;doprnt.c: 664: break;
  6020  000104  D079               	goto	l7460
  6021  000106                     l7430:
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;doprnt.c: 721: flag |= 0x80;
  6025  000106  0101               	movlb	1	; () banked
  6026  000108  8F55               	bsf	printf@flag& (0+255),7,b
  6027                           
  6028                           ;doprnt.c: 723: break;
  6029  00010A  D076               	goto	l7460
  6030  00010C                     l7432:
  6031                           
  6032                           ; BSR set to: 1
  6033                           ;doprnt.c: 757: if(width > len)
  6034  00010C  0101               	movlb	1	; () banked
  6035  00010E  515A               	movf	printf@width& (0+255),w,b
  6036  000110  0101               	movlb	1	; () banked
  6037  000112  5D45               	subwf	printf@len& (0+255),w,b
  6038  000114  0101               	movlb	1	; () banked
  6039  000116  515B               	movf	(printf@width+1)& (0+255),w,b
  6040  000118  0101               	movlb	1	; () banked
  6041  00011A  5946               	subwfb	(printf@len+1)& (0+255),w,b
  6042  00011C  B0D8               	btfsc	status,0,c
  6043  00011E  D009               	goto	l7436
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;doprnt.c: 758: width -= len;
  6047  000120  0101               	movlb	1	; () banked
  6048  000122  5145               	movf	printf@len& (0+255),w,b
  6049  000124  0101               	movlb	1	; () banked
  6050  000126  5F5A               	subwf	printf@width& (0+255),f,b
  6051  000128  0101               	movlb	1	; () banked
  6052  00012A  5146               	movf	(printf@len+1)& (0+255),w,b
  6053  00012C  0101               	movlb	1	; () banked
  6054  00012E  5B5B               	subwfb	(printf@width+1)& (0+255),f,b
  6055  000130  D009               	goto	l7440
  6056  000132                     l7436:
  6057                           
  6058                           ; BSR set to: 1
  6059                           ;doprnt.c: 759: else
  6060                           ;doprnt.c: 760: width = 0;
  6061  000132  0E00               	movlw	0
  6062  000134  0101               	movlb	1	; () banked
  6063  000136  6F5B               	movwf	(printf@width+1)& (0+255),b
  6064  000138  0E00               	movlw	0
  6065  00013A  6F5A               	movwf	printf@width& (0+255),b
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;doprnt.c: 764: while(width--)
  6069  00013C  D003               	goto	l7440
  6070  00013E                     l7438:
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;doprnt.c: 765: (putch(' ') );
  6074  00013E  0E20               	movlw	32
  6075  000140  ECEB  F02E         	call	_putch
  6076  000144                     l7440:
  6077  000144  0101               	movlb	1	; () banked
  6078  000146  075A               	decf	printf@width& (0+255),f,b
  6079  000148  A0D8               	btfss	status,0,c
  6080  00014A  075B               	decf	(printf@width+1)& (0+255),f,b
  6081  00014C  0101               	movlb	1	; () banked
  6082  00014E  295A               	incf	printf@width& (0+255),w,b
  6083  000150  E1F6               	bnz	l7438
  6084  000152  0101               	movlb	1	; () banked
  6085  000154  295B               	incf	(printf@width+1)& (0+255),w,b
  6086  000156  B4D8               	btfsc	status,2,c
  6087  000158  D00B               	goto	l7446
  6088  00015A  D7F1               	goto	l7438
  6089  00015C                     l7442:
  6090                           
  6091                           ; BSR set to: 1
  6092                           ;doprnt.c: 768: (putch(*cp++) );
  6093  00015C  C143  FFD9         	movff	printf@cp,fsr2l
  6094  000160  C144  FFDA         	movff	printf@cp+1,fsr2h
  6095  000164  50DF               	movf	indf2,w,c
  6096  000166  ECEB  F02E         	call	_putch
  6097  00016A  0101               	movlb	1	; () banked
  6098  00016C  4B43               	infsnz	printf@cp& (0+255),f,b
  6099  00016E  2B44               	incf	(printf@cp+1)& (0+255),f,b
  6100  000170                     l7446:
  6101                           
  6102                           ; BSR set to: 1
  6103  000170  0101               	movlb	1	; () banked
  6104  000172  0745               	decf	printf@len& (0+255),f,b
  6105  000174  A0D8               	btfss	status,0,c
  6106  000176  0746               	decf	(printf@len+1)& (0+255),f,b
  6107  000178  0101               	movlb	1	; () banked
  6108  00017A  2945               	incf	printf@len& (0+255),w,b
  6109  00017C  E1EF               	bnz	l7442
  6110  00017E  0101               	movlb	1	; () banked
  6111  000180  2946               	incf	(printf@len+1)& (0+255),w,b
  6112  000182  B4D8               	btfsc	status,2,c
  6113  000184  EF2D  F006         	goto	l7714
  6114  000188  D7E9               	goto	l7442
  6115  00018A                     l7448:
  6116                           
  6117                           ; BSR set to: 1
  6118                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  6119  00018A  C147  FFD9         	movff	printf@ap,fsr2l
  6120  00018E  C148  FFDA         	movff	printf@ap+1,fsr2h
  6121  000192  50DF               	movf	indf2,w,c
  6122  000194  0101               	movlb	1	; () banked
  6123  000196  6F5C               	movwf	printf@c& (0+255),b
  6124                           
  6125                           ; BSR set to: 1
  6126  000198  0E02               	movlw	2
  6127  00019A  0101               	movlb	1	; () banked
  6128  00019C  2747               	addwf	printf@ap& (0+255),f,b
  6129  00019E  0E00               	movlw	0
  6130  0001A0  2348               	addwfc	(printf@ap+1)& (0+255),f,b
  6131  0001A2                     l7452:
  6132                           
  6133                           ; BSR set to: 1
  6134                           ;doprnt.c: 805: cp = (char *)&c;
  6135  0001A2  0E5C               	movlw	low printf@c
  6136  0001A4  0101               	movlb	1	; () banked
  6137  0001A6  6F43               	movwf	printf@cp& (0+255),b
  6138  0001A8  0E01               	movlw	high printf@c
  6139  0001AA  0101               	movlb	1	; () banked
  6140  0001AC  6F44               	movwf	(printf@cp+1)& (0+255),b
  6141                           
  6142                           ; BSR set to: 1
  6143                           ;doprnt.c: 806: len = 1;
  6144  0001AE  0E00               	movlw	0
  6145  0001B0  0101               	movlb	1	; () banked
  6146  0001B2  6F46               	movwf	(printf@len+1)& (0+255),b
  6147  0001B4  0E01               	movlw	1
  6148  0001B6  6F45               	movwf	printf@len& (0+255),b
  6149                           
  6150                           ;doprnt.c: 807: goto dostring;
  6151  0001B8  D7A9               	goto	l7432
  6152  0001BA                     l7458:
  6153  0001BA  C12F  FFF6         	movff	printf@f,tblptrl
  6154  0001BE  C130  FFF7         	movff	printf@f+1,tblptrh
  6155  0001C2  0101               	movlb	1	; () banked
  6156  0001C4  4B2F               	infsnz	printf@f& (0+255),f,b
  6157  0001C6  2B30               	incf	(printf@f+1)& (0+255),f,b
  6158  0001C8                     	if	0	;tblptru may be non-zero
  6159  0001C8                     	endif
  6160  0001C8                     	if	0	;tblptru may be non-zero
  6161  0001C8                     	endif
  6162  0001C8  0008               	tblrd		*
  6163  0001CA  CFF5 F15C          	movff	tablat,printf@c
  6164  0001CE  0101               	movlb	1	; () banked
  6165  0001D0  515C               	movf	printf@c& (0+255),w,b
  6166                           
  6167                           ; Switch size 1, requested type "space"
  6168                           ; Number of cases is 6, Range of values is 0 to 120
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte           19    10 (average)
  6172                           ;	Chosen strategy is simple_byte
  6173  0001D2  0A00               	xorlw	0	; case 0
  6174  0001D4  B4D8               	btfsc	status,2,c
  6175  0001D6  0012               	return	
  6176  0001D8  0A63               	xorlw	99	; case 99
  6177  0001DA  B4D8               	btfsc	status,2,c
  6178  0001DC  D7D6               	goto	l7448
  6179  0001DE  0A07               	xorlw	7	; case 100
  6180  0001E0  B4D8               	btfsc	status,2,c
  6181  0001E2  D00A               	goto	l7460
  6182  0001E4  0A02               	xorlw	2	; case 102
  6183  0001E6  B4D8               	btfsc	status,2,c
  6184  0001E8  D78B               	goto	l7428
  6185  0001EA  0A0F               	xorlw	15	; case 105
  6186  0001EC  B4D8               	btfsc	status,2,c
  6187  0001EE  D004               	goto	l7460
  6188  0001F0  0A11               	xorlw	17	; case 120
  6189  0001F2  B4D8               	btfsc	status,2,c
  6190  0001F4  D788               	goto	l7430
  6191  0001F6  D7D5               	goto	l7452
  6192  0001F8                     l7460:
  6193                           
  6194                           ; BSR set to: 1
  6195                           ;doprnt.c: 825: if(flag & (0x700)) {
  6196  0001F8  0E07               	movlw	7
  6197  0001FA  0101               	movlb	1	; () banked
  6198  0001FC  1556               	andwf	(printf@flag+1)& (0+255),w,b
  6199  0001FE  B4D8               	btfsc	status,2,c
  6200  000200  D37A               	goto	l595
  6201                           
  6202                           ; BSR set to: 1
  6203                           ;doprnt.c: 829: prec = 6;
  6204  000202  0E00               	movlw	0
  6205  000204  0101               	movlb	1	; () banked
  6206  000206  6F4A               	movwf	(printf@prec+1)& (0+255),b
  6207  000208  0E06               	movlw	6
  6208  00020A  6F49               	movwf	printf@prec& (0+255),b
  6209                           
  6210                           ; BSR set to: 1
  6211                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6212  00020C  C147  FFD9         	movff	printf@ap,fsr2l
  6213  000210  C148  FFDA         	movff	printf@ap+1,fsr2h
  6214  000214  CFDE F157          	movff	postinc2,printf@fval
  6215  000218  CFDE F158          	movff	postinc2,printf@fval+1
  6216  00021C  CFDD F159          	movff	postdec2,printf@fval+2
  6217                           
  6218                           ; BSR set to: 1
  6219  000220  0E03               	movlw	3
  6220  000222  0101               	movlb	1	; () banked
  6221  000224  2747               	addwf	printf@ap& (0+255),f,b
  6222  000226  0E00               	movlw	0
  6223  000228  2348               	addwfc	(printf@ap+1)& (0+255),f,b
  6224                           
  6225                           ; BSR set to: 1
  6226                           ;doprnt.c: 831: if(fval < 0.0) {
  6227  00022A  0101               	movlb	1	; () banked
  6228  00022C  AF59               	btfss	(printf@fval+2)& (0+255),7,b
  6229  00022E  D011               	goto	l7474
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;doprnt.c: 832: fval = -fval;
  6233  000230  C157  F0B7         	movff	printf@fval,___ftneg@f1
  6234  000234  C158  F0B8         	movff	printf@fval+1,___ftneg@f1+1
  6235  000238  C159  F0B9         	movff	printf@fval+2,___ftneg@f1+2
  6236  00023C  EC0C  F02E         	call	___ftneg	;wreg free
  6237  000240  C0B7  F157         	movff	?___ftneg,printf@fval
  6238  000244  C0B8  F158         	movff	?___ftneg+1,printf@fval+1
  6239  000248  C0B9  F159         	movff	?___ftneg+2,printf@fval+2
  6240                           
  6241                           ;doprnt.c: 833: flag |= 0x03;
  6242  00024C  0E03               	movlw	3
  6243  00024E  0101               	movlb	1	; () banked
  6244  000250  1355               	iorwf	printf@flag& (0+255),f,b
  6245  000252                     l7474:
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;doprnt.c: 834: }
  6249                           ;doprnt.c: 835: exp = 0;
  6250  000252  0E00               	movlw	0
  6251  000254  0101               	movlb	1	; () banked
  6252  000256  6F50               	movwf	(printf@exp+1)& (0+255),b
  6253  000258  0E00               	movlw	0
  6254  00025A  6F4F               	movwf	printf@exp& (0+255),b
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;doprnt.c: 836: if( fval!=0) {
  6258  00025C  0101               	movlb	1	; () banked
  6259  00025E  5157               	movf	printf@fval& (0+255),w,b
  6260  000260  0101               	movlb	1	; () banked
  6261  000262  1158               	iorwf	(printf@fval+1)& (0+255),w,b
  6262  000264  0101               	movlb	1	; () banked
  6263  000266  1159               	iorwf	(printf@fval+2)& (0+255),w,b
  6264  000268  B4D8               	btfsc	status,2,c
  6265  00026A  D09B               	goto	l7502
  6266                           
  6267                           ; BSR set to: 1
  6268                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6269  00026C  0E82               	movlw	130
  6270  00026E  0101               	movlb	1	; () banked
  6271  000270  6F39               	movwf	??_printf& (0+255),b
  6272  000272  0EFF               	movlw	255
  6273  000274  0101               	movlb	1	; () banked
  6274  000276  6F3A               	movwf	(??_printf+1)& (0+255),b
  6275  000278  C157  F13B         	movff	printf@fval,??_printf+2
  6276  00027C  C158  F13C         	movff	printf@fval+1,??_printf+3
  6277  000280  C159  F13D         	movff	printf@fval+2,??_printf+4
  6278  000284  C15A  F13E         	movff	printf@fval+3,??_printf+5
  6279  000288  0E10               	movlw	16
  6280  00028A  D006               	goto	u9830
  6281  00028C                     u9835:
  6282  00028C  0101               	movlb	1	; () banked
  6283  00028E  90D8               	bcf	status,0,c
  6284  000290  333E               	rrcf	(??_printf+5)& (0+255),f,b
  6285  000292  333D               	rrcf	(??_printf+4)& (0+255),f,b
  6286  000294  333C               	rrcf	(??_printf+3)& (0+255),f,b
  6287  000296  333B               	rrcf	(??_printf+2)& (0+255),f,b
  6288  000298                     u9830:
  6289  000298  2EE8               	decfsz	wreg,f,c
  6290  00029A  D7F8               	goto	u9835
  6291  00029C  0101               	movlb	1	; () banked
  6292  00029E  513B               	movf	(??_printf+2)& (0+255),w,b
  6293  0002A0  0101               	movlb	1	; () banked
  6294  0002A2  2539               	addwf	??_printf& (0+255),w,b
  6295  0002A4  0101               	movlb	1	; () banked
  6296  0002A6  6F4F               	movwf	printf@exp& (0+255),b
  6297  0002A8  0E00               	movlw	0
  6298  0002AA  0101               	movlb	1	; () banked
  6299  0002AC  213A               	addwfc	(??_printf+1)& (0+255),w,b
  6300  0002AE  0101               	movlb	1	; () banked
  6301  0002B0  6F50               	movwf	(printf@exp+1)& (0+255),b
  6302                           
  6303                           ; BSR set to: 1
  6304                           ;doprnt.c: 838: exp--;
  6305  0002B2  0101               	movlb	1	; () banked
  6306  0002B4  074F               	decf	printf@exp& (0+255),f,b
  6307  0002B6  A0D8               	btfss	status,0,c
  6308  0002B8  0750               	decf	(printf@exp+1)& (0+255),f,b
  6309                           
  6310                           ; BSR set to: 1
  6311                           ;doprnt.c: 839: exp *= 3;
  6312  0002BA  C14F  F100         	movff	printf@exp,___wmul@multiplier
  6313  0002BE  C150  F101         	movff	printf@exp+1,___wmul@multiplier+1
  6314  0002C2  0E00               	movlw	0
  6315  0002C4  0101               	movlb	1	; () banked
  6316  0002C6  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6317  0002C8  0E03               	movlw	3
  6318  0002CA  6F02               	movwf	___wmul@multiplicand& (0+255),b
  6319  0002CC  ECD7  F02D         	call	___wmul	;wreg free
  6320  0002D0  C100  F14F         	movff	?___wmul,printf@exp
  6321  0002D4  C101  F150         	movff	?___wmul+1,printf@exp+1
  6322                           
  6323                           ;doprnt.c: 840: exp /= 10;
  6324  0002D8  C14F  F0BD         	movff	printf@exp,___awdiv@dividend
  6325  0002DC  C150  F0BE         	movff	printf@exp+1,___awdiv@dividend+1
  6326  0002E0  0E00               	movlw	0
  6327  0002E2  0100               	movlb	0	; () banked
  6328  0002E4  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  6329  0002E6  0E0A               	movlw	10
  6330  0002E8  6FBF               	movwf	___awdiv@divisor& (0+255),b
  6331  0002EA  ECCC  F027         	call	___awdiv	;wreg free
  6332  0002EE  C0BD  F14F         	movff	?___awdiv,printf@exp
  6333  0002F2  C0BE  F150         	movff	?___awdiv+1,printf@exp+1
  6334                           
  6335                           ;doprnt.c: 841: if(exp < 0)
  6336  0002F6  0101               	movlb	1	; () banked
  6337  0002F8  AF50               	btfss	(printf@exp+1)& (0+255),7,b
  6338  0002FA  D004               	goto	l7490
  6339                           
  6340                           ; BSR set to: 1
  6341                           ;doprnt.c: 842: exp--;
  6342  0002FC  0101               	movlb	1	; () banked
  6343  0002FE  074F               	decf	printf@exp& (0+255),f,b
  6344  000300  A0D8               	btfss	status,0,c
  6345  000302  0750               	decf	(printf@exp+1)& (0+255),f,b
  6346  000304                     l7490:
  6347                           
  6348                           ; BSR set to: 1
  6349                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6350  000304  0101               	movlb	1	; () banked
  6351  000306  514F               	movf	printf@exp& (0+255),w,b
  6352  000308  0800               	sublw	0
  6353  00030A  EC93  F015         	call	_scale
  6354  00030E  C113  F14B         	movff	?_scale,printf@tmpval
  6355  000312  C114  F14C         	movff	?_scale+1,printf@tmpval+1
  6356  000316  C115  F14D         	movff	?_scale+2,printf@tmpval+2
  6357                           
  6358                           ;doprnt.c: 847: tmpval.integ *= fval;
  6359  00031A  C14B  F104         	movff	printf@tmpval,___ftmul@f1
  6360  00031E  C14C  F105         	movff	printf@tmpval+1,___ftmul@f1+1
  6361  000322  C14D  F106         	movff	printf@tmpval+2,___ftmul@f1+2
  6362  000326  C157  F107         	movff	printf@fval,___ftmul@f2
  6363  00032A  C158  F108         	movff	printf@fval+1,___ftmul@f2+1
  6364  00032E  C159  F109         	movff	printf@fval+2,___ftmul@f2+2
  6365  000332  ECF8  F01F         	call	___ftmul	;wreg free
  6366  000336  C104  F14B         	movff	?___ftmul,printf@tmpval
  6367  00033A  C105  F14C         	movff	?___ftmul+1,printf@tmpval+1
  6368  00033E  C106  F14D         	movff	?___ftmul+2,printf@tmpval+2
  6369                           
  6370                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6371  000342  C14B  F0B7         	movff	printf@tmpval,___ftge@ff1
  6372  000346  C14C  F0B8         	movff	printf@tmpval+1,___ftge@ff1+1
  6373  00034A  C14D  F0B9         	movff	printf@tmpval+2,___ftge@ff1+2
  6374  00034E  0E00               	movlw	0
  6375  000350  0100               	movlb	0	; () banked
  6376  000352  6FBA               	movwf	___ftge@ff2& (0+255),b
  6377  000354  0E80               	movlw	128
  6378  000356  0100               	movlb	0	; () banked
  6379  000358  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  6380  00035A  0E3F               	movlw	63
  6381  00035C  0100               	movlb	0	; () banked
  6382  00035E  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  6383  000360  EC08  F027         	call	___ftge	;wreg free
  6384  000364  0100               	movlb	0	; () banked
  6385  000366  B0D8               	btfsc	status,0,c
  6386  000368  D005               	goto	l7498
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;doprnt.c: 849: exp--;
  6390  00036A  0101               	movlb	1	; () banked
  6391  00036C  074F               	decf	printf@exp& (0+255),f,b
  6392  00036E  A0D8               	btfss	status,0,c
  6393  000370  0750               	decf	(printf@exp+1)& (0+255),f,b
  6394  000372  D017               	goto	l7502
  6395  000374                     l7498:
  6396                           
  6397                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6398  000374  C14B  F0B7         	movff	printf@tmpval,___ftge@ff1
  6399  000378  C14C  F0B8         	movff	printf@tmpval+1,___ftge@ff1+1
  6400  00037C  C14D  F0B9         	movff	printf@tmpval+2,___ftge@ff1+2
  6401  000380  0E00               	movlw	0
  6402  000382  0100               	movlb	0	; () banked
  6403  000384  6FBA               	movwf	___ftge@ff2& (0+255),b
  6404  000386  0E20               	movlw	32
  6405  000388  0100               	movlb	0	; () banked
  6406  00038A  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  6407  00038C  0E41               	movlw	65
  6408  00038E  0100               	movlb	0	; () banked
  6409  000390  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  6410  000392  EC08  F027         	call	___ftge	;wreg free
  6411  000396  0100               	movlb	0	; () banked
  6412  000398  A0D8               	btfss	status,0,c
  6413  00039A  D003               	goto	l7502
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;doprnt.c: 851: exp++;
  6417  00039C  0101               	movlb	1	; () banked
  6418  00039E  4B4F               	infsnz	printf@exp& (0+255),f,b
  6419  0003A0  2B50               	incf	(printf@exp+1)& (0+255),f,b
  6420  0003A2                     l7502:
  6421                           
  6422                           ;doprnt.c: 852: }
  6423                           ;doprnt.c: 1112: if(prec <= 12)
  6424  0003A2  0101               	movlb	1	; () banked
  6425  0003A4  BF4A               	btfsc	(printf@prec+1)& (0+255),7,b
  6426  0003A6  D008               	goto	l7504
  6427  0003A8  0101               	movlb	1	; () banked
  6428  0003AA  514A               	movf	(printf@prec+1)& (0+255),w,b
  6429  0003AC  E11D               	bnz	l7506
  6430  0003AE  0E0D               	movlw	13
  6431  0003B0  0101               	movlb	1	; () banked
  6432  0003B2  5D49               	subwf	printf@prec& (0+255),w,b
  6433  0003B4  B0D8               	btfsc	status,0,c
  6434  0003B6  D018               	goto	l7506
  6435  0003B8                     l7504:
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;doprnt.c: 1113: fval += fround(prec);
  6439  0003B8  C157  F11D         	movff	printf@fval,___ftadd@f1
  6440  0003BC  C158  F11E         	movff	printf@fval+1,___ftadd@f1+1
  6441  0003C0  C159  F11F         	movff	printf@fval+2,___ftadd@f1+2
  6442  0003C4  0101               	movlb	1	; () banked
  6443  0003C6  5149               	movf	printf@prec& (0+255),w,b
  6444  0003C8  ECE2  F019         	call	_fround
  6445  0003CC  C113  F120         	movff	?_fround,___ftadd@f2
  6446  0003D0  C114  F121         	movff	?_fround+1,___ftadd@f2+1
  6447  0003D4  C115  F122         	movff	?_fround+2,___ftadd@f2+2
  6448  0003D8  EC38  F01B         	call	___ftadd	;wreg free
  6449  0003DC  C11D  F157         	movff	?___ftadd,printf@fval
  6450  0003E0  C11E  F158         	movff	?___ftadd+1,printf@fval+1
  6451  0003E4  C11F  F159         	movff	?___ftadd+2,printf@fval+2
  6452  0003E8                     l7506:
  6453                           
  6454                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6455  0003E8  0101               	movlb	1	; () banked
  6456  0003EA  BF50               	btfsc	(printf@exp+1)& (0+255),7,b
  6457  0003EC  D008               	goto	l7508
  6458  0003EE  0101               	movlb	1	; () banked
  6459  0003F0  5150               	movf	(printf@exp+1)& (0+255),w,b
  6460  0003F2  E12A               	bnz	l7514
  6461  0003F4  0E0A               	movlw	10
  6462  0003F6  0101               	movlb	1	; () banked
  6463  0003F8  5D4F               	subwf	printf@exp& (0+255),w,b
  6464  0003FA  B0D8               	btfsc	status,0,c
  6465  0003FC  D025               	goto	l7514
  6466  0003FE                     l7508:
  6467                           
  6468                           ; BSR set to: 1
  6469  0003FE  0101               	movlb	1	; () banked
  6470  000400  5157               	movf	printf@fval& (0+255),w,b
  6471  000402  0101               	movlb	1	; () banked
  6472  000404  1158               	iorwf	(printf@fval+1)& (0+255),w,b
  6473  000406  0101               	movlb	1	; () banked
  6474  000408  1159               	iorwf	(printf@fval+2)& (0+255),w,b
  6475  00040A  B4D8               	btfsc	status,2,c
  6476  00040C  D063               	goto	l7528
  6477                           
  6478                           ; BSR set to: 1
  6479  00040E  C157  F11A         	movff	printf@fval,___fttol@f1
  6480  000412  C158  F11B         	movff	printf@fval+1,___fttol@f1+1
  6481  000416  C159  F11C         	movff	printf@fval+2,___fttol@f1+2
  6482  00041A  EC4D  F021         	call	___fttol	;wreg free
  6483  00041E  0101               	movlb	1	; () banked
  6484  000420  511A               	movf	?___fttol& (0+255),w,b
  6485  000422  0101               	movlb	1	; () banked
  6486  000424  111B               	iorwf	(?___fttol+1)& (0+255),w,b
  6487  000426  0101               	movlb	1	; () banked
  6488  000428  111C               	iorwf	(?___fttol+2)& (0+255),w,b
  6489  00042A  0101               	movlb	1	; () banked
  6490  00042C  111D               	iorwf	(?___fttol+3)& (0+255),w,b
  6491  00042E  A4D8               	btfss	status,2,c
  6492  000430  D051               	goto	l7528
  6493                           
  6494                           ; BSR set to: 1
  6495  000432  0101               	movlb	1	; () banked
  6496  000434  BF50               	btfsc	(printf@exp+1)& (0+255),7,b
  6497  000436  D04E               	goto	l7528
  6498  000438  0101               	movlb	1	; () banked
  6499  00043A  5150               	movf	(printf@exp+1)& (0+255),w,b
  6500  00043C  E105               	bnz	l7514
  6501  00043E  0E02               	movlw	2
  6502  000440  0101               	movlb	1	; () banked
  6503  000442  5D4F               	subwf	printf@exp& (0+255),w,b
  6504  000444  A0D8               	btfss	status,0,c
  6505  000446  D046               	goto	l7528
  6506  000448                     l7514:
  6507                           
  6508                           ; BSR set to: 1
  6509                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6510  000448  C14B  F0B7         	movff	printf@tmpval,___ftge@ff1
  6511  00044C  C14C  F0B8         	movff	printf@tmpval+1,___ftge@ff1+1
  6512  000450  C14D  F0B9         	movff	printf@tmpval+2,___ftge@ff1+2
  6513  000454  0E70               	movlw	112
  6514  000456  0100               	movlb	0	; () banked
  6515  000458  6FBA               	movwf	___ftge@ff2& (0+255),b
  6516  00045A  0E89               	movlw	137
  6517  00045C  0100               	movlb	0	; () banked
  6518  00045E  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
  6519  000460  0E40               	movlw	64
  6520  000462  0100               	movlb	0	; () banked
  6521  000464  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
  6522  000466  EC08  F027         	call	___ftge	;wreg free
  6523  00046A  0100               	movlb	0	; () banked
  6524  00046C  B0D8               	btfsc	status,0,c
  6525  00046E  D003               	goto	l7518
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6529  000470  0101               	movlb	1	; () banked
  6530  000472  0EF7               	movlw	247
  6531  000474  D002               	goto	L7
  6532  000476                     l7518:
  6533                           
  6534                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6535  000476  0101               	movlb	1	; () banked
  6536  000478  0EF8               	movlw	248
  6537  00047A                     L7:
  6538  00047A  274F               	addwf	printf@exp& (0+255),f,b
  6539  00047C  0EFF               	movlw	255
  6540  00047E  2350               	addwfc	(printf@exp+1)& (0+255),f,b
  6541                           
  6542                           ; BSR set to: 1
  6543                           ;doprnt.c: 1124: }
  6544                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  6545                           
  6546                           ; BSR set to: 1
  6547  000480  0101               	movlb	1	; () banked
  6548  000482  514F               	movf	printf@exp& (0+255),w,b
  6549  000484  EC93  F015         	call	_scale
  6550  000488  C113  F14B         	movff	?_scale,printf@tmpval
  6551  00048C  C114  F14C         	movff	?_scale+1,printf@tmpval+1
  6552  000490  C115  F14D         	movff	?_scale+2,printf@tmpval+2
  6553                           
  6554                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  6555  000494  C157  F0B7         	movff	printf@fval,__tdiv_to_l_@f1
  6556  000498  C158  F0B8         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  6557  00049C  C159  F0B9         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  6558  0004A0  C14B  F0BA         	movff	printf@tmpval,__tdiv_to_l_@f2
  6559  0004A4  C14C  F0BB         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  6560  0004A8  C14D  F0BC         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  6561  0004AC  EC65  F01E         	call	__tdiv_to_l_	;wreg free
  6562  0004B0  C0B7  F151         	movff	?__tdiv_to_l_,printf@val
  6563  0004B4  C0B8  F152         	movff	?__tdiv_to_l_+1,printf@val+1
  6564  0004B8  C0B9  F153         	movff	?__tdiv_to_l_+2,printf@val+2
  6565  0004BC  C0BA  F154         	movff	?__tdiv_to_l_+3,printf@val+3
  6566                           
  6567                           ;doprnt.c: 1129: fval = 0.0;
  6568  0004C0  0E00               	movlw	0
  6569  0004C2  0101               	movlb	1	; () banked
  6570  0004C4  6F57               	movwf	printf@fval& (0+255),b
  6571  0004C6  0E00               	movlw	0
  6572  0004C8  0101               	movlb	1	; () banked
  6573  0004CA  6F58               	movwf	(printf@fval+1)& (0+255),b
  6574  0004CC  0E00               	movlw	0
  6575  0004CE  0101               	movlb	1	; () banked
  6576  0004D0  6F59               	movwf	(printf@fval+2)& (0+255),b
  6577                           
  6578                           ;doprnt.c: 1130: } else {
  6579  0004D2  D033               	goto	l7532
  6580  0004D4                     l7528:
  6581                           
  6582                           ; BSR set to: 1
  6583                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6584  0004D4  C157  F11A         	movff	printf@fval,___fttol@f1
  6585  0004D8  C158  F11B         	movff	printf@fval+1,___fttol@f1+1
  6586  0004DC  C159  F11C         	movff	printf@fval+2,___fttol@f1+2
  6587  0004E0  EC4D  F021         	call	___fttol	;wreg free
  6588  0004E4  C11A  F151         	movff	?___fttol,printf@val
  6589  0004E8  C11B  F152         	movff	?___fttol+1,printf@val+1
  6590  0004EC  C11C  F153         	movff	?___fttol+2,printf@val+2
  6591  0004F0  C11D  F154         	movff	?___fttol+3,printf@val+3
  6592                           
  6593                           ;doprnt.c: 1132: fval -= (double)val;
  6594  0004F4  C157  F129         	movff	printf@fval,___ftsub@f1
  6595  0004F8  C158  F12A         	movff	printf@fval+1,___ftsub@f1+1
  6596  0004FC  C159  F12B         	movff	printf@fval+2,___ftsub@f1+2
  6597  000500  C151  F0BF         	movff	printf@val,___lltoft@c
  6598  000504  C152  F0C0         	movff	printf@val+1,___lltoft@c+1
  6599  000508  C153  F0C1         	movff	printf@val+2,___lltoft@c+2
  6600  00050C  C154  F0C2         	movff	printf@val+3,___lltoft@c+3
  6601  000510  EC49  F02A         	call	___lltoft	;wreg free
  6602  000514  C0BF  F12C         	movff	?___lltoft,___ftsub@f2
  6603  000518  C0C0  F12D         	movff	?___lltoft+1,___ftsub@f2+1
  6604  00051C  C0C1  F12E         	movff	?___lltoft+2,___ftsub@f2+2
  6605  000520  EC4B  F02C         	call	___ftsub	;wreg free
  6606  000524  C129  F157         	movff	?___ftsub,printf@fval
  6607  000528  C12A  F158         	movff	?___ftsub+1,printf@fval+1
  6608  00052C  C12B  F159         	movff	?___ftsub+2,printf@fval+2
  6609                           
  6610                           ;doprnt.c: 1133: exp = 0;
  6611  000530  0E00               	movlw	0
  6612  000532  0101               	movlb	1	; () banked
  6613  000534  6F50               	movwf	(printf@exp+1)& (0+255),b
  6614  000536  0E00               	movlw	0
  6615  000538  6F4F               	movwf	printf@exp& (0+255),b
  6616  00053A                     l7532:
  6617                           
  6618                           ; BSR set to: 1
  6619                           ;doprnt.c: 1134: }
  6620                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6621  00053A  0E01               	movlw	1
  6622  00053C  0101               	movlb	1	; () banked
  6623  00053E  6F5C               	movwf	printf@c& (0+255),b
  6624  000540                     l7534:
  6625                           
  6626                           ; BSR set to: 1
  6627  000540  0E0A               	movlw	10
  6628  000542  0101               	movlb	1	; () banked
  6629  000544  195C               	xorwf	printf@c& (0+255),w,b
  6630  000546  B4D8               	btfsc	status,2,c
  6631  000548  D01E               	goto	l7546
  6632                           
  6633                           ; BSR set to: 1
  6634                           ;doprnt.c: 1137: if(val < dpowers[c])
  6635                           
  6636                           ; BSR set to: 1
  6637                           
  6638                           ; BSR set to: 1
  6639  00054A  0101               	movlb	1	; () banked
  6640  00054C  515C               	movf	printf@c& (0+255),w,b
  6641  00054E  0D04               	mullw	4
  6642  000550  0E7D               	movlw	low _dpowers
  6643  000552  24F3               	addwf	prodl,w,c
  6644  000554  6EF6               	movwf	tblptrl,c
  6645  000556  0EFE               	movlw	high _dpowers
  6646  000558  20F4               	addwfc	prodh,w,c
  6647  00055A  6EF7               	movwf	tblptrh,c
  6648  00055C                     	if	0	;There are less than 3 active tblptr bytes
  6649  00055C                     	endif
  6650  00055C  0009               	tblrd		*+
  6651  00055E  50F5               	movf	tablat,w,c
  6652  000560  0101               	movlb	1	; () banked
  6653  000562  5D51               	subwf	printf@val& (0+255),w,b
  6654  000564  0009               	tblrd		*+
  6655  000566  50F5               	movf	tablat,w,c
  6656  000568  0101               	movlb	1	; () banked
  6657  00056A  5952               	subwfb	(printf@val+1)& (0+255),w,b
  6658  00056C  0009               	tblrd		*+
  6659  00056E  50F5               	movf	tablat,w,c
  6660  000570  0101               	movlb	1	; () banked
  6661  000572  5953               	subwfb	(printf@val+2)& (0+255),w,b
  6662  000574  0009               	tblrd		*+
  6663  000576  50F5               	movf	tablat,w,c
  6664  000578  0101               	movlb	1	; () banked
  6665  00057A  5954               	subwfb	(printf@val+3)& (0+255),w,b
  6666  00057C  A0D8               	btfss	status,0,c
  6667  00057E  D003               	goto	l7546
  6668                           
  6669                           ; BSR set to: 1
  6670                           
  6671                           ; BSR set to: 1
  6672                           
  6673                           ; BSR set to: 1
  6674                           ;doprnt.c: 1138: break;
  6675  000580  0101               	movlb	1	; () banked
  6676  000582  2B5C               	incf	printf@c& (0+255),f,b
  6677  000584  D7DD               	goto	l7534
  6678  000586                     l7546:
  6679                           
  6680                           ; BSR set to: 1
  6681                           ;doprnt.c: 1142: width -= prec + c + exp;
  6682  000586  C15C  F139         	movff	printf@c,??_printf
  6683  00058A  0101               	movlb	1	; () banked
  6684  00058C  6B3A               	clrf	(??_printf+1)& (0+255),b
  6685  00058E  BF39               	btfsc	??_printf& (0+255),7,b
  6686  000590  073A               	decf	(??_printf+1)& (0+255),f,b
  6687  000592  0101               	movlb	1	; () banked
  6688  000594  5149               	movf	printf@prec& (0+255),w,b
  6689  000596  0101               	movlb	1	; () banked
  6690  000598  2739               	addwf	??_printf& (0+255),f,b
  6691  00059A  0101               	movlb	1	; () banked
  6692  00059C  514A               	movf	(printf@prec+1)& (0+255),w,b
  6693  00059E  0101               	movlb	1	; () banked
  6694  0005A0  233A               	addwfc	(??_printf+1)& (0+255),f,b
  6695  0005A2  0101               	movlb	1	; () banked
  6696  0005A4  514F               	movf	printf@exp& (0+255),w,b
  6697  0005A6  0101               	movlb	1	; () banked
  6698  0005A8  2739               	addwf	??_printf& (0+255),f,b
  6699  0005AA  0101               	movlb	1	; () banked
  6700  0005AC  5150               	movf	(printf@exp+1)& (0+255),w,b
  6701  0005AE  0101               	movlb	1	; () banked
  6702  0005B0  233A               	addwfc	(??_printf+1)& (0+255),f,b
  6703  0005B2  0101               	movlb	1	; () banked
  6704  0005B4  5139               	movf	??_printf& (0+255),w,b
  6705  0005B6  0101               	movlb	1	; () banked
  6706  0005B8  5F5A               	subwf	printf@width& (0+255),f,b
  6707  0005BA  0101               	movlb	1	; () banked
  6708  0005BC  513A               	movf	(??_printf+1)& (0+255),w,b
  6709  0005BE  0101               	movlb	1	; () banked
  6710  0005C0  5B5B               	subwfb	(printf@width+1)& (0+255),f,b
  6711                           
  6712                           ;doprnt.c: 1143: if(
  6713                           ;doprnt.c: 1147: prec)
  6714  0005C2  0101               	movlb	1	; () banked
  6715  0005C4  5149               	movf	printf@prec& (0+255),w,b
  6716  0005C6  0101               	movlb	1	; () banked
  6717  0005C8  114A               	iorwf	(printf@prec+1)& (0+255),w,b
  6718  0005CA  B4D8               	btfsc	status,2,c
  6719  0005CC  D004               	goto	l7550
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;doprnt.c: 1148: width--;
  6723  0005CE  0101               	movlb	1	; () banked
  6724  0005D0  075A               	decf	printf@width& (0+255),f,b
  6725  0005D2  A0D8               	btfss	status,0,c
  6726  0005D4  075B               	decf	(printf@width+1)& (0+255),f,b
  6727  0005D6                     l7550:
  6728                           
  6729                           ; BSR set to: 1
  6730                           ;doprnt.c: 1149: if(flag & 0x03)
  6731  0005D6  0E03               	movlw	3
  6732  0005D8  0101               	movlb	1	; () banked
  6733  0005DA  1555               	andwf	printf@flag& (0+255),w,b
  6734  0005DC  0101               	movlb	1	; () banked
  6735  0005DE  6F39               	movwf	??_printf& (0+255),b
  6736  0005E0  0E00               	movlw	0
  6737  0005E2  0101               	movlb	1	; () banked
  6738  0005E4  1556               	andwf	(printf@flag+1)& (0+255),w,b
  6739  0005E6  0101               	movlb	1	; () banked
  6740  0005E8  6F3A               	movwf	(??_printf+1)& (0+255),b
  6741  0005EA  0101               	movlb	1	; () banked
  6742  0005EC  5139               	movf	??_printf& (0+255),w,b
  6743  0005EE  0101               	movlb	1	; () banked
  6744  0005F0  113A               	iorwf	(??_printf+1)& (0+255),w,b
  6745  0005F2  B4D8               	btfsc	status,2,c
  6746  0005F4  D004               	goto	l7554
  6747                           
  6748                           ; BSR set to: 1
  6749                           ;doprnt.c: 1150: width--;
  6750  0005F6  0101               	movlb	1	; () banked
  6751  0005F8  075A               	decf	printf@width& (0+255),f,b
  6752  0005FA  A0D8               	btfss	status,0,c
  6753  0005FC  075B               	decf	(printf@width+1)& (0+255),f,b
  6754  0005FE                     l7554:
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;doprnt.c: 1153: if(flag & 0x04) {
  6758  0005FE  0101               	movlb	1	; () banked
  6759  000600  A555               	btfss	printf@flag& (0+255),2,b
  6760  000602  D02D               	goto	l7570
  6761                           
  6762                           ; BSR set to: 1
  6763                           ;doprnt.c: 1157: if(flag & 0x03)
  6764  000604  0E03               	movlw	3
  6765  000606  0101               	movlb	1	; () banked
  6766  000608  1555               	andwf	printf@flag& (0+255),w,b
  6767  00060A  0101               	movlb	1	; () banked
  6768  00060C  6F39               	movwf	??_printf& (0+255),b
  6769  00060E  0E00               	movlw	0
  6770  000610  0101               	movlb	1	; () banked
  6771  000612  1556               	andwf	(printf@flag+1)& (0+255),w,b
  6772  000614  0101               	movlb	1	; () banked
  6773  000616  6F3A               	movwf	(??_printf+1)& (0+255),b
  6774  000618  0101               	movlb	1	; () banked
  6775  00061A  5139               	movf	??_printf& (0+255),w,b
  6776  00061C  0101               	movlb	1	; () banked
  6777  00061E  113A               	iorwf	(??_printf+1)& (0+255),w,b
  6778  000620  B4D8               	btfsc	status,2,c
  6779  000622  D00B               	goto	l7564
  6780                           
  6781                           ; BSR set to: 1
  6782                           ;doprnt.c: 1159: (putch('-') );
  6783  000624  0E2D               	movlw	45
  6784  000626  ECEB  F02E         	call	_putch
  6785                           
  6786                           ;doprnt.c: 1168: while(width > 0) {
  6787  00062A  D007               	goto	l7564
  6788  00062C                     l7560:
  6789                           
  6790                           ;doprnt.c: 1169: (putch('0') );
  6791  00062C  0E30               	movlw	48
  6792  00062E  ECEB  F02E         	call	_putch
  6793                           
  6794                           ;doprnt.c: 1170: width--;
  6795  000632  0101               	movlb	1	; () banked
  6796  000634  075A               	decf	printf@width& (0+255),f,b
  6797  000636  A0D8               	btfss	status,0,c
  6798  000638  075B               	decf	(printf@width+1)& (0+255),f,b
  6799  00063A                     l7564:
  6800  00063A  0101               	movlb	1	; () banked
  6801  00063C  BF5B               	btfsc	(printf@width+1)& (0+255),7,b
  6802  00063E  D074               	goto	l7582
  6803  000640  0101               	movlb	1	; () banked
  6804  000642  515B               	movf	(printf@width+1)& (0+255),w,b
  6805  000644  E1F3               	bnz	l7560
  6806  000646  0101               	movlb	1	; () banked
  6807  000648  055A               	decf	printf@width& (0+255),w,b
  6808  00064A  A0D8               	btfss	status,0,c
  6809  00064C  D06D               	goto	l7582
  6810  00064E  D7EE               	goto	l7560
  6811  000650                     l7566:
  6812                           
  6813                           ; BSR set to: 1
  6814                           ;doprnt.c: 1181: (putch(' ') );
  6815  000650  0E20               	movlw	32
  6816  000652  ECEB  F02E         	call	_putch
  6817                           
  6818                           ;doprnt.c: 1182: width--;
  6819  000656  0101               	movlb	1	; () banked
  6820  000658  075A               	decf	printf@width& (0+255),f,b
  6821  00065A  A0D8               	btfss	status,0,c
  6822  00065C  075B               	decf	(printf@width+1)& (0+255),f,b
  6823  00065E                     l7570:
  6824                           
  6825                           ; BSR set to: 1
  6826  00065E  0101               	movlb	1	; () banked
  6827  000660  BF5B               	btfsc	(printf@width+1)& (0+255),7,b
  6828  000662  D007               	goto	l7572
  6829  000664  0101               	movlb	1	; () banked
  6830  000666  515B               	movf	(printf@width+1)& (0+255),w,b
  6831  000668  E1F3               	bnz	l7566
  6832  00066A  0101               	movlb	1	; () banked
  6833  00066C  055A               	decf	printf@width& (0+255),w,b
  6834  00066E  B0D8               	btfsc	status,0,c
  6835  000670  D7EF               	goto	l7566
  6836  000672                     l7572:
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;doprnt.c: 1183: }
  6840                           ;doprnt.c: 1188: if(flag & 0x03)
  6841  000672  0E03               	movlw	3
  6842  000674  0101               	movlb	1	; () banked
  6843  000676  1555               	andwf	printf@flag& (0+255),w,b
  6844  000678  0101               	movlb	1	; () banked
  6845  00067A  6F39               	movwf	??_printf& (0+255),b
  6846  00067C  0E00               	movlw	0
  6847  00067E  0101               	movlb	1	; () banked
  6848  000680  1556               	andwf	(printf@flag+1)& (0+255),w,b
  6849  000682  0101               	movlb	1	; () banked
  6850  000684  6F3A               	movwf	(??_printf+1)& (0+255),b
  6851  000686  0101               	movlb	1	; () banked
  6852  000688  5139               	movf	??_printf& (0+255),w,b
  6853  00068A  0101               	movlb	1	; () banked
  6854  00068C  113A               	iorwf	(??_printf+1)& (0+255),w,b
  6855  00068E  B4D8               	btfsc	status,2,c
  6856  000690  D04B               	goto	l7582
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;doprnt.c: 1190: (putch('-') );
  6860  000692  0E2D               	movlw	45
  6861  000694  ECEB  F02E         	call	_putch
  6862                           
  6863                           ;doprnt.c: 1195: }
  6864                           ;doprnt.c: 1196: while(c--) {
  6865  000698  D047               	goto	l7582
  6866  00069A                     l7576:
  6867                           
  6868                           ;doprnt.c: 1200: {
  6869                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6870  00069A  C151  F0B7         	movff	printf@val,___lldiv@dividend
  6871  00069E  C152  F0B8         	movff	printf@val+1,___lldiv@dividend+1
  6872  0006A2  C153  F0B9         	movff	printf@val+2,___lldiv@dividend+2
  6873  0006A6  C154  F0BA         	movff	printf@val+3,___lldiv@dividend+3
  6874  0006AA  0101               	movlb	1	; () banked
  6875  0006AC  515C               	movf	printf@c& (0+255),w,b
  6876  0006AE  0D04               	mullw	4
  6877  0006B0  0E7D               	movlw	low _dpowers
  6878  0006B2  24F3               	addwf	prodl,w,c
  6879  0006B4  6EF6               	movwf	tblptrl,c
  6880  0006B6  0EFE               	movlw	high _dpowers
  6881  0006B8  20F4               	addwfc	prodh,w,c
  6882  0006BA  6EF7               	movwf	tblptrh,c
  6883  0006BC                     	if	0	;There are less than 3 active tblptr bytes
  6884  0006BC                     	endif
  6885  0006BC  0009               	tblrd		*+
  6886  0006BE  CFF5 F0BB          	movff	tablat,___lldiv@divisor
  6887  0006C2  0009               	tblrd		*+
  6888  0006C4  CFF5 F0BC          	movff	tablat,___lldiv@divisor+1
  6889  0006C8  0009               	tblrd		*+
  6890  0006CA  CFF5 F0BD          	movff	tablat,___lldiv@divisor+2
  6891  0006CE  000A               	tblrd		*-
  6892  0006D0  CFF5 F0BE          	movff	tablat,___lldiv@divisor+3
  6893  0006D4  EC2B  F028         	call	___lldiv	;wreg free
  6894  0006D8  C0B7  F14B         	movff	?___lldiv,printf@tmpval
  6895  0006DC  C0B8  F14C         	movff	?___lldiv+1,printf@tmpval+1
  6896  0006E0  C0B9  F14D         	movff	?___lldiv+2,printf@tmpval+2
  6897  0006E4  C0BA  F14E         	movff	?___lldiv+3,printf@tmpval+3
  6898                           
  6899                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6900  0006E8  C14B  F100         	movff	printf@tmpval,___llmod@dividend
  6901  0006EC  C14C  F101         	movff	printf@tmpval+1,___llmod@dividend+1
  6902  0006F0  C14D  F102         	movff	printf@tmpval+2,___llmod@dividend+2
  6903  0006F4  C14E  F103         	movff	printf@tmpval+3,___llmod@dividend+3
  6904  0006F8  0E0A               	movlw	10
  6905  0006FA  0101               	movlb	1	; () banked
  6906  0006FC  6F04               	movwf	___llmod@divisor& (0+255),b
  6907  0006FE  0E00               	movlw	0
  6908  000700  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
  6909  000702  0E00               	movlw	0
  6910  000704  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
  6911  000706  0E00               	movlw	0
  6912  000708  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
  6913  00070A  EC31  F029         	call	___llmod	;wreg free
  6914  00070E  C100  F14B         	movff	?___llmod,printf@tmpval
  6915  000712  C101  F14C         	movff	?___llmod+1,printf@tmpval+1
  6916  000716  C102  F14D         	movff	?___llmod+2,printf@tmpval+2
  6917  00071A  C103  F14E         	movff	?___llmod+3,printf@tmpval+3
  6918                           
  6919                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6920  00071E  0101               	movlb	1	; () banked
  6921  000720  514B               	movf	printf@tmpval& (0+255),w,b
  6922  000722  0F30               	addlw	48
  6923  000724  ECEB  F02E         	call	_putch
  6924  000728                     l7582:
  6925  000728  0101               	movlb	1	; () banked
  6926  00072A  075C               	decf	printf@c& (0+255),f,b
  6927  00072C  0101               	movlb	1	; () banked
  6928  00072E  295C               	incf	printf@c& (0+255),w,b
  6929  000730  B4D8               	btfsc	status,2,c
  6930  000732  D008               	goto	l7588
  6931  000734  D7B2               	goto	l7576
  6932  000736                     l7584:
  6933                           
  6934                           ; BSR set to: 1
  6935                           ;doprnt.c: 1208: (putch('0') );
  6936  000736  0E30               	movlw	48
  6937  000738  ECEB  F02E         	call	_putch
  6938                           
  6939                           ;doprnt.c: 1209: exp--;
  6940  00073C  0101               	movlb	1	; () banked
  6941  00073E  074F               	decf	printf@exp& (0+255),f,b
  6942  000740  A0D8               	btfss	status,0,c
  6943  000742  0750               	decf	(printf@exp+1)& (0+255),f,b
  6944  000744                     l7588:
  6945                           
  6946                           ; BSR set to: 1
  6947  000744  0101               	movlb	1	; () banked
  6948  000746  BF50               	btfsc	(printf@exp+1)& (0+255),7,b
  6949  000748  D007               	goto	l7590
  6950  00074A  0101               	movlb	1	; () banked
  6951  00074C  5150               	movf	(printf@exp+1)& (0+255),w,b
  6952  00074E  E1F3               	bnz	l7584
  6953  000750  0101               	movlb	1	; () banked
  6954  000752  054F               	decf	printf@exp& (0+255),w,b
  6955  000754  B0D8               	btfsc	status,0,c
  6956  000756  D7EF               	goto	l7584
  6957  000758                     l7590:
  6958                           
  6959                           ; BSR set to: 1
  6960                           ;doprnt.c: 1210: }
  6961                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6962  000758  0101               	movlb	1	; () banked
  6963  00075A  BF4A               	btfsc	(printf@prec+1)& (0+255),7,b
  6964  00075C  D00C               	goto	l634
  6965  00075E  0101               	movlb	1	; () banked
  6966  000760  514A               	movf	(printf@prec+1)& (0+255),w,b
  6967  000762  E105               	bnz	u10050
  6968  000764  0E09               	movlw	9
  6969  000766  0101               	movlb	1	; () banked
  6970  000768  5D49               	subwf	printf@prec& (0+255),w,b
  6971  00076A  A0D8               	btfss	status,0,c
  6972  00076C  D004               	goto	l634
  6973  00076E                     u10050:
  6974                           
  6975                           ; BSR set to: 1
  6976                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6977  00076E  0E08               	movlw	8
  6978  000770  0101               	movlb	1	; () banked
  6979  000772  6F5C               	movwf	printf@c& (0+255),b
  6980  000774  D002               	goto	l7594
  6981  000776                     l634:
  6982                           
  6983                           ; BSR set to: 1
  6984                           ;doprnt.c: 1213: else
  6985                           ;doprnt.c: 1214: c = prec;
  6986  000776  C149  F15C         	movff	printf@prec,printf@c
  6987  00077A                     l7594:
  6988                           
  6989                           ; BSR set to: 1
  6990                           ;doprnt.c: 1215: prec -= c;
  6991  00077A  0101               	movlb	1	; () banked
  6992  00077C  515C               	movf	printf@c& (0+255),w,b
  6993  00077E  0101               	movlb	1	; () banked
  6994  000780  5F49               	subwf	printf@prec& (0+255),f,b
  6995  000782  0E00               	movlw	0
  6996  000784  0101               	movlb	1	; () banked
  6997  000786  BF5C               	btfsc	printf@c& (0+255),7,b
  6998  000788  0EFF               	movlw	255
  6999  00078A  0101               	movlb	1	; () banked
  7000  00078C  5B4A               	subwfb	(printf@prec+1)& (0+255),f,b
  7001                           
  7002                           ; BSR set to: 1
  7003                           ;doprnt.c: 1219: if(c)
  7004  00078E  0101               	movlb	1	; () banked
  7005  000790  515C               	movf	printf@c& (0+255),w,b
  7006  000792  0101               	movlb	1	; () banked
  7007  000794  B4D8               	btfsc	status,2,c
  7008  000796  D003               	goto	l7600
  7009                           
  7010                           ; BSR set to: 1
  7011                           ;doprnt.c: 1221: (putch('.') );
  7012  000798  0E2E               	movlw	46
  7013  00079A  ECEB  F02E         	call	_putch
  7014  00079E                     l7600:
  7015                           
  7016                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7017  00079E  0101               	movlb	1	; () banked
  7018  0007A0  515C               	movf	printf@c& (0+255),w,b
  7019  0007A2  EC93  F015         	call	_scale
  7020  0007A6  C113  F13F         	movff	?_scale,_printf$1495
  7021  0007AA  C114  F140         	movff	?_scale+1,_printf$1495+1
  7022  0007AE  C115  F141         	movff	?_scale+2,_printf$1495+2
  7023                           
  7024                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7025  0007B2  C157  F107         	movff	printf@fval,___ftmul@f2
  7026  0007B6  C158  F108         	movff	printf@fval+1,___ftmul@f2+1
  7027  0007BA  C159  F109         	movff	printf@fval+2,___ftmul@f2+2
  7028  0007BE  C13F  F104         	movff	_printf$1495,___ftmul@f1
  7029  0007C2  C140  F105         	movff	_printf$1495+1,___ftmul@f1+1
  7030  0007C6  C141  F106         	movff	_printf$1495+2,___ftmul@f1+2
  7031  0007CA  ECF8  F01F         	call	___ftmul	;wreg free
  7032  0007CE  C104  F11A         	movff	?___ftmul,___fttol@f1
  7033  0007D2  C105  F11B         	movff	?___ftmul+1,___fttol@f1+1
  7034  0007D6  C106  F11C         	movff	?___ftmul+2,___fttol@f1+2
  7035  0007DA  EC4D  F021         	call	___fttol	;wreg free
  7036  0007DE  C11A  F151         	movff	?___fttol,printf@val
  7037  0007E2  C11B  F152         	movff	?___fttol+1,printf@val+1
  7038  0007E6  C11C  F153         	movff	?___fttol+2,printf@val+2
  7039  0007EA  C11D  F154         	movff	?___fttol+3,printf@val+3
  7040                           
  7041                           ;doprnt.c: 1228: while(c--) {
  7042  0007EE  D06E               	goto	l7610
  7043  0007F0                     l7604:
  7044                           
  7045                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7046  0007F0  C151  F0B7         	movff	printf@val,___lldiv@dividend
  7047  0007F4  C152  F0B8         	movff	printf@val+1,___lldiv@dividend+1
  7048  0007F8  C153  F0B9         	movff	printf@val+2,___lldiv@dividend+2
  7049  0007FC  C154  F0BA         	movff	printf@val+3,___lldiv@dividend+3
  7050  000800  0101               	movlb	1	; () banked
  7051  000802  515C               	movf	printf@c& (0+255),w,b
  7052  000804  0D04               	mullw	4
  7053  000806  0E7D               	movlw	low _dpowers
  7054  000808  24F3               	addwf	prodl,w,c
  7055  00080A  6EF6               	movwf	tblptrl,c
  7056  00080C  0EFE               	movlw	high _dpowers
  7057  00080E  20F4               	addwfc	prodh,w,c
  7058  000810  6EF7               	movwf	tblptrh,c
  7059  000812                     	if	0	;There are less than 3 active tblptr bytes
  7060  000812                     	endif
  7061  000812  0009               	tblrd		*+
  7062  000814  CFF5 F0BB          	movff	tablat,___lldiv@divisor
  7063  000818  0009               	tblrd		*+
  7064  00081A  CFF5 F0BC          	movff	tablat,___lldiv@divisor+1
  7065  00081E  0009               	tblrd		*+
  7066  000820  CFF5 F0BD          	movff	tablat,___lldiv@divisor+2
  7067  000824  000A               	tblrd		*-
  7068  000826  CFF5 F0BE          	movff	tablat,___lldiv@divisor+3
  7069  00082A  EC2B  F028         	call	___lldiv	;wreg free
  7070  00082E  C0B7  F14B         	movff	?___lldiv,printf@tmpval
  7071  000832  C0B8  F14C         	movff	?___lldiv+1,printf@tmpval+1
  7072  000836  C0B9  F14D         	movff	?___lldiv+2,printf@tmpval+2
  7073  00083A  C0BA  F14E         	movff	?___lldiv+3,printf@tmpval+3
  7074                           
  7075                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7076  00083E  C14B  F100         	movff	printf@tmpval,___llmod@dividend
  7077  000842  C14C  F101         	movff	printf@tmpval+1,___llmod@dividend+1
  7078  000846  C14D  F102         	movff	printf@tmpval+2,___llmod@dividend+2
  7079  00084A  C14E  F103         	movff	printf@tmpval+3,___llmod@dividend+3
  7080  00084E  0E0A               	movlw	10
  7081  000850  0101               	movlb	1	; () banked
  7082  000852  6F04               	movwf	___llmod@divisor& (0+255),b
  7083  000854  0E00               	movlw	0
  7084  000856  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
  7085  000858  0E00               	movlw	0
  7086  00085A  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
  7087  00085C  0E00               	movlw	0
  7088  00085E  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
  7089  000860  EC31  F029         	call	___llmod	;wreg free
  7090  000864  C100  F14B         	movff	?___llmod,printf@tmpval
  7091  000868  C101  F14C         	movff	?___llmod+1,printf@tmpval+1
  7092  00086C  C102  F14D         	movff	?___llmod+2,printf@tmpval+2
  7093  000870  C103  F14E         	movff	?___llmod+3,printf@tmpval+3
  7094                           
  7095                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  7096  000874  0101               	movlb	1	; () banked
  7097  000876  514B               	movf	printf@tmpval& (0+255),w,b
  7098  000878  0F30               	addlw	48
  7099  00087A  ECEB  F02E         	call	_putch
  7100                           
  7101                           ;doprnt.c: 1232: val %= dpowers[c];
  7102  00087E  C151  F100         	movff	printf@val,___llmod@dividend
  7103  000882  C152  F101         	movff	printf@val+1,___llmod@dividend+1
  7104  000886  C153  F102         	movff	printf@val+2,___llmod@dividend+2
  7105  00088A  C154  F103         	movff	printf@val+3,___llmod@dividend+3
  7106  00088E  0101               	movlb	1	; () banked
  7107  000890  515C               	movf	printf@c& (0+255),w,b
  7108  000892  0D04               	mullw	4
  7109  000894  0E7D               	movlw	low _dpowers
  7110  000896  24F3               	addwf	prodl,w,c
  7111  000898  6EF6               	movwf	tblptrl,c
  7112  00089A  0EFE               	movlw	high _dpowers
  7113  00089C  20F4               	addwfc	prodh,w,c
  7114  00089E  6EF7               	movwf	tblptrh,c
  7115  0008A0                     	if	0	;There are less than 3 active tblptr bytes
  7116  0008A0                     	endif
  7117  0008A0  0009               	tblrd		*+
  7118  0008A2  CFF5 F104          	movff	tablat,___llmod@divisor
  7119  0008A6  0009               	tblrd		*+
  7120  0008A8  CFF5 F105          	movff	tablat,___llmod@divisor+1
  7121  0008AC  0009               	tblrd		*+
  7122  0008AE  CFF5 F106          	movff	tablat,___llmod@divisor+2
  7123  0008B2  000A               	tblrd		*-
  7124  0008B4  CFF5 F107          	movff	tablat,___llmod@divisor+3
  7125  0008B8  EC31  F029         	call	___llmod	;wreg free
  7126  0008BC  C100  F151         	movff	?___llmod,printf@val
  7127  0008C0  C101  F152         	movff	?___llmod+1,printf@val+1
  7128  0008C4  C102  F153         	movff	?___llmod+2,printf@val+2
  7129  0008C8  C103  F154         	movff	?___llmod+3,printf@val+3
  7130  0008CC                     l7610:
  7131  0008CC  0101               	movlb	1	; () banked
  7132  0008CE  075C               	decf	printf@c& (0+255),f,b
  7133  0008D0  0101               	movlb	1	; () banked
  7134  0008D2  295C               	incf	printf@c& (0+255),w,b
  7135  0008D4  B4D8               	btfsc	status,2,c
  7136  0008D6  D008               	goto	l7616
  7137  0008D8  D78B               	goto	l7604
  7138  0008DA                     l7612:
  7139                           
  7140                           ; BSR set to: 1
  7141                           ;doprnt.c: 1236: (putch('0') );
  7142  0008DA  0E30               	movlw	48
  7143  0008DC  ECEB  F02E         	call	_putch
  7144                           
  7145                           ;doprnt.c: 1237: prec--;
  7146  0008E0  0101               	movlb	1	; () banked
  7147  0008E2  0749               	decf	printf@prec& (0+255),f,b
  7148  0008E4  A0D8               	btfss	status,0,c
  7149  0008E6  074A               	decf	(printf@prec+1)& (0+255),f,b
  7150  0008E8                     l7616:
  7151                           
  7152                           ; BSR set to: 1
  7153  0008E8  0101               	movlb	1	; () banked
  7154  0008EA  5149               	movf	printf@prec& (0+255),w,b
  7155  0008EC  0101               	movlb	1	; () banked
  7156  0008EE  114A               	iorwf	(printf@prec+1)& (0+255),w,b
  7157  0008F0  B4D8               	btfsc	status,2,c
  7158  0008F2  D1B3               	goto	l7714
  7159  0008F4  D7F2               	goto	l7612
  7160  0008F6                     l595:
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;doprnt.c: 1246: }
  7164                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  7165  0008F6  0101               	movlb	1	; () banked
  7166  0008F8  BF55               	btfsc	printf@flag& (0+255),7,b
  7167  0008FA  D023               	goto	l7628
  7168                           
  7169                           ; BSR set to: 1
  7170                           ;doprnt.c: 1253: {
  7171                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7172  0008FC  C147  FFD9         	movff	printf@ap,fsr2l
  7173  000900  C148  FFDA         	movff	printf@ap+1,fsr2h
  7174  000904  CFDE F151          	movff	postinc2,printf@val
  7175  000908  CFDD F152          	movff	postdec2,printf@val+1
  7176  00090C  0101               	movlb	1	; () banked
  7177  00090E  0E00               	movlw	0
  7178  000910  BF52               	btfsc	(printf@val+1)& (0+255),7,b
  7179  000912  0EFF               	movlw	-1
  7180  000914  6F53               	movwf	(printf@val+2)& (0+255),b
  7181  000916  6F54               	movwf	(printf@val+3)& (0+255),b
  7182                           
  7183                           ; BSR set to: 1
  7184  000918  0E02               	movlw	2
  7185  00091A  0101               	movlb	1	; () banked
  7186  00091C  2747               	addwf	printf@ap& (0+255),f,b
  7187  00091E  0E00               	movlw	0
  7188  000920  2348               	addwfc	(printf@ap+1)& (0+255),f,b
  7189                           
  7190                           ; BSR set to: 1
  7191                           ;doprnt.c: 1261: if((long)val < 0) {
  7192  000922  0101               	movlb	1	; () banked
  7193  000924  AF54               	btfss	(printf@val+3)& (0+255),7,b
  7194  000926  D06E               	goto	l7662
  7195                           
  7196                           ; BSR set to: 1
  7197                           ;doprnt.c: 1262: flag |= 0x03;
  7198  000928  0E03               	movlw	3
  7199  00092A  0101               	movlb	1	; () banked
  7200  00092C  1355               	iorwf	printf@flag& (0+255),f,b
  7201                           
  7202                           ; BSR set to: 1
  7203                           ;doprnt.c: 1263: val = -val;
  7204  00092E  0101               	movlb	1	; () banked
  7205  000930  1F54               	comf	(printf@val+3)& (0+255),f,b
  7206  000932  1F53               	comf	(printf@val+2)& (0+255),f,b
  7207  000934  1F52               	comf	(printf@val+1)& (0+255),f,b
  7208  000936  6D51               	negf	printf@val& (0+255),b
  7209  000938  0E00               	movlw	0
  7210  00093A  2352               	addwfc	(printf@val+1)& (0+255),f,b
  7211  00093C  2353               	addwfc	(printf@val+2)& (0+255),f,b
  7212  00093E  2354               	addwfc	(printf@val+3)& (0+255),f,b
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;doprnt.c: 1264: }
  7216                           ;doprnt.c: 1266: }
  7217  000940  D061               	goto	l7662
  7218  000942                     l7628:
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;doprnt.c: 1268: else
  7222                           ;doprnt.c: 1273: {
  7223                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7224  000942  C147  FFD9         	movff	printf@ap,fsr2l
  7225  000946  C148  FFDA         	movff	printf@ap+1,fsr2h
  7226  00094A  CFDE F139          	movff	postinc2,??_printf
  7227  00094E  CFDD F13A          	movff	postdec2,??_printf+1
  7228  000952  C139  F151         	movff	??_printf,printf@val
  7229  000956  C13A  F152         	movff	??_printf+1,printf@val+1
  7230  00095A  0101               	movlb	1	; () banked
  7231  00095C  6B53               	clrf	(printf@val+2)& (0+255),b
  7232  00095E  6B54               	clrf	(printf@val+3)& (0+255),b
  7233                           
  7234                           ; BSR set to: 1
  7235  000960  0E02               	movlw	2
  7236  000962  0101               	movlb	1	; () banked
  7237  000964  2747               	addwf	printf@ap& (0+255),f,b
  7238  000966  0E00               	movlw	0
  7239  000968  2348               	addwfc	(printf@ap+1)& (0+255),f,b
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;doprnt.c: 1287: }
  7243                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  7244  00096A  D04C               	goto	l7662
  7245  00096C                     l7632:
  7246                           
  7247                           ; BSR set to: 1
  7248                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7249  00096C  0E01               	movlw	1
  7250  00096E  0101               	movlb	1	; () banked
  7251  000970  6F5C               	movwf	printf@c& (0+255),b
  7252  000972                     l7634:
  7253                           
  7254                           ; BSR set to: 1
  7255  000972  0E0A               	movlw	10
  7256  000974  0101               	movlb	1	; () banked
  7257  000976  195C               	xorwf	printf@c& (0+255),w,b
  7258  000978  B4D8               	btfsc	status,2,c
  7259  00097A  D04D               	goto	l7664
  7260                           
  7261                           ; BSR set to: 1
  7262                           ;doprnt.c: 1306: if(val < dpowers[c])
  7263                           
  7264                           ; BSR set to: 1
  7265                           
  7266                           ; BSR set to: 1
  7267  00097C  0101               	movlb	1	; () banked
  7268  00097E  515C               	movf	printf@c& (0+255),w,b
  7269  000980  0D04               	mullw	4
  7270  000982  0E7D               	movlw	low _dpowers
  7271  000984  24F3               	addwf	prodl,w,c
  7272  000986  6EF6               	movwf	tblptrl,c
  7273  000988  0EFE               	movlw	high _dpowers
  7274  00098A  20F4               	addwfc	prodh,w,c
  7275  00098C  6EF7               	movwf	tblptrh,c
  7276  00098E                     	if	0	;There are less than 3 active tblptr bytes
  7277  00098E                     	endif
  7278  00098E  0009               	tblrd		*+
  7279  000990  50F5               	movf	tablat,w,c
  7280  000992  0101               	movlb	1	; () banked
  7281  000994  5D51               	subwf	printf@val& (0+255),w,b
  7282  000996  0009               	tblrd		*+
  7283  000998  50F5               	movf	tablat,w,c
  7284  00099A  0101               	movlb	1	; () banked
  7285  00099C  5952               	subwfb	(printf@val+1)& (0+255),w,b
  7286  00099E  0009               	tblrd		*+
  7287  0009A0  50F5               	movf	tablat,w,c
  7288  0009A2  0101               	movlb	1	; () banked
  7289  0009A4  5953               	subwfb	(printf@val+2)& (0+255),w,b
  7290  0009A6  0009               	tblrd		*+
  7291  0009A8  50F5               	movf	tablat,w,c
  7292  0009AA  0101               	movlb	1	; () banked
  7293  0009AC  5954               	subwfb	(printf@val+3)& (0+255),w,b
  7294  0009AE  A0D8               	btfss	status,0,c
  7295  0009B0  D032               	goto	l7664
  7296                           
  7297                           ; BSR set to: 1
  7298                           
  7299                           ; BSR set to: 1
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;doprnt.c: 1307: break;
  7303  0009B2  0101               	movlb	1	; () banked
  7304  0009B4  2B5C               	incf	printf@c& (0+255),f,b
  7305  0009B6  D7DD               	goto	l7634
  7306  0009B8                     l7646:
  7307                           
  7308                           ; BSR set to: 1
  7309                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7310  0009B8  0E01               	movlw	1
  7311  0009BA  0101               	movlb	1	; () banked
  7312  0009BC  6F5C               	movwf	printf@c& (0+255),b
  7313  0009BE                     l7648:
  7314                           
  7315                           ; BSR set to: 1
  7316  0009BE  0E08               	movlw	8
  7317  0009C0  0101               	movlb	1	; () banked
  7318  0009C2  195C               	xorwf	printf@c& (0+255),w,b
  7319  0009C4  B4D8               	btfsc	status,2,c
  7320  0009C6  D027               	goto	l7664
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;doprnt.c: 1317: if(val < hexpowers[c])
  7324                           
  7325                           ; BSR set to: 1
  7326                           
  7327                           ; BSR set to: 1
  7328  0009C8  0101               	movlb	1	; () banked
  7329  0009CA  515C               	movf	printf@c& (0+255),w,b
  7330  0009CC  0D04               	mullw	4
  7331  0009CE  0EF3               	movlw	low _hexpowers
  7332  0009D0  24F3               	addwf	prodl,w,c
  7333  0009D2  6EF6               	movwf	tblptrl,c
  7334  0009D4  0EFE               	movlw	high _hexpowers
  7335  0009D6  20F4               	addwfc	prodh,w,c
  7336  0009D8  6EF7               	movwf	tblptrh,c
  7337  0009DA                     	if	0	;There are less than 3 active tblptr bytes
  7338  0009DA                     	endif
  7339  0009DA  0009               	tblrd		*+
  7340  0009DC  50F5               	movf	tablat,w,c
  7341  0009DE  0101               	movlb	1	; () banked
  7342  0009E0  5D51               	subwf	printf@val& (0+255),w,b
  7343  0009E2  0009               	tblrd		*+
  7344  0009E4  50F5               	movf	tablat,w,c
  7345  0009E6  0101               	movlb	1	; () banked
  7346  0009E8  5952               	subwfb	(printf@val+1)& (0+255),w,b
  7347  0009EA  0009               	tblrd		*+
  7348  0009EC  50F5               	movf	tablat,w,c
  7349  0009EE  0101               	movlb	1	; () banked
  7350  0009F0  5953               	subwfb	(printf@val+2)& (0+255),w,b
  7351  0009F2  0009               	tblrd		*+
  7352  0009F4  50F5               	movf	tablat,w,c
  7353  0009F6  0101               	movlb	1	; () banked
  7354  0009F8  5954               	subwfb	(printf@val+3)& (0+255),w,b
  7355  0009FA  A0D8               	btfss	status,0,c
  7356  0009FC  D00C               	goto	l7664
  7357                           
  7358                           ; BSR set to: 1
  7359                           
  7360                           ; BSR set to: 1
  7361                           
  7362                           ; BSR set to: 1
  7363                           ;doprnt.c: 1318: break;
  7364  0009FE  0101               	movlb	1	; () banked
  7365  000A00  2B5C               	incf	printf@c& (0+255),f,b
  7366  000A02  D7DD               	goto	l7648
  7367  000A04                     l7662:
  7368                           
  7369                           ; BSR set to: 1
  7370  000A04  0101               	movlb	1	; () banked
  7371  000A06  5155               	movf	printf@flag& (0+255),w,b
  7372  000A08  0B80               	andlw	128
  7373                           
  7374                           ; Switch size 1, requested type "space"
  7375                           ; Number of cases is 2, Range of values is 0 to 128
  7376                           ; switch strategies available:
  7377                           ; Name         Instructions Cycles
  7378                           ; simple_byte            7     4 (average)
  7379                           ;	Chosen strategy is simple_byte
  7380  000A0A  0A00               	xorlw	0	; case 0
  7381  000A0C  B4D8               	btfsc	status,2,c
  7382  000A0E  D7AE               	goto	l7632
  7383  000A10  0A80               	xorlw	128	; case 128
  7384  000A12  B4D8               	btfsc	status,2,c
  7385  000A14  D7D1               	goto	l7646
  7386  000A16                     l7664:
  7387                           
  7388                           ; BSR set to: 1
  7389                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7390  000A16  0101               	movlb	1	; () banked
  7391  000A18  515A               	movf	printf@width& (0+255),w,b
  7392  000A1A  0101               	movlb	1	; () banked
  7393  000A1C  115B               	iorwf	(printf@width+1)& (0+255),w,b
  7394  000A1E  B4D8               	btfsc	status,2,c
  7395  000A20  D014               	goto	l7670
  7396                           
  7397                           ; BSR set to: 1
  7398  000A22  0E03               	movlw	3
  7399  000A24  0101               	movlb	1	; () banked
  7400  000A26  1555               	andwf	printf@flag& (0+255),w,b
  7401  000A28  0101               	movlb	1	; () banked
  7402  000A2A  6F39               	movwf	??_printf& (0+255),b
  7403  000A2C  0E00               	movlw	0
  7404  000A2E  0101               	movlb	1	; () banked
  7405  000A30  1556               	andwf	(printf@flag+1)& (0+255),w,b
  7406  000A32  0101               	movlb	1	; () banked
  7407  000A34  6F3A               	movwf	(??_printf+1)& (0+255),b
  7408  000A36  0101               	movlb	1	; () banked
  7409  000A38  5139               	movf	??_printf& (0+255),w,b
  7410  000A3A  0101               	movlb	1	; () banked
  7411  000A3C  113A               	iorwf	(??_printf+1)& (0+255),w,b
  7412  000A3E  B4D8               	btfsc	status,2,c
  7413  000A40  D004               	goto	l7670
  7414                           
  7415                           ; BSR set to: 1
  7416                           ;doprnt.c: 1346: width--;
  7417  000A42  0101               	movlb	1	; () banked
  7418  000A44  075A               	decf	printf@width& (0+255),f,b
  7419  000A46  A0D8               	btfss	status,0,c
  7420  000A48  075B               	decf	(printf@width+1)& (0+255),f,b
  7421  000A4A                     l7670:
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;doprnt.c: 1381: if(width > c)
  7425  000A4A  0E80               	movlw	128
  7426  000A4C  0101               	movlb	1	; () banked
  7427  000A4E  BF5C               	btfsc	printf@c& (0+255),7,b
  7428  000A50  0E7F               	movlw	127
  7429  000A52  0101               	movlb	1	; () banked
  7430  000A54  6F39               	movwf	??_printf& (0+255),b
  7431  000A56  0101               	movlb	1	; () banked
  7432  000A58  515A               	movf	printf@width& (0+255),w,b
  7433  000A5A  0101               	movlb	1	; () banked
  7434  000A5C  5D5C               	subwf	printf@c& (0+255),w,b
  7435  000A5E  0101               	movlb	1	; () banked
  7436  000A60  515B               	movf	(printf@width+1)& (0+255),w,b
  7437  000A62  0A80               	xorlw	128
  7438  000A64  0101               	movlb	1	; () banked
  7439  000A66  5939               	subwfb	??_printf& (0+255),w,b
  7440  000A68  B0D8               	btfsc	status,0,c
  7441  000A6A  D00B               	goto	l7674
  7442                           
  7443                           ; BSR set to: 1
  7444                           ;doprnt.c: 1382: width -= c;
  7445  000A6C  0101               	movlb	1	; () banked
  7446  000A6E  515C               	movf	printf@c& (0+255),w,b
  7447  000A70  0101               	movlb	1	; () banked
  7448  000A72  5F5A               	subwf	printf@width& (0+255),f,b
  7449  000A74  0E00               	movlw	0
  7450  000A76  0101               	movlb	1	; () banked
  7451  000A78  BF5C               	btfsc	printf@c& (0+255),7,b
  7452  000A7A  0EFF               	movlw	255
  7453  000A7C  0101               	movlb	1	; () banked
  7454  000A7E  5B5B               	subwfb	(printf@width+1)& (0+255),f,b
  7455  000A80  D005               	goto	l7676
  7456  000A82                     l7674:
  7457                           
  7458                           ; BSR set to: 1
  7459                           ;doprnt.c: 1383: else
  7460                           ;doprnt.c: 1384: width = 0;
  7461  000A82  0E00               	movlw	0
  7462  000A84  0101               	movlb	1	; () banked
  7463  000A86  6F5B               	movwf	(printf@width+1)& (0+255),b
  7464  000A88  0E00               	movlw	0
  7465  000A8A  6F5A               	movwf	printf@width& (0+255),b
  7466  000A8C                     l7676:
  7467                           
  7468                           ; BSR set to: 1
  7469                           ;doprnt.c: 1387: if(flag & 0x04) {
  7470  000A8C  0101               	movlb	1	; () banked
  7471  000A8E  A555               	btfss	printf@flag& (0+255),2,b
  7472  000A90  D021               	goto	l7688
  7473                           
  7474                           ; BSR set to: 1
  7475                           ;doprnt.c: 1392: if(flag & 0x03)
  7476  000A92  0E03               	movlw	3
  7477  000A94  0101               	movlb	1	; () banked
  7478  000A96  1555               	andwf	printf@flag& (0+255),w,b
  7479  000A98  0101               	movlb	1	; () banked
  7480  000A9A  6F39               	movwf	??_printf& (0+255),b
  7481  000A9C  0E00               	movlw	0
  7482  000A9E  0101               	movlb	1	; () banked
  7483  000AA0  1556               	andwf	(printf@flag+1)& (0+255),w,b
  7484  000AA2  0101               	movlb	1	; () banked
  7485  000AA4  6F3A               	movwf	(??_printf+1)& (0+255),b
  7486  000AA6  0101               	movlb	1	; () banked
  7487  000AA8  5139               	movf	??_printf& (0+255),w,b
  7488  000AAA  0101               	movlb	1	; () banked
  7489  000AAC  113A               	iorwf	(??_printf+1)& (0+255),w,b
  7490  000AAE  B4D8               	btfsc	status,2,c
  7491  000AB0  D003               	goto	l7682
  7492                           
  7493                           ; BSR set to: 1
  7494                           ;doprnt.c: 1393: (putch('-') );
  7495  000AB2  0E2D               	movlw	45
  7496  000AB4  ECEB  F02E         	call	_putch
  7497  000AB8                     l7682:
  7498                           
  7499                           ;doprnt.c: 1415: if(width)
  7500  000AB8  0101               	movlb	1	; () banked
  7501  000ABA  515A               	movf	printf@width& (0+255),w,b
  7502  000ABC  0101               	movlb	1	; () banked
  7503  000ABE  115B               	iorwf	(printf@width+1)& (0+255),w,b
  7504  000AC0  B4D8               	btfsc	status,2,c
  7505  000AC2  D02E               	goto	l7698
  7506                           
  7507                           ; BSR set to: 1
  7508                           ;doprnt.c: 1417: (putch('0') );
  7509                           
  7510                           ; BSR set to: 1
  7511                           
  7512                           ;doprnt.c: 1416: do
  7513  000AC4  0E30               	movlw	48
  7514  000AC6  ECEB  F02E         	call	_putch
  7515                           
  7516                           ;doprnt.c: 1418: while(--width);
  7517  000ACA  0101               	movlb	1	; () banked
  7518  000ACC  075A               	decf	printf@width& (0+255),f,b
  7519  000ACE  A0D8               	btfss	status,0,c
  7520  000AD0  075B               	decf	(printf@width+1)& (0+255),f,b
  7521  000AD2  D7F2               	goto	l7682
  7522  000AD4                     l7688:
  7523                           
  7524                           ; BSR set to: 1
  7525                           ;doprnt.c: 1422: {
  7526                           ;doprnt.c: 1424: if(width
  7527                           ;doprnt.c: 1428: )
  7528  000AD4  0101               	movlb	1	; () banked
  7529  000AD6  515A               	movf	printf@width& (0+255),w,b
  7530  000AD8  0101               	movlb	1	; () banked
  7531  000ADA  115B               	iorwf	(printf@width+1)& (0+255),w,b
  7532  000ADC  B4D8               	btfsc	status,2,c
  7533  000ADE  D00D               	goto	l7694
  7534  000AE0                     l7690:
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;doprnt.c: 1430: (putch(' ') );
  7538  000AE0  0E20               	movlw	32
  7539  000AE2  ECEB  F02E         	call	_putch
  7540                           
  7541                           ;doprnt.c: 1431: while(--width);
  7542  000AE6  0101               	movlb	1	; () banked
  7543  000AE8  075A               	decf	printf@width& (0+255),f,b
  7544  000AEA  A0D8               	btfss	status,0,c
  7545  000AEC  075B               	decf	(printf@width+1)& (0+255),f,b
  7546  000AEE  0101               	movlb	1	; () banked
  7547  000AF0  515A               	movf	printf@width& (0+255),w,b
  7548  000AF2  0101               	movlb	1	; () banked
  7549  000AF4  115B               	iorwf	(printf@width+1)& (0+255),w,b
  7550  000AF6  A4D8               	btfss	status,2,c
  7551  000AF8  D7F3               	goto	l7690
  7552  000AFA                     l7694:
  7553                           
  7554                           ; BSR set to: 1
  7555                           ;doprnt.c: 1438: if(flag & 0x03)
  7556  000AFA  0E03               	movlw	3
  7557  000AFC  0101               	movlb	1	; () banked
  7558  000AFE  1555               	andwf	printf@flag& (0+255),w,b
  7559  000B00  0101               	movlb	1	; () banked
  7560  000B02  6F39               	movwf	??_printf& (0+255),b
  7561  000B04  0E00               	movlw	0
  7562  000B06  0101               	movlb	1	; () banked
  7563  000B08  1556               	andwf	(printf@flag+1)& (0+255),w,b
  7564  000B0A  0101               	movlb	1	; () banked
  7565  000B0C  6F3A               	movwf	(??_printf+1)& (0+255),b
  7566  000B0E  0101               	movlb	1	; () banked
  7567  000B10  5139               	movf	??_printf& (0+255),w,b
  7568  000B12  0101               	movlb	1	; () banked
  7569  000B14  113A               	iorwf	(??_printf+1)& (0+255),w,b
  7570  000B16  B4D8               	btfsc	status,2,c
  7571  000B18  D003               	goto	l7698
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;doprnt.c: 1439: (putch('-') );
  7575  000B1A  0E2D               	movlw	45
  7576  000B1C  ECEB  F02E         	call	_putch
  7577  000B20                     l7698:
  7578                           
  7579                           ;doprnt.c: 1469: }
  7580                           ;doprnt.c: 1472: prec = c;
  7581  000B20  0101               	movlb	1	; () banked
  7582  000B22  515C               	movf	printf@c& (0+255),w,b
  7583  000B24  0101               	movlb	1	; () banked
  7584  000B26  6F49               	movwf	printf@prec& (0+255),b
  7585  000B28  6B4A               	clrf	(printf@prec+1)& (0+255),b
  7586  000B2A  BF49               	btfsc	printf@prec& (0+255),7,b
  7587  000B2C  074A               	decf	(printf@prec+1)& (0+255),f,b
  7588                           
  7589                           ;doprnt.c: 1474: while(prec--) {
  7590  000B2E  D08A               	goto	l7712
  7591  000B30                     l7700:
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7595  000B30  C149  F139         	movff	printf@prec,??_printf
  7596  000B34  C14A  F13A         	movff	printf@prec+1,??_printf+1
  7597  000B38  0101               	movlb	1	; () banked
  7598  000B3A  90D8               	bcf	status,0,c
  7599  000B3C  3739               	rlcf	??_printf& (0+255),f,b
  7600  000B3E  373A               	rlcf	(??_printf+1)& (0+255),f,b
  7601  000B40  0101               	movlb	1	; () banked
  7602  000B42  90D8               	bcf	status,0,c
  7603  000B44  3739               	rlcf	??_printf& (0+255),f,b
  7604  000B46  373A               	rlcf	(??_printf+1)& (0+255),f,b
  7605  000B48  0E7D               	movlw	low _dpowers
  7606  000B4A  0101               	movlb	1	; () banked
  7607  000B4C  2539               	addwf	??_printf& (0+255),w,b
  7608  000B4E  6EF6               	movwf	tblptrl,c
  7609  000B50  0EFE               	movlw	high _dpowers
  7610  000B52  213A               	addwfc	(??_printf+1)& (0+255),w,b
  7611  000B54  6EF7               	movwf	tblptrh,c
  7612  000B56                     	if	0	;There are less than 3 active tblptr bytes
  7613  000B56                     	endif
  7614  000B56  0009               	tblrd		*+
  7615  000B58  CFF5 F0BB          	movff	tablat,___lldiv@divisor
  7616  000B5C  0009               	tblrd		*+
  7617  000B5E  CFF5 F0BC          	movff	tablat,___lldiv@divisor+1
  7618  000B62  0009               	tblrd		*+
  7619  000B64  CFF5 F0BD          	movff	tablat,___lldiv@divisor+2
  7620  000B68  000A               	tblrd		*-
  7621  000B6A  CFF5 F0BE          	movff	tablat,___lldiv@divisor+3
  7622  000B6E  C151  F0B7         	movff	printf@val,___lldiv@dividend
  7623  000B72  C152  F0B8         	movff	printf@val+1,___lldiv@dividend+1
  7624  000B76  C153  F0B9         	movff	printf@val+2,___lldiv@dividend+2
  7625  000B7A  C154  F0BA         	movff	printf@val+3,___lldiv@dividend+3
  7626  000B7E  EC2B  F028         	call	___lldiv	;wreg free
  7627  000B82  C0B7  F100         	movff	?___lldiv,___llmod@dividend
  7628  000B86  C0B8  F101         	movff	?___lldiv+1,___llmod@dividend+1
  7629  000B8A  C0B9  F102         	movff	?___lldiv+2,___llmod@dividend+2
  7630  000B8E  C0BA  F103         	movff	?___lldiv+3,___llmod@dividend+3
  7631  000B92  0E0A               	movlw	10
  7632  000B94  0101               	movlb	1	; () banked
  7633  000B96  6F04               	movwf	___llmod@divisor& (0+255),b
  7634  000B98  0E00               	movlw	0
  7635  000B9A  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
  7636  000B9C  0E00               	movlw	0
  7637  000B9E  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
  7638  000BA0  0E00               	movlw	0
  7639  000BA2  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
  7640  000BA4  EC31  F029         	call	___llmod	;wreg free
  7641  000BA8  0101               	movlb	1	; () banked
  7642  000BAA  5100               	movf	?___llmod& (0+255),w,b
  7643  000BAC  0F30               	addlw	48
  7644  000BAE  0101               	movlb	1	; () banked
  7645  000BB0  6F5C               	movwf	printf@c& (0+255),b
  7646                           
  7647                           ;doprnt.c: 1491: break;
  7648  000BB2  D044               	goto	l7710
  7649  000BB4                     l7702:
  7650                           
  7651                           ; BSR set to: 1
  7652                           ;doprnt.c: 1499: {
  7653                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  7654  000BB4  C151  F0B7         	movff	printf@val,___lldiv@dividend
  7655  000BB8  C152  F0B8         	movff	printf@val+1,___lldiv@dividend+1
  7656  000BBC  C153  F0B9         	movff	printf@val+2,___lldiv@dividend+2
  7657  000BC0  C154  F0BA         	movff	printf@val+3,___lldiv@dividend+3
  7658  000BC4  C149  F139         	movff	printf@prec,??_printf
  7659  000BC8  C14A  F13A         	movff	printf@prec+1,??_printf+1
  7660  000BCC  0101               	movlb	1	; () banked
  7661  000BCE  90D8               	bcf	status,0,c
  7662  000BD0  3739               	rlcf	??_printf& (0+255),f,b
  7663  000BD2  373A               	rlcf	(??_printf+1)& (0+255),f,b
  7664  000BD4  0101               	movlb	1	; () banked
  7665  000BD6  90D8               	bcf	status,0,c
  7666  000BD8  3739               	rlcf	??_printf& (0+255),f,b
  7667  000BDA  373A               	rlcf	(??_printf+1)& (0+255),f,b
  7668  000BDC  0EF3               	movlw	low _hexpowers
  7669  000BDE  0101               	movlb	1	; () banked
  7670  000BE0  2539               	addwf	??_printf& (0+255),w,b
  7671  000BE2  6EF6               	movwf	tblptrl,c
  7672  000BE4  0EFE               	movlw	high _hexpowers
  7673  000BE6  213A               	addwfc	(??_printf+1)& (0+255),w,b
  7674  000BE8  6EF7               	movwf	tblptrh,c
  7675  000BEA                     	if	0	;There are less than 3 active tblptr bytes
  7676  000BEA                     	endif
  7677  000BEA  0009               	tblrd		*+
  7678  000BEC  CFF5 F0BB          	movff	tablat,___lldiv@divisor
  7679  000BF0  0009               	tblrd		*+
  7680  000BF2  CFF5 F0BC          	movff	tablat,___lldiv@divisor+1
  7681  000BF6  0009               	tblrd		*+
  7682  000BF8  CFF5 F0BD          	movff	tablat,___lldiv@divisor+2
  7683  000BFC  000A               	tblrd		*-
  7684  000BFE  CFF5 F0BE          	movff	tablat,___lldiv@divisor+3
  7685  000C02  EC2B  F028         	call	___lldiv	;wreg free
  7686  000C06  0100               	movlb	0	; () banked
  7687  000C08  51B7               	movf	?___lldiv& (0+255),w,b
  7688  000C0A  0B0F               	andlw	15
  7689  000C0C  0101               	movlb	1	; () banked
  7690  000C0E  6F42               	movwf	printf@idx& (0+255),b
  7691                           
  7692                           ; BSR set to: 1
  7693                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  7694  000C10  0101               	movlb	1	; () banked
  7695  000C12  5142               	movf	printf@idx& (0+255),w,b
  7696  000C14  0D01               	mullw	1
  7697  000C16  0E46               	movlw	low STR_23
  7698  000C18  24F3               	addwf	prodl,w,c
  7699  000C1A  6EF6               	movwf	tblptrl,c
  7700  000C1C  0EFF               	movlw	high STR_23
  7701  000C1E  20F4               	addwfc	prodh,w,c
  7702  000C20  6EF7               	movwf	tblptrh,c
  7703  000C22                     	if	0	;There are less than 3 active tblptr bytes
  7704  000C22                     	endif
  7705  000C22  0008               	tblrd		*
  7706  000C24  CFF5 F15C          	movff	tablat,printf@c
  7707                           
  7708                           ; BSR set to: 1
  7709                           ;doprnt.c: 1523: }
  7710                           
  7711                           ;doprnt.c: 1508: }
  7712                           ;doprnt.c: 1510: break;
  7713  000C28  D009               	goto	l7710
  7714  000C2A                     l7708:
  7715                           
  7716                           ; BSR set to: 1
  7717  000C2A  0101               	movlb	1	; () banked
  7718  000C2C  5155               	movf	printf@flag& (0+255),w,b
  7719  000C2E  0B80               	andlw	128
  7720                           
  7721                           ; Switch size 1, requested type "space"
  7722                           ; Number of cases is 2, Range of values is 0 to 128
  7723                           ; switch strategies available:
  7724                           ; Name         Instructions Cycles
  7725                           ; simple_byte            7     4 (average)
  7726                           ;	Chosen strategy is simple_byte
  7727  000C30  0A00               	xorlw	0	; case 0
  7728  000C32  B4D8               	btfsc	status,2,c
  7729  000C34  D77D               	goto	l7700
  7730  000C36  0A80               	xorlw	128	; case 128
  7731  000C38  B4D8               	btfsc	status,2,c
  7732  000C3A  D7BC               	goto	l7702
  7733  000C3C                     l7710:
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;doprnt.c: 1524: (putch(c) );
  7737  000C3C  0101               	movlb	1	; () banked
  7738  000C3E  515C               	movf	printf@c& (0+255),w,b
  7739  000C40  ECEB  F02E         	call	_putch
  7740  000C44                     l7712:
  7741  000C44  0101               	movlb	1	; () banked
  7742  000C46  0749               	decf	printf@prec& (0+255),f,b
  7743  000C48  A0D8               	btfss	status,0,c
  7744  000C4A  074A               	decf	(printf@prec+1)& (0+255),f,b
  7745  000C4C  0101               	movlb	1	; () banked
  7746  000C4E  2949               	incf	printf@prec& (0+255),w,b
  7747  000C50  E1EC               	bnz	l7708
  7748  000C52  0101               	movlb	1	; () banked
  7749  000C54  294A               	incf	(printf@prec+1)& (0+255),w,b
  7750  000C56  A4D8               	btfss	status,2,c
  7751  000C58  D7E8               	goto	l7708
  7752  000C5A                     l7714:
  7753  000C5A  C12F  FFF6         	movff	printf@f,tblptrl
  7754  000C5E  C130  FFF7         	movff	printf@f+1,tblptrh
  7755  000C62  0101               	movlb	1	; () banked
  7756  000C64  4B2F               	infsnz	printf@f& (0+255),f,b
  7757  000C66  2B30               	incf	(printf@f+1)& (0+255),f,b
  7758  000C68                     	if	0	;tblptru may be non-zero
  7759  000C68                     	endif
  7760  000C68                     	if	0	;tblptru may be non-zero
  7761  000C68                     	endif
  7762  000C68  0008               	tblrd		*
  7763  000C6A  CFF5 F15C          	movff	tablat,printf@c
  7764  000C6E  0101               	movlb	1	; () banked
  7765  000C70  515C               	movf	printf@c& (0+255),w,b
  7766  000C72  B4D8               	btfsc	status,2,c
  7767  000C74  0012               	return	
  7768  000C76  EF11  F000         	goto	l7404
  7769  000C7A                     __end_of_printf:
  7770                           	opt stack 0
  7771                           tblptru	equ	0xFF8
  7772                           tblptrh	equ	0xFF7
  7773                           tblptrl	equ	0xFF6
  7774                           tablat	equ	0xFF5
  7775                           prodh	equ	0xFF4
  7776                           prodl	equ	0xFF3
  7777                           intcon	equ	0xFF2
  7778                           intcon3	equ	0xFF0
  7779                           postinc0	equ	0xFEE
  7780                           wreg	equ	0xFE8
  7781                           indf2	equ	0xFDF
  7782                           postinc2	equ	0xFDE
  7783                           postdec2	equ	0xFDD
  7784                           fsr2h	equ	0xFDA
  7785                           fsr2l	equ	0xFD9
  7786                           status	equ	0xFD8
  7787                           
  7788 ;; *************** function _scale *****************
  7789 ;; Defined at:
  7790 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  scl             1    wreg     char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  scl             1   25[BANK1 ] char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  3   19[BANK1 ] char 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7804 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;Total ram usage:        7 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    7
  7811 ;; This function calls:
  7812 ;;		___awdiv
  7813 ;;		___awmod
  7814 ;;		___ftmul
  7815 ;;		___wmul
  7816 ;; This function is called by:
  7817 ;;		_printf
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text18
  7822  002B26                     __ptext18:
  7823                           	opt stack 0
  7824  002B26                     _scale:
  7825                           	opt stack 21
  7826                           
  7827                           ;incstack = 0
  7828                           ;scale@scl stored from wreg
  7829  002B26  0101               	movlb	1	; () banked
  7830  002B28  6F19               	movwf	scale@scl& (0+255),b
  7831                           
  7832                           ;doprnt.c: 428: if(scl < 0) {
  7833  002B2A  0101               	movlb	1	; () banked
  7834  002B2C  AF19               	btfss	scale@scl& (0+255),7,b
  7835  002B2E  D12A               	goto	l7366
  7836                           
  7837                           ; BSR set to: 1
  7838                           ;doprnt.c: 429: scl = -scl;
  7839  002B30  0101               	movlb	1	; () banked
  7840  002B32  6D19               	negf	scale@scl& (0+255),b
  7841                           
  7842                           ;doprnt.c: 430: if(scl>=110)
  7843  002B34  0101               	movlb	1	; () banked
  7844  002B36  5119               	movf	scale@scl& (0+255),w,b
  7845  002B38  0A80               	xorlw	128
  7846  002B3A  0F12               	addlw	-238
  7847  002B3C  A0D8               	btfss	status,0,c
  7848  002B3E  D0AC               	goto	l7356
  7849                           
  7850                           ; BSR set to: 1
  7851                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7852  002B40  0E00               	movlw	0
  7853  002B42  0101               	movlb	1	; () banked
  7854  002B44  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7855  002B46  0E03               	movlw	3
  7856  002B48  6F02               	movwf	___wmul@multiplicand& (0+255),b
  7857  002B4A  0E00               	movlw	0
  7858  002B4C  0100               	movlb	0	; () banked
  7859  002B4E  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  7860  002B50  0E0A               	movlw	10
  7861  002B52  6FBF               	movwf	___awdiv@divisor& (0+255),b
  7862  002B54  0E00               	movlw	0
  7863  002B56  0100               	movlb	0	; () banked
  7864  002B58  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  7865  002B5A  0E64               	movlw	100
  7866  002B5C  6FB9               	movwf	___awmod@divisor& (0+255),b
  7867  002B5E  0101               	movlb	1	; () banked
  7868  002B60  5119               	movf	scale@scl& (0+255),w,b
  7869  002B62  0100               	movlb	0	; () banked
  7870  002B64  6FB7               	movwf	___awmod@dividend& (0+255),b
  7871  002B66  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  7872  002B68  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  7873  002B6A  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  7874  002B6C  ECE0  F028         	call	___awmod	;wreg free
  7875  002B70  C0B7  F0BD         	movff	?___awmod,___awdiv@dividend
  7876  002B74  C0B8  F0BE         	movff	?___awmod+1,___awdiv@dividend+1
  7877  002B78  ECCC  F027         	call	___awdiv	;wreg free
  7878  002B7C  0E09               	movlw	9
  7879  002B7E  0100               	movlb	0	; () banked
  7880  002B80  25BD               	addwf	?___awdiv& (0+255),w,b
  7881  002B82  0101               	movlb	1	; () banked
  7882  002B84  6F00               	movwf	___wmul@multiplier& (0+255),b
  7883  002B86  0E00               	movlw	0
  7884  002B88  0100               	movlb	0	; () banked
  7885  002B8A  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  7886  002B8C  0101               	movlb	1	; () banked
  7887  002B8E  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  7888  002B90  ECD7  F02D         	call	___wmul	;wreg free
  7889  002B94  0EA5               	movlw	low __npowers_
  7890  002B96  0101               	movlb	1	; () banked
  7891  002B98  2500               	addwf	?___wmul& (0+255),w,b
  7892  002B9A  6EF6               	movwf	tblptrl,c
  7893  002B9C  0EFE               	movlw	high __npowers_
  7894  002B9E  0101               	movlb	1	; () banked
  7895  002BA0  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  7896  002BA2  6EF7               	movwf	tblptrh,c
  7897  002BA4                     	if	0	;There are less than 3 active tblptr bytes
  7898  002BA4                     	endif
  7899  002BA4  0009               	tblrd		*+
  7900  002BA6  CFF5 F107          	movff	tablat,___ftmul@f2
  7901  002BAA  0009               	tblrd		*+
  7902  002BAC  CFF5 F108          	movff	tablat,___ftmul@f2+1
  7903  002BB0  000A               	tblrd		*-
  7904  002BB2  CFF5 F109          	movff	tablat,___ftmul@f2+2
  7905  002BB6  0E00               	movlw	0
  7906  002BB8  0100               	movlb	0	; () banked
  7907  002BBA  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  7908  002BBC  0E64               	movlw	100
  7909  002BBE  6FBF               	movwf	___awdiv@divisor& (0+255),b
  7910  002BC0  0101               	movlb	1	; () banked
  7911  002BC2  5119               	movf	scale@scl& (0+255),w,b
  7912  002BC4  0100               	movlb	0	; () banked
  7913  002BC6  6FBD               	movwf	___awdiv@dividend& (0+255),b
  7914  002BC8  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  7915  002BCA  BFBD               	btfsc	___awdiv@dividend& (0+255),7,b
  7916  002BCC  07BE               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7917  002BCE  ECCC  F027         	call	___awdiv	;wreg free
  7918  002BD2  0E12               	movlw	18
  7919  002BD4  0100               	movlb	0	; () banked
  7920  002BD6  25BD               	addwf	?___awdiv& (0+255),w,b
  7921  002BD8  0101               	movlb	1	; () banked
  7922  002BDA  6F00               	movwf	___wmul@multiplier& (0+255),b
  7923  002BDC  0E00               	movlw	0
  7924  002BDE  0100               	movlb	0	; () banked
  7925  002BE0  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  7926  002BE2  0101               	movlb	1	; () banked
  7927  002BE4  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  7928  002BE6  0E00               	movlw	0
  7929  002BE8  0101               	movlb	1	; () banked
  7930  002BEA  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7931  002BEC  0E03               	movlw	3
  7932  002BEE  6F02               	movwf	___wmul@multiplicand& (0+255),b
  7933  002BF0  ECD7  F02D         	call	___wmul	;wreg free
  7934  002BF4  0EA5               	movlw	low __npowers_
  7935  002BF6  0101               	movlb	1	; () banked
  7936  002BF8  2500               	addwf	?___wmul& (0+255),w,b
  7937  002BFA  6EF6               	movwf	tblptrl,c
  7938  002BFC  0EFE               	movlw	high __npowers_
  7939  002BFE  0101               	movlb	1	; () banked
  7940  002C00  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  7941  002C02  6EF7               	movwf	tblptrh,c
  7942  002C04                     	if	0	;There are less than 3 active tblptr bytes
  7943  002C04                     	endif
  7944  002C04  0009               	tblrd		*+
  7945  002C06  CFF5 F104          	movff	tablat,___ftmul@f1
  7946  002C0A  0009               	tblrd		*+
  7947  002C0C  CFF5 F105          	movff	tablat,___ftmul@f1+1
  7948  002C10  000A               	tblrd		*-
  7949  002C12  CFF5 F106          	movff	tablat,___ftmul@f1+2
  7950  002C16  ECF8  F01F         	call	___ftmul	;wreg free
  7951  002C1A  C104  F116         	movff	?___ftmul,_scale$1494
  7952  002C1E  C105  F117         	movff	?___ftmul+1,_scale$1494+1
  7953  002C22  C106  F118         	movff	?___ftmul+2,_scale$1494+2
  7954                           
  7955                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  7956  002C26  C116  F104         	movff	_scale$1494,___ftmul@f1
  7957  002C2A  C117  F105         	movff	_scale$1494+1,___ftmul@f1+1
  7958  002C2E  C118  F106         	movff	_scale$1494+2,___ftmul@f1+2
  7959  002C32  0E00               	movlw	0
  7960  002C34  0101               	movlb	1	; () banked
  7961  002C36  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7962  002C38  0E03               	movlw	3
  7963  002C3A  6F02               	movwf	___wmul@multiplicand& (0+255),b
  7964  002C3C  0E00               	movlw	0
  7965  002C3E  0100               	movlb	0	; () banked
  7966  002C40  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  7967  002C42  0E0A               	movlw	10
  7968  002C44  6FB9               	movwf	___awmod@divisor& (0+255),b
  7969  002C46  0101               	movlb	1	; () banked
  7970  002C48  5119               	movf	scale@scl& (0+255),w,b
  7971  002C4A  0100               	movlb	0	; () banked
  7972  002C4C  6FB7               	movwf	___awmod@dividend& (0+255),b
  7973  002C4E  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  7974  002C50  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  7975  002C52  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  7976  002C54  ECE0  F028         	call	___awmod	;wreg free
  7977  002C58  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  7978  002C5C  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  7979  002C60  ECD7  F02D         	call	___wmul	;wreg free
  7980  002C64  0EA5               	movlw	low __npowers_
  7981  002C66  0101               	movlb	1	; () banked
  7982  002C68  2500               	addwf	?___wmul& (0+255),w,b
  7983  002C6A  6EF6               	movwf	tblptrl,c
  7984  002C6C  0EFE               	movlw	high __npowers_
  7985  002C6E  0101               	movlb	1	; () banked
  7986  002C70  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  7987  002C72  6EF7               	movwf	tblptrh,c
  7988  002C74                     	if	0	;There are less than 3 active tblptr bytes
  7989  002C74                     	endif
  7990  002C74  0009               	tblrd		*+
  7991  002C76  CFF5 F107          	movff	tablat,___ftmul@f2
  7992  002C7A  0009               	tblrd		*+
  7993  002C7C  CFF5 F108          	movff	tablat,___ftmul@f2+1
  7994  002C80  000A               	tblrd		*-
  7995  002C82  CFF5 F109          	movff	tablat,___ftmul@f2+2
  7996  002C86  ECF8  F01F         	call	___ftmul	;wreg free
  7997  002C8A  C104  F113         	movff	?___ftmul,?_scale
  7998  002C8E  C105  F114         	movff	?___ftmul+1,?_scale+1
  7999  002C92  C106  F115         	movff	?___ftmul+2,?_scale+2
  8000  002C96  0012               	return	
  8001  002C98                     l7356:
  8002                           
  8003                           ;doprnt.c: 432: else if(scl > 10)
  8004  002C98  0101               	movlb	1	; () banked
  8005  002C9A  5119               	movf	scale@scl& (0+255),w,b
  8006  002C9C  0A80               	xorlw	128
  8007  002C9E  0F75               	addlw	-139
  8008  002CA0  A0D8               	btfss	status,0,c
  8009  002CA2  D05D               	goto	l7362
  8010                           
  8011                           ; BSR set to: 1
  8012                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8013  002CA4  0E00               	movlw	0
  8014  002CA6  0100               	movlb	0	; () banked
  8015  002CA8  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8016  002CAA  0E0A               	movlw	10
  8017  002CAC  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8018  002CAE  0101               	movlb	1	; () banked
  8019  002CB0  5119               	movf	scale@scl& (0+255),w,b
  8020  002CB2  0100               	movlb	0	; () banked
  8021  002CB4  6FBD               	movwf	___awdiv@dividend& (0+255),b
  8022  002CB6  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  8023  002CB8  BFBD               	btfsc	___awdiv@dividend& (0+255),7,b
  8024  002CBA  07BE               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8025  002CBC  ECCC  F027         	call	___awdiv	;wreg free
  8026  002CC0  0E09               	movlw	9
  8027  002CC2  0100               	movlb	0	; () banked
  8028  002CC4  25BD               	addwf	?___awdiv& (0+255),w,b
  8029  002CC6  0101               	movlb	1	; () banked
  8030  002CC8  6F00               	movwf	___wmul@multiplier& (0+255),b
  8031  002CCA  0E00               	movlw	0
  8032  002CCC  0100               	movlb	0	; () banked
  8033  002CCE  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8034  002CD0  0101               	movlb	1	; () banked
  8035  002CD2  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8036  002CD4  0E00               	movlw	0
  8037  002CD6  0101               	movlb	1	; () banked
  8038  002CD8  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8039  002CDA  0E03               	movlw	3
  8040  002CDC  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8041  002CDE  ECD7  F02D         	call	___wmul	;wreg free
  8042  002CE2  0EA5               	movlw	low __npowers_
  8043  002CE4  0101               	movlb	1	; () banked
  8044  002CE6  2500               	addwf	?___wmul& (0+255),w,b
  8045  002CE8  6EF6               	movwf	tblptrl,c
  8046  002CEA  0EFE               	movlw	high __npowers_
  8047  002CEC  0101               	movlb	1	; () banked
  8048  002CEE  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8049  002CF0  6EF7               	movwf	tblptrh,c
  8050  002CF2                     	if	0	;There are less than 3 active tblptr bytes
  8051  002CF2                     	endif
  8052  002CF2  0009               	tblrd		*+
  8053  002CF4  CFF5 F104          	movff	tablat,___ftmul@f1
  8054  002CF8  0009               	tblrd		*+
  8055  002CFA  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8056  002CFE  000A               	tblrd		*-
  8057  002D00  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8058  002D04  0E00               	movlw	0
  8059  002D06  0101               	movlb	1	; () banked
  8060  002D08  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8061  002D0A  0E03               	movlw	3
  8062  002D0C  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8063  002D0E  0E00               	movlw	0
  8064  002D10  0100               	movlb	0	; () banked
  8065  002D12  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8066  002D14  0E0A               	movlw	10
  8067  002D16  6FB9               	movwf	___awmod@divisor& (0+255),b
  8068  002D18  0101               	movlb	1	; () banked
  8069  002D1A  5119               	movf	scale@scl& (0+255),w,b
  8070  002D1C  0100               	movlb	0	; () banked
  8071  002D1E  6FB7               	movwf	___awmod@dividend& (0+255),b
  8072  002D20  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8073  002D22  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  8074  002D24  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  8075  002D26  ECE0  F028         	call	___awmod	;wreg free
  8076  002D2A  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  8077  002D2E  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  8078  002D32  ECD7  F02D         	call	___wmul	;wreg free
  8079  002D36  0EA5               	movlw	low __npowers_
  8080  002D38  0101               	movlb	1	; () banked
  8081  002D3A  2500               	addwf	?___wmul& (0+255),w,b
  8082  002D3C  6EF6               	movwf	tblptrl,c
  8083  002D3E  0EFE               	movlw	high __npowers_
  8084  002D40  0101               	movlb	1	; () banked
  8085  002D42  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8086  002D44  6EF7               	movwf	tblptrh,c
  8087  002D46                     	if	0	;There are less than 3 active tblptr bytes
  8088  002D46                     	endif
  8089  002D46  0009               	tblrd		*+
  8090  002D48  CFF5 F107          	movff	tablat,___ftmul@f2
  8091  002D4C  0009               	tblrd		*+
  8092  002D4E  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8093  002D52  000A               	tblrd		*-
  8094  002D54  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8095  002D58  ECF8  F01F         	call	___ftmul	;wreg free
  8096  002D5C  D796               	goto	L8
  8097  002D5E                     l7362:
  8098                           
  8099                           ;doprnt.c: 434: return _npowers_[scl];
  8100  002D5E  0101               	movlb	1	; () banked
  8101  002D60  5119               	movf	scale@scl& (0+255),w,b
  8102  002D62  0D03               	mullw	3
  8103  002D64  0EA5               	movlw	low __npowers_
  8104  002D66  24F3               	addwf	prodl,w,c
  8105  002D68  6EF6               	movwf	tblptrl,c
  8106  002D6A  0EFE               	movlw	high __npowers_
  8107  002D6C  20F4               	addwfc	prodh,w,c
  8108  002D6E  6EF7               	movwf	tblptrh,c
  8109  002D70                     	if	0	;There are less than 3 active tblptr bytes
  8110  002D70                     	endif
  8111  002D70  0009               	tblrd		*+
  8112  002D72  CFF5 F113          	movff	tablat,?_scale
  8113  002D76  0009               	tblrd		*+
  8114  002D78  CFF5 F114          	movff	tablat,?_scale+1
  8115  002D7C  000A               	tblrd		*-
  8116  002D7E  CFF5 F115          	movff	tablat,?_scale+2
  8117                           
  8118                           ; BSR set to: 1
  8119  002D82  0012               	return	
  8120  002D84                     l7366:
  8121                           
  8122                           ; BSR set to: 1
  8123                           ;doprnt.c: 435: }
  8124                           ;doprnt.c: 436: if(scl>=110)
  8125  002D84  0101               	movlb	1	; () banked
  8126  002D86  5119               	movf	scale@scl& (0+255),w,b
  8127  002D88  0A80               	xorlw	128
  8128  002D8A  0F12               	addlw	-238
  8129  002D8C  A0D8               	btfss	status,0,c
  8130  002D8E  D0AC               	goto	l7374
  8131                           
  8132                           ; BSR set to: 1
  8133                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8134  002D90  0E00               	movlw	0
  8135  002D92  0101               	movlb	1	; () banked
  8136  002D94  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8137  002D96  0E03               	movlw	3
  8138  002D98  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8139  002D9A  0E00               	movlw	0
  8140  002D9C  0100               	movlb	0	; () banked
  8141  002D9E  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8142  002DA0  0E0A               	movlw	10
  8143  002DA2  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8144  002DA4  0E00               	movlw	0
  8145  002DA6  0100               	movlb	0	; () banked
  8146  002DA8  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8147  002DAA  0E64               	movlw	100
  8148  002DAC  6FB9               	movwf	___awmod@divisor& (0+255),b
  8149  002DAE  0101               	movlb	1	; () banked
  8150  002DB0  5119               	movf	scale@scl& (0+255),w,b
  8151  002DB2  0100               	movlb	0	; () banked
  8152  002DB4  6FB7               	movwf	___awmod@dividend& (0+255),b
  8153  002DB6  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8154  002DB8  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  8155  002DBA  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  8156  002DBC  ECE0  F028         	call	___awmod	;wreg free
  8157  002DC0  C0B7  F0BD         	movff	?___awmod,___awdiv@dividend
  8158  002DC4  C0B8  F0BE         	movff	?___awmod+1,___awdiv@dividend+1
  8159  002DC8  ECCC  F027         	call	___awdiv	;wreg free
  8160  002DCC  0E09               	movlw	9
  8161  002DCE  0100               	movlb	0	; () banked
  8162  002DD0  25BD               	addwf	?___awdiv& (0+255),w,b
  8163  002DD2  0101               	movlb	1	; () banked
  8164  002DD4  6F00               	movwf	___wmul@multiplier& (0+255),b
  8165  002DD6  0E00               	movlw	0
  8166  002DD8  0100               	movlb	0	; () banked
  8167  002DDA  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8168  002DDC  0101               	movlb	1	; () banked
  8169  002DDE  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8170  002DE0  ECD7  F02D         	call	___wmul	;wreg free
  8171  002DE4  0ECC               	movlw	low __powers_
  8172  002DE6  0101               	movlb	1	; () banked
  8173  002DE8  2500               	addwf	?___wmul& (0+255),w,b
  8174  002DEA  6EF6               	movwf	tblptrl,c
  8175  002DEC  0EFE               	movlw	high __powers_
  8176  002DEE  0101               	movlb	1	; () banked
  8177  002DF0  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8178  002DF2  6EF7               	movwf	tblptrh,c
  8179  002DF4                     	if	0	;There are less than 3 active tblptr bytes
  8180  002DF4                     	endif
  8181  002DF4  0009               	tblrd		*+
  8182  002DF6  CFF5 F107          	movff	tablat,___ftmul@f2
  8183  002DFA  0009               	tblrd		*+
  8184  002DFC  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8185  002E00  000A               	tblrd		*-
  8186  002E02  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8187  002E06  0E00               	movlw	0
  8188  002E08  0100               	movlb	0	; () banked
  8189  002E0A  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8190  002E0C  0E64               	movlw	100
  8191  002E0E  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8192  002E10  0101               	movlb	1	; () banked
  8193  002E12  5119               	movf	scale@scl& (0+255),w,b
  8194  002E14  0100               	movlb	0	; () banked
  8195  002E16  6FBD               	movwf	___awdiv@dividend& (0+255),b
  8196  002E18  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  8197  002E1A  BFBD               	btfsc	___awdiv@dividend& (0+255),7,b
  8198  002E1C  07BE               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8199  002E1E  ECCC  F027         	call	___awdiv	;wreg free
  8200  002E22  0E12               	movlw	18
  8201  002E24  0100               	movlb	0	; () banked
  8202  002E26  25BD               	addwf	?___awdiv& (0+255),w,b
  8203  002E28  0101               	movlb	1	; () banked
  8204  002E2A  6F00               	movwf	___wmul@multiplier& (0+255),b
  8205  002E2C  0E00               	movlw	0
  8206  002E2E  0100               	movlb	0	; () banked
  8207  002E30  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8208  002E32  0101               	movlb	1	; () banked
  8209  002E34  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8210  002E36  0E00               	movlw	0
  8211  002E38  0101               	movlb	1	; () banked
  8212  002E3A  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8213  002E3C  0E03               	movlw	3
  8214  002E3E  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8215  002E40  ECD7  F02D         	call	___wmul	;wreg free
  8216  002E44  0ECC               	movlw	low __powers_
  8217  002E46  0101               	movlb	1	; () banked
  8218  002E48  2500               	addwf	?___wmul& (0+255),w,b
  8219  002E4A  6EF6               	movwf	tblptrl,c
  8220  002E4C  0EFE               	movlw	high __powers_
  8221  002E4E  0101               	movlb	1	; () banked
  8222  002E50  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8223  002E52  6EF7               	movwf	tblptrh,c
  8224  002E54                     	if	0	;There are less than 3 active tblptr bytes
  8225  002E54                     	endif
  8226  002E54  0009               	tblrd		*+
  8227  002E56  CFF5 F104          	movff	tablat,___ftmul@f1
  8228  002E5A  0009               	tblrd		*+
  8229  002E5C  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8230  002E60  000A               	tblrd		*-
  8231  002E62  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8232  002E66  ECF8  F01F         	call	___ftmul	;wreg free
  8233  002E6A  C104  F116         	movff	?___ftmul,_scale$1494
  8234  002E6E  C105  F117         	movff	?___ftmul+1,_scale$1494+1
  8235  002E72  C106  F118         	movff	?___ftmul+2,_scale$1494+2
  8236                           
  8237                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8238  002E76  C116  F104         	movff	_scale$1494,___ftmul@f1
  8239  002E7A  C117  F105         	movff	_scale$1494+1,___ftmul@f1+1
  8240  002E7E  C118  F106         	movff	_scale$1494+2,___ftmul@f1+2
  8241  002E82  0E00               	movlw	0
  8242  002E84  0101               	movlb	1	; () banked
  8243  002E86  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8244  002E88  0E03               	movlw	3
  8245  002E8A  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8246  002E8C  0E00               	movlw	0
  8247  002E8E  0100               	movlb	0	; () banked
  8248  002E90  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8249  002E92  0E0A               	movlw	10
  8250  002E94  6FB9               	movwf	___awmod@divisor& (0+255),b
  8251  002E96  0101               	movlb	1	; () banked
  8252  002E98  5119               	movf	scale@scl& (0+255),w,b
  8253  002E9A  0100               	movlb	0	; () banked
  8254  002E9C  6FB7               	movwf	___awmod@dividend& (0+255),b
  8255  002E9E  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8256  002EA0  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  8257  002EA2  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  8258  002EA4  ECE0  F028         	call	___awmod	;wreg free
  8259  002EA8  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  8260  002EAC  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  8261  002EB0  ECD7  F02D         	call	___wmul	;wreg free
  8262  002EB4  0ECC               	movlw	low __powers_
  8263  002EB6  0101               	movlb	1	; () banked
  8264  002EB8  2500               	addwf	?___wmul& (0+255),w,b
  8265  002EBA  6EF6               	movwf	tblptrl,c
  8266  002EBC  0EFE               	movlw	high __powers_
  8267  002EBE  0101               	movlb	1	; () banked
  8268  002EC0  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8269  002EC2  6EF7               	movwf	tblptrh,c
  8270  002EC4                     	if	0	;There are less than 3 active tblptr bytes
  8271  002EC4                     	endif
  8272  002EC4  0009               	tblrd		*+
  8273  002EC6  CFF5 F107          	movff	tablat,___ftmul@f2
  8274  002ECA  0009               	tblrd		*+
  8275  002ECC  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8276  002ED0  000A               	tblrd		*-
  8277  002ED2  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8278  002ED6  ECF8  F01F         	call	___ftmul	;wreg free
  8279  002EDA  C104  F113         	movff	?___ftmul,?_scale
  8280  002EDE  C105  F114         	movff	?___ftmul+1,?_scale+1
  8281  002EE2  C106  F115         	movff	?___ftmul+2,?_scale+2
  8282  002EE6  0012               	return	
  8283  002EE8                     l7374:
  8284                           
  8285                           ;doprnt.c: 438: else if(scl > 10)
  8286  002EE8  0101               	movlb	1	; () banked
  8287  002EEA  5119               	movf	scale@scl& (0+255),w,b
  8288  002EEC  0A80               	xorlw	128
  8289  002EEE  0F75               	addlw	-139
  8290  002EF0  A0D8               	btfss	status,0,c
  8291  002EF2  D05D               	goto	l7380
  8292                           
  8293                           ; BSR set to: 1
  8294                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8295  002EF4  0E00               	movlw	0
  8296  002EF6  0100               	movlb	0	; () banked
  8297  002EF8  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8298  002EFA  0E0A               	movlw	10
  8299  002EFC  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8300  002EFE  0101               	movlb	1	; () banked
  8301  002F00  5119               	movf	scale@scl& (0+255),w,b
  8302  002F02  0100               	movlb	0	; () banked
  8303  002F04  6FBD               	movwf	___awdiv@dividend& (0+255),b
  8304  002F06  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  8305  002F08  BFBD               	btfsc	___awdiv@dividend& (0+255),7,b
  8306  002F0A  07BE               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8307  002F0C  ECCC  F027         	call	___awdiv	;wreg free
  8308  002F10  0E09               	movlw	9
  8309  002F12  0100               	movlb	0	; () banked
  8310  002F14  25BD               	addwf	?___awdiv& (0+255),w,b
  8311  002F16  0101               	movlb	1	; () banked
  8312  002F18  6F00               	movwf	___wmul@multiplier& (0+255),b
  8313  002F1A  0E00               	movlw	0
  8314  002F1C  0100               	movlb	0	; () banked
  8315  002F1E  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8316  002F20  0101               	movlb	1	; () banked
  8317  002F22  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8318  002F24  0E00               	movlw	0
  8319  002F26  0101               	movlb	1	; () banked
  8320  002F28  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8321  002F2A  0E03               	movlw	3
  8322  002F2C  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8323  002F2E  ECD7  F02D         	call	___wmul	;wreg free
  8324  002F32  0ECC               	movlw	low __powers_
  8325  002F34  0101               	movlb	1	; () banked
  8326  002F36  2500               	addwf	?___wmul& (0+255),w,b
  8327  002F38  6EF6               	movwf	tblptrl,c
  8328  002F3A  0EFE               	movlw	high __powers_
  8329  002F3C  0101               	movlb	1	; () banked
  8330  002F3E  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8331  002F40  6EF7               	movwf	tblptrh,c
  8332  002F42                     	if	0	;There are less than 3 active tblptr bytes
  8333  002F42                     	endif
  8334  002F42  0009               	tblrd		*+
  8335  002F44  CFF5 F104          	movff	tablat,___ftmul@f1
  8336  002F48  0009               	tblrd		*+
  8337  002F4A  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8338  002F4E  000A               	tblrd		*-
  8339  002F50  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8340  002F54  0E00               	movlw	0
  8341  002F56  0101               	movlb	1	; () banked
  8342  002F58  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8343  002F5A  0E03               	movlw	3
  8344  002F5C  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8345  002F5E  0E00               	movlw	0
  8346  002F60  0100               	movlb	0	; () banked
  8347  002F62  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8348  002F64  0E0A               	movlw	10
  8349  002F66  6FB9               	movwf	___awmod@divisor& (0+255),b
  8350  002F68  0101               	movlb	1	; () banked
  8351  002F6A  5119               	movf	scale@scl& (0+255),w,b
  8352  002F6C  0100               	movlb	0	; () banked
  8353  002F6E  6FB7               	movwf	___awmod@dividend& (0+255),b
  8354  002F70  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8355  002F72  BFB7               	btfsc	___awmod@dividend& (0+255),7,b
  8356  002F74  07B8               	decf	(___awmod@dividend+1)& (0+255),f,b
  8357  002F76  ECE0  F028         	call	___awmod	;wreg free
  8358  002F7A  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  8359  002F7E  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  8360  002F82  ECD7  F02D         	call	___wmul	;wreg free
  8361  002F86  0ECC               	movlw	low __powers_
  8362  002F88  0101               	movlb	1	; () banked
  8363  002F8A  2500               	addwf	?___wmul& (0+255),w,b
  8364  002F8C  6EF6               	movwf	tblptrl,c
  8365  002F8E  0EFE               	movlw	high __powers_
  8366  002F90  0101               	movlb	1	; () banked
  8367  002F92  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8368  002F94  6EF7               	movwf	tblptrh,c
  8369  002F96                     	if	0	;There are less than 3 active tblptr bytes
  8370  002F96                     	endif
  8371  002F96  0009               	tblrd		*+
  8372  002F98  CFF5 F107          	movff	tablat,___ftmul@f2
  8373  002F9C  0009               	tblrd		*+
  8374  002F9E  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8375  002FA2  000A               	tblrd		*-
  8376  002FA4  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8377  002FA8  ECF8  F01F         	call	___ftmul	;wreg free
  8378  002FAC  D796               	goto	L9
  8379  002FAE                     l7380:
  8380                           
  8381                           ;doprnt.c: 440: return _powers_[scl];
  8382  002FAE  0101               	movlb	1	; () banked
  8383  002FB0  5119               	movf	scale@scl& (0+255),w,b
  8384  002FB2  0D03               	mullw	3
  8385  002FB4  0ECC               	movlw	low __powers_
  8386  002FB6  24F3               	addwf	prodl,w,c
  8387  002FB8  6EF6               	movwf	tblptrl,c
  8388  002FBA  0EFE               	movlw	high __powers_
  8389  002FBC  20F4               	addwfc	prodh,w,c
  8390  002FBE  6EF7               	movwf	tblptrh,c
  8391  002FC0                     	if	0	;There are less than 3 active tblptr bytes
  8392  002FC0                     	endif
  8393  002FC0  0009               	tblrd		*+
  8394  002FC2  CFF5 F113          	movff	tablat,?_scale
  8395  002FC6  0009               	tblrd		*+
  8396  002FC8  CFF5 F114          	movff	tablat,?_scale+1
  8397  002FCC  000A               	tblrd		*-
  8398  002FCE  CFF5 F115          	movff	tablat,?_scale+2
  8399  002FD2  0012               	return	
  8400  002FD4                     __end_of_scale:
  8401                           	opt stack 0
  8402                           tblptru	equ	0xFF8
  8403                           tblptrh	equ	0xFF7
  8404                           tblptrl	equ	0xFF6
  8405                           tablat	equ	0xFF5
  8406                           prodh	equ	0xFF4
  8407                           prodl	equ	0xFF3
  8408                           intcon	equ	0xFF2
  8409                           intcon3	equ	0xFF0
  8410                           postinc0	equ	0xFEE
  8411                           wreg	equ	0xFE8
  8412                           indf2	equ	0xFDF
  8413                           postinc2	equ	0xFDE
  8414                           postdec2	equ	0xFDD
  8415                           fsr2h	equ	0xFDA
  8416                           fsr2l	equ	0xFD9
  8417                           status	equ	0xFD8
  8418                           
  8419 ;; *************** function _putch *****************
  8420 ;; Defined at:
  8421 ;;		line 31 in file "lcd.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  data            1    wreg     unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  data            1   57[BANK0 ] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;Total ram usage:        1 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; Hardware stack levels required when called:    6
  8442 ;; This function calls:
  8443 ;;		_lcdNibble
  8444 ;; This function is called by:
  8445 ;;		_printf
  8446 ;;		_showLogMenu
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text19
  8451  005DD6                     __ptext19:
  8452                           	opt stack 0
  8453  005DD6                     _putch:
  8454                           	opt stack 22
  8455                           
  8456                           ;incstack = 0
  8457                           ;putch@data stored from wreg
  8458  005DD6  0100               	movlb	0	; () banked
  8459  005DD8  6FB9               	movwf	putch@data& (0+255),b
  8460                           
  8461                           ;lcd.c: 32: LATDbits.LATD2 = 1;
  8462  005DDA  848C               	bsf	3980,2,c	;volatile
  8463                           
  8464                           ;lcd.c: 33: lcdNibble(data);
  8465  005DDC  0100               	movlb	0	; () banked
  8466  005DDE  51B9               	movf	putch@data& (0+255),w,b
  8467  005DE0  ECBF  F02A         	call	_lcdNibble
  8468  005DE4  0012               	return		;funcret
  8469  005DE6                     __end_of_putch:
  8470                           	opt stack 0
  8471                           tblptru	equ	0xFF8
  8472                           tblptrh	equ	0xFF7
  8473                           tblptrl	equ	0xFF6
  8474                           tablat	equ	0xFF5
  8475                           prodh	equ	0xFF4
  8476                           prodl	equ	0xFF3
  8477                           intcon	equ	0xFF2
  8478                           intcon3	equ	0xFF0
  8479                           postinc0	equ	0xFEE
  8480                           wreg	equ	0xFE8
  8481                           indf2	equ	0xFDF
  8482                           postinc2	equ	0xFDE
  8483                           postdec2	equ	0xFDD
  8484                           fsr2h	equ	0xFDA
  8485                           fsr2l	equ	0xFD9
  8486                           status	equ	0xFD8
  8487                           
  8488 ;; *************** function _isdigit *****************
  8489 ;; Defined at:
  8490 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  c               1    wreg     unsigned char 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;  c               1   57[BANK0 ] unsigned char 
  8495 ;; Return value:  Size  Location     Type
  8496 ;;		None               void
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8505 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8507 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;Total ram usage:        3 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; Hardware stack levels required when called:    5
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_printf
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text20
  8519  005CA2                     __ptext20:
  8520                           	opt stack 0
  8521  005CA2                     _isdigit:
  8522                           	opt stack 23
  8523                           
  8524                           ;incstack = 0
  8525                           ;isdigit@c stored from wreg
  8526  005CA2  0100               	movlb	0	; () banked
  8527  005CA4  6FB9               	movwf	isdigit@c& (0+255),b
  8528  005CA6  0E00               	movlw	0
  8529  005CA8  0100               	movlb	0	; () banked
  8530  005CAA  6FB8               	movwf	_isdigit$1152& (0+255),b
  8531                           
  8532                           ; BSR set to: 0
  8533  005CAC  0E3A               	movlw	58
  8534  005CAE  0100               	movlb	0	; () banked
  8535  005CB0  61B9               	cpfslt	isdigit@c& (0+255),b
  8536  005CB2  D007               	goto	l4602
  8537                           
  8538                           ; BSR set to: 0
  8539  005CB4  0E2F               	movlw	47
  8540  005CB6  0100               	movlb	0	; () banked
  8541  005CB8  65B9               	cpfsgt	isdigit@c& (0+255),b
  8542  005CBA  D003               	goto	l4602
  8543                           
  8544                           ; BSR set to: 0
  8545  005CBC  0E01               	movlw	1
  8546  005CBE  0100               	movlb	0	; () banked
  8547  005CC0  6FB8               	movwf	_isdigit$1152& (0+255),b
  8548  005CC2                     l4602:
  8549                           
  8550                           ; BSR set to: 0
  8551  005CC2  C0B8  F0B7         	movff	_isdigit$1152,??_isdigit
  8552  005CC6  0100               	movlb	0	; () banked
  8553  005CC8  31B7               	rrcf	??_isdigit& (0+255),w,b
  8554  005CCA  0012               	return	
  8555  005CCC                     __end_of_isdigit:
  8556                           	opt stack 0
  8557                           tblptru	equ	0xFF8
  8558                           tblptrh	equ	0xFF7
  8559                           tblptrl	equ	0xFF6
  8560                           tablat	equ	0xFF5
  8561                           prodh	equ	0xFF4
  8562                           prodl	equ	0xFF3
  8563                           intcon	equ	0xFF2
  8564                           intcon3	equ	0xFF0
  8565                           postinc0	equ	0xFEE
  8566                           wreg	equ	0xFE8
  8567                           indf2	equ	0xFDF
  8568                           postinc2	equ	0xFDE
  8569                           postdec2	equ	0xFDD
  8570                           fsr2h	equ	0xFDA
  8571                           fsr2l	equ	0xFD9
  8572                           status	equ	0xFD8
  8573                           
  8574 ;; *************** function _fround *****************
  8575 ;; Defined at:
  8576 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  prec            1    wreg     unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  prec            1   28[BANK1 ] unsigned char 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  3   19[BANK1 ] unsigned char 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8590 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8591 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;Total ram usage:       10 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    7
  8597 ;; This function calls:
  8598 ;;		___awdiv
  8599 ;;		___awmod
  8600 ;;		___ftmul
  8601 ;;		___wmul
  8602 ;; This function is called by:
  8603 ;;		_printf
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text21
  8608  0033C4                     __ptext21:
  8609                           	opt stack 0
  8610  0033C4                     _fround:
  8611                           	opt stack 21
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;incstack = 0
  8615                           ;fround@prec stored from wreg
  8616  0033C4  0101               	movlb	1	; () banked
  8617  0033C6  6F1C               	movwf	fround@prec& (0+255),b
  8618                           
  8619                           ;doprnt.c: 413: if(prec>=110)
  8620  0033C8  0E6D               	movlw	109
  8621  0033CA  0101               	movlb	1	; () banked
  8622  0033CC  651C               	cpfsgt	fround@prec& (0+255),b
  8623  0033CE  D0BA               	goto	l7334
  8624                           
  8625                           ; BSR set to: 1
  8626                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8627  0033D0  0E00               	movlw	0
  8628  0033D2  0101               	movlb	1	; () banked
  8629  0033D4  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8630  0033D6  0E03               	movlw	3
  8631  0033D8  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8632  0033DA  0E00               	movlw	0
  8633  0033DC  0100               	movlb	0	; () banked
  8634  0033DE  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8635  0033E0  0E0A               	movlw	10
  8636  0033E2  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8637  0033E4  0E00               	movlw	0
  8638  0033E6  0100               	movlb	0	; () banked
  8639  0033E8  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8640  0033EA  0E64               	movlw	100
  8641  0033EC  6FB9               	movwf	___awmod@divisor& (0+255),b
  8642  0033EE  C11C  F0B7         	movff	fround@prec,___awmod@dividend
  8643  0033F2  0100               	movlb	0	; () banked
  8644  0033F4  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8645  0033F6  ECE0  F028         	call	___awmod	;wreg free
  8646  0033FA  C0B7  F0BD         	movff	?___awmod,___awdiv@dividend
  8647  0033FE  C0B8  F0BE         	movff	?___awmod+1,___awdiv@dividend+1
  8648  003402  ECCC  F027         	call	___awdiv	;wreg free
  8649  003406  0E09               	movlw	9
  8650  003408  0100               	movlb	0	; () banked
  8651  00340A  25BD               	addwf	?___awdiv& (0+255),w,b
  8652  00340C  0101               	movlb	1	; () banked
  8653  00340E  6F00               	movwf	___wmul@multiplier& (0+255),b
  8654  003410  0E00               	movlw	0
  8655  003412  0100               	movlb	0	; () banked
  8656  003414  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8657  003416  0101               	movlb	1	; () banked
  8658  003418  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8659  00341A  ECD7  F02D         	call	___wmul	;wreg free
  8660  00341E  0EA5               	movlw	low __npowers_
  8661  003420  0101               	movlb	1	; () banked
  8662  003422  2500               	addwf	?___wmul& (0+255),w,b
  8663  003424  6EF6               	movwf	tblptrl,c
  8664  003426  0EFE               	movlw	high __npowers_
  8665  003428  0101               	movlb	1	; () banked
  8666  00342A  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8667  00342C  6EF7               	movwf	tblptrh,c
  8668  00342E                     	if	0	;There are less than 3 active tblptr bytes
  8669  00342E                     	endif
  8670  00342E  0009               	tblrd		*+
  8671  003430  CFF5 F107          	movff	tablat,___ftmul@f2
  8672  003434  0009               	tblrd		*+
  8673  003436  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8674  00343A  000A               	tblrd		*-
  8675  00343C  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8676  003440  0E00               	movlw	0
  8677  003442  0100               	movlb	0	; () banked
  8678  003444  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8679  003446  0E64               	movlw	100
  8680  003448  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8681  00344A  C11C  F0BD         	movff	fround@prec,___awdiv@dividend
  8682  00344E  0100               	movlb	0	; () banked
  8683  003450  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  8684  003452  ECCC  F027         	call	___awdiv	;wreg free
  8685  003456  0E12               	movlw	18
  8686  003458  0100               	movlb	0	; () banked
  8687  00345A  25BD               	addwf	?___awdiv& (0+255),w,b
  8688  00345C  0101               	movlb	1	; () banked
  8689  00345E  6F00               	movwf	___wmul@multiplier& (0+255),b
  8690  003460  0E00               	movlw	0
  8691  003462  0100               	movlb	0	; () banked
  8692  003464  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8693  003466  0101               	movlb	1	; () banked
  8694  003468  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8695  00346A  0E00               	movlw	0
  8696  00346C  0101               	movlb	1	; () banked
  8697  00346E  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8698  003470  0E03               	movlw	3
  8699  003472  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8700  003474  ECD7  F02D         	call	___wmul	;wreg free
  8701  003478  0EA5               	movlw	low __npowers_
  8702  00347A  0101               	movlb	1	; () banked
  8703  00347C  2500               	addwf	?___wmul& (0+255),w,b
  8704  00347E  6EF6               	movwf	tblptrl,c
  8705  003480  0EFE               	movlw	high __npowers_
  8706  003482  0101               	movlb	1	; () banked
  8707  003484  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8708  003486  6EF7               	movwf	tblptrh,c
  8709  003488                     	if	0	;There are less than 3 active tblptr bytes
  8710  003488                     	endif
  8711  003488  0009               	tblrd		*+
  8712  00348A  CFF5 F104          	movff	tablat,___ftmul@f1
  8713  00348E  0009               	tblrd		*+
  8714  003490  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8715  003494  000A               	tblrd		*-
  8716  003496  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8717  00349A  ECF8  F01F         	call	___ftmul	;wreg free
  8718  00349E  C104  F119         	movff	?___ftmul,_fround$1492
  8719  0034A2  C105  F11A         	movff	?___ftmul+1,_fround$1492+1
  8720  0034A6  C106  F11B         	movff	?___ftmul+2,_fround$1492+2
  8721                           
  8722                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8723  0034AA  0E00               	movlw	0
  8724  0034AC  0101               	movlb	1	; () banked
  8725  0034AE  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8726  0034B0  0E03               	movlw	3
  8727  0034B2  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8728  0034B4  0E00               	movlw	0
  8729  0034B6  0100               	movlb	0	; () banked
  8730  0034B8  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8731  0034BA  0E0A               	movlw	10
  8732  0034BC  6FB9               	movwf	___awmod@divisor& (0+255),b
  8733  0034BE  C11C  F0B7         	movff	fround@prec,___awmod@dividend
  8734  0034C2  0100               	movlb	0	; () banked
  8735  0034C4  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8736  0034C6  ECE0  F028         	call	___awmod	;wreg free
  8737  0034CA  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  8738  0034CE  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  8739  0034D2  ECD7  F02D         	call	___wmul	;wreg free
  8740  0034D6  0EA5               	movlw	low __npowers_
  8741  0034D8  0101               	movlb	1	; () banked
  8742  0034DA  2500               	addwf	?___wmul& (0+255),w,b
  8743  0034DC  6EF6               	movwf	tblptrl,c
  8744  0034DE  0EFE               	movlw	high __npowers_
  8745  0034E0  0101               	movlb	1	; () banked
  8746  0034E2  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8747  0034E4  6EF7               	movwf	tblptrh,c
  8748  0034E6                     	if	0	;There are less than 3 active tblptr bytes
  8749  0034E6                     	endif
  8750  0034E6  0009               	tblrd		*+
  8751  0034E8  CFF5 F107          	movff	tablat,___ftmul@f2
  8752  0034EC  0009               	tblrd		*+
  8753  0034EE  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8754  0034F2  000A               	tblrd		*-
  8755  0034F4  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8756  0034F8  C119  F104         	movff	_fround$1492,___ftmul@f1
  8757  0034FC  C11A  F105         	movff	_fround$1492+1,___ftmul@f1+1
  8758  003500  C11B  F106         	movff	_fround$1492+2,___ftmul@f1+2
  8759  003504  ECF8  F01F         	call	___ftmul	;wreg free
  8760  003508  C104  F116         	movff	?___ftmul,_fround$1493
  8761  00350C  C105  F117         	movff	?___ftmul+1,_fround$1493+1
  8762  003510  C106  F118         	movff	?___ftmul+2,_fround$1493+2
  8763                           
  8764                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8765  003514  C116  F104         	movff	_fround$1493,___ftmul@f1
  8766  003518  C117  F105         	movff	_fround$1493+1,___ftmul@f1+1
  8767  00351C  C118  F106         	movff	_fround$1493+2,___ftmul@f1+2
  8768  003520  0E00               	movlw	0
  8769  003522  0101               	movlb	1	; () banked
  8770  003524  6F07               	movwf	___ftmul@f2& (0+255),b
  8771  003526  0E00               	movlw	0
  8772  003528  0101               	movlb	1	; () banked
  8773  00352A  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  8774  00352C  0E3F               	movlw	63
  8775  00352E  0101               	movlb	1	; () banked
  8776  003530  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  8777  003532  ECF8  F01F         	call	___ftmul	;wreg free
  8778  003536  C104  F113         	movff	?___ftmul,?_fround
  8779  00353A  C105  F114         	movff	?___ftmul+1,?_fround+1
  8780  00353E  C106  F115         	movff	?___ftmul+2,?_fround+2
  8781  003542  0012               	return	
  8782  003544                     l7334:
  8783                           
  8784                           ;doprnt.c: 415: else if(prec > 10)
  8785  003544  0E0A               	movlw	10
  8786  003546  0101               	movlb	1	; () banked
  8787  003548  651C               	cpfsgt	fround@prec& (0+255),b
  8788  00354A  D06E               	goto	l7342
  8789                           
  8790                           ; BSR set to: 1
  8791                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8792  00354C  0E00               	movlw	0
  8793  00354E  0101               	movlb	1	; () banked
  8794  003550  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8795  003552  0E03               	movlw	3
  8796  003554  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8797  003556  0E00               	movlw	0
  8798  003558  0100               	movlb	0	; () banked
  8799  00355A  6FBA               	movwf	(___awmod@divisor+1)& (0+255),b
  8800  00355C  0E0A               	movlw	10
  8801  00355E  6FB9               	movwf	___awmod@divisor& (0+255),b
  8802  003560  C11C  F0B7         	movff	fround@prec,___awmod@dividend
  8803  003564  0100               	movlb	0	; () banked
  8804  003566  6BB8               	clrf	(___awmod@dividend+1)& (0+255),b
  8805  003568  ECE0  F028         	call	___awmod	;wreg free
  8806  00356C  C0B7  F100         	movff	?___awmod,___wmul@multiplier
  8807  003570  C0B8  F101         	movff	?___awmod+1,___wmul@multiplier+1
  8808  003574  ECD7  F02D         	call	___wmul	;wreg free
  8809  003578  0EA5               	movlw	low __npowers_
  8810  00357A  0101               	movlb	1	; () banked
  8811  00357C  2500               	addwf	?___wmul& (0+255),w,b
  8812  00357E  6EF6               	movwf	tblptrl,c
  8813  003580  0EFE               	movlw	high __npowers_
  8814  003582  0101               	movlb	1	; () banked
  8815  003584  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8816  003586  6EF7               	movwf	tblptrh,c
  8817  003588                     	if	0	;There are less than 3 active tblptr bytes
  8818  003588                     	endif
  8819  003588  0009               	tblrd		*+
  8820  00358A  CFF5 F107          	movff	tablat,___ftmul@f2
  8821  00358E  0009               	tblrd		*+
  8822  003590  CFF5 F108          	movff	tablat,___ftmul@f2+1
  8823  003594  000A               	tblrd		*-
  8824  003596  CFF5 F109          	movff	tablat,___ftmul@f2+2
  8825  00359A  0E00               	movlw	0
  8826  00359C  0100               	movlb	0	; () banked
  8827  00359E  6FC0               	movwf	(___awdiv@divisor+1)& (0+255),b
  8828  0035A0  0E0A               	movlw	10
  8829  0035A2  6FBF               	movwf	___awdiv@divisor& (0+255),b
  8830  0035A4  C11C  F0BD         	movff	fround@prec,___awdiv@dividend
  8831  0035A8  0100               	movlb	0	; () banked
  8832  0035AA  6BBE               	clrf	(___awdiv@dividend+1)& (0+255),b
  8833  0035AC  ECCC  F027         	call	___awdiv	;wreg free
  8834  0035B0  0E09               	movlw	9
  8835  0035B2  0100               	movlb	0	; () banked
  8836  0035B4  25BD               	addwf	?___awdiv& (0+255),w,b
  8837  0035B6  0101               	movlb	1	; () banked
  8838  0035B8  6F00               	movwf	___wmul@multiplier& (0+255),b
  8839  0035BA  0E00               	movlw	0
  8840  0035BC  0100               	movlb	0	; () banked
  8841  0035BE  21BE               	addwfc	(?___awdiv+1)& (0+255),w,b
  8842  0035C0  0101               	movlb	1	; () banked
  8843  0035C2  6F01               	movwf	(___wmul@multiplier+1)& (0+255),b
  8844  0035C4  0E00               	movlw	0
  8845  0035C6  0101               	movlb	1	; () banked
  8846  0035C8  6F03               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8847  0035CA  0E03               	movlw	3
  8848  0035CC  6F02               	movwf	___wmul@multiplicand& (0+255),b
  8849  0035CE  ECD7  F02D         	call	___wmul	;wreg free
  8850  0035D2  0EA5               	movlw	low __npowers_
  8851  0035D4  0101               	movlb	1	; () banked
  8852  0035D6  2500               	addwf	?___wmul& (0+255),w,b
  8853  0035D8  6EF6               	movwf	tblptrl,c
  8854  0035DA  0EFE               	movlw	high __npowers_
  8855  0035DC  0101               	movlb	1	; () banked
  8856  0035DE  2101               	addwfc	(?___wmul+1)& (0+255),w,b
  8857  0035E0  6EF7               	movwf	tblptrh,c
  8858  0035E2                     	if	0	;There are less than 3 active tblptr bytes
  8859  0035E2                     	endif
  8860  0035E2  0009               	tblrd		*+
  8861  0035E4  CFF5 F104          	movff	tablat,___ftmul@f1
  8862  0035E8  0009               	tblrd		*+
  8863  0035EA  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8864  0035EE  000A               	tblrd		*-
  8865  0035F0  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8866  0035F4  ECF8  F01F         	call	___ftmul	;wreg free
  8867  0035F8  C104  F119         	movff	?___ftmul,_fround$1492
  8868  0035FC  C105  F11A         	movff	?___ftmul+1,_fround$1492+1
  8869  003600  C106  F11B         	movff	?___ftmul+2,_fround$1492+2
  8870                           
  8871                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8872  003604  C119  F104         	movff	_fround$1492,___ftmul@f1
  8873  003608  C11A  F105         	movff	_fround$1492+1,___ftmul@f1+1
  8874  00360C  C11B  F106         	movff	_fround$1492+2,___ftmul@f1+2
  8875  003610  0E00               	movlw	0
  8876  003612  0101               	movlb	1	; () banked
  8877  003614  6F07               	movwf	___ftmul@f2& (0+255),b
  8878  003616  0E00               	movlw	0
  8879  003618  0101               	movlb	1	; () banked
  8880  00361A  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  8881  00361C  0E3F               	movlw	63
  8882  00361E  0101               	movlb	1	; () banked
  8883  003620  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  8884  003622  ECF8  F01F         	call	___ftmul	;wreg free
  8885  003626  D787               	goto	L10
  8886  003628                     l7342:
  8887                           
  8888                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8889  003628  0101               	movlb	1	; () banked
  8890  00362A  511C               	movf	fround@prec& (0+255),w,b
  8891  00362C  0D03               	mullw	3
  8892  00362E  0EA5               	movlw	low __npowers_
  8893  003630  24F3               	addwf	prodl,w,c
  8894  003632  6EF6               	movwf	tblptrl,c
  8895  003634  0EFE               	movlw	high __npowers_
  8896  003636  20F4               	addwfc	prodh,w,c
  8897  003638  6EF7               	movwf	tblptrh,c
  8898  00363A                     	if	0	;There are less than 3 active tblptr bytes
  8899  00363A                     	endif
  8900  00363A  0009               	tblrd		*+
  8901  00363C  CFF5 F104          	movff	tablat,___ftmul@f1
  8902  003640  0009               	tblrd		*+
  8903  003642  CFF5 F105          	movff	tablat,___ftmul@f1+1
  8904  003646  000A               	tblrd		*-
  8905  003648  CFF5 F106          	movff	tablat,___ftmul@f1+2
  8906  00364C  0E00               	movlw	0
  8907  00364E  0101               	movlb	1	; () banked
  8908  003650  6F07               	movwf	___ftmul@f2& (0+255),b
  8909  003652  0E00               	movlw	0
  8910  003654  0101               	movlb	1	; () banked
  8911  003656  6F08               	movwf	(___ftmul@f2+1)& (0+255),b
  8912  003658  0E3F               	movlw	63
  8913  00365A  0101               	movlb	1	; () banked
  8914  00365C  6F09               	movwf	(___ftmul@f2+2)& (0+255),b
  8915  00365E  ECF8  F01F         	call	___ftmul	;wreg free
  8916  003662  C104  F113         	movff	?___ftmul,?_fround
  8917  003666  C105  F114         	movff	?___ftmul+1,?_fround+1
  8918  00366A  C106  F115         	movff	?___ftmul+2,?_fround+2
  8919  00366E  0012               	return	
  8920  003670                     __end_of_fround:
  8921                           	opt stack 0
  8922                           tblptru	equ	0xFF8
  8923                           tblptrh	equ	0xFF7
  8924                           tblptrl	equ	0xFF6
  8925                           tablat	equ	0xFF5
  8926                           prodh	equ	0xFF4
  8927                           prodl	equ	0xFF3
  8928                           intcon	equ	0xFF2
  8929                           intcon3	equ	0xFF0
  8930                           postinc0	equ	0xFEE
  8931                           wreg	equ	0xFE8
  8932                           indf2	equ	0xFDF
  8933                           postinc2	equ	0xFDE
  8934                           postdec2	equ	0xFDD
  8935                           fsr2h	equ	0xFDA
  8936                           fsr2l	equ	0xFD9
  8937                           status	equ	0xFD8
  8938                           
  8939 ;; *************** function ___wmul *****************
  8940 ;; Defined at:
  8941 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  multiplier      2    0[BANK1 ] unsigned int 
  8944 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;  product         2   69[BANK0 ] unsigned int 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  2    0[BANK1 ] unsigned int 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0, prodl, prodh
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8956 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;Total ram usage:        6 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    5
  8963 ;; This function calls:
  8964 ;;		Nothing
  8965 ;; This function is called by:
  8966 ;;		_fround
  8967 ;;		_scale
  8968 ;;		_printf
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text22
  8973  005BAE                     __ptext22:
  8974                           	opt stack 0
  8975  005BAE                     ___wmul:
  8976                           	opt stack 22
  8977                           
  8978                           ;incstack = 0
  8979  005BAE  0101               	movlb	1	; () banked
  8980  005BB0  5100               	movf	___wmul@multiplier& (0+255),w,b
  8981  005BB2  0101               	movlb	1	; () banked
  8982  005BB4  0302               	mulwf	___wmul@multiplicand& (0+255),b
  8983  005BB6  CFF3 F0C5          	movff	prodl,___wmul@product
  8984  005BBA  CFF4 F0C6          	movff	prodh,___wmul@product+1
  8985  005BBE  0101               	movlb	1	; () banked
  8986  005BC0  5100               	movf	___wmul@multiplier& (0+255),w,b
  8987  005BC2  0101               	movlb	1	; () banked
  8988  005BC4  0303               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8989  005BC6  50F3               	movf	prodl,w,c
  8990  005BC8  0100               	movlb	0	; () banked
  8991  005BCA  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
  8992  005BCC  0101               	movlb	1	; () banked
  8993  005BCE  5101               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8994  005BD0  0101               	movlb	1	; () banked
  8995  005BD2  0302               	mulwf	___wmul@multiplicand& (0+255),b
  8996  005BD4  50F3               	movf	prodl,w,c
  8997  005BD6  0100               	movlb	0	; () banked
  8998  005BD8  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
  8999                           
  9000                           ; BSR set to: 0
  9001  005BDA  C0C5  F100         	movff	___wmul@product,?___wmul
  9002  005BDE  C0C6  F101         	movff	___wmul@product+1,?___wmul+1
  9003  005BE2  0012               	return	
  9004  005BE4                     __end_of___wmul:
  9005                           	opt stack 0
  9006                           tblptru	equ	0xFF8
  9007                           tblptrh	equ	0xFF7
  9008                           tblptrl	equ	0xFF6
  9009                           tablat	equ	0xFF5
  9010                           prodh	equ	0xFF4
  9011                           prodl	equ	0xFF3
  9012                           intcon	equ	0xFF2
  9013                           intcon3	equ	0xFF0
  9014                           postinc0	equ	0xFEE
  9015                           wreg	equ	0xFE8
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function ___ftmul *****************
  9024 ;; Defined at:
  9025 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  f1              3    4[BANK1 ] float 
  9028 ;;  f2              3    7[BANK1 ] float 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;  f3_as_produc    3   14[BANK1 ] unsigned um
  9031 ;;  sign            1   18[BANK1 ] unsigned char 
  9032 ;;  cntr            1   17[BANK1 ] unsigned char 
  9033 ;;  exp             1   13[BANK1 ] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  3    4[BANK1 ] float 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9043 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:       15 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    6
  9050 ;; This function calls:
  9051 ;;		___ftpack
  9052 ;; This function is called by:
  9053 ;;		_sort
  9054 ;;		_fround
  9055 ;;		_scale
  9056 ;;		_printf
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text23
  9061  003FF0                     __ptext23:
  9062                           	opt stack 0
  9063  003FF0                     ___ftmul:
  9064                           	opt stack 21
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;incstack = 0
  9068  003FF0  C106  F10A         	movff	___ftmul@f1+2,??___ftmul
  9069  003FF4  0101               	movlb	1	; () banked
  9070  003FF6  6B0B               	clrf	(??___ftmul+1)& (0+255),b
  9071  003FF8  6B0C               	clrf	(??___ftmul+2)& (0+255),b
  9072  003FFA  0101               	movlb	1	; () banked
  9073  003FFC  3505               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  9074  003FFE  0101               	movlb	1	; () banked
  9075  004000  370A               	rlcf	??___ftmul& (0+255),f,b
  9076  004002  E301               	bnc	u9591
  9077  004004  810B               	bsf	(??___ftmul+1)& (0+255),0,b
  9078  004006                     u9591:
  9079  004006  0101               	movlb	1	; () banked
  9080  004008  510A               	movf	??___ftmul& (0+255),w,b
  9081  00400A  0101               	movlb	1	; () banked
  9082  00400C  6F0D               	movwf	___ftmul@exp& (0+255),b
  9083  00400E  0101               	movlb	1	; () banked
  9084  004010  510D               	movf	___ftmul@exp& (0+255),w,b
  9085  004012  A4D8               	btfss	status,2,c
  9086  004014  D00A               	goto	l7282
  9087                           
  9088                           ; BSR set to: 1
  9089  004016  0E00               	movlw	0
  9090  004018  0101               	movlb	1	; () banked
  9091  00401A  6F04               	movwf	?___ftmul& (0+255),b
  9092  00401C  0E00               	movlw	0
  9093  00401E  0101               	movlb	1	; () banked
  9094  004020  6F05               	movwf	(?___ftmul+1)& (0+255),b
  9095  004022  0E00               	movlw	0
  9096  004024  0101               	movlb	1	; () banked
  9097  004026  6F06               	movwf	(?___ftmul+2)& (0+255),b
  9098                           
  9099                           ; BSR set to: 1
  9100  004028  0012               	return	
  9101  00402A                     l7282:
  9102                           
  9103                           ; BSR set to: 1
  9104  00402A  C109  F10A         	movff	___ftmul@f2+2,??___ftmul
  9105  00402E  0101               	movlb	1	; () banked
  9106  004030  6B0B               	clrf	(??___ftmul+1)& (0+255),b
  9107  004032  6B0C               	clrf	(??___ftmul+2)& (0+255),b
  9108  004034  0101               	movlb	1	; () banked
  9109  004036  3508               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  9110  004038  0101               	movlb	1	; () banked
  9111  00403A  370A               	rlcf	??___ftmul& (0+255),f,b
  9112  00403C  E301               	bnc	u9611
  9113  00403E  810B               	bsf	(??___ftmul+1)& (0+255),0,b
  9114  004040                     u9611:
  9115  004040  0101               	movlb	1	; () banked
  9116  004042  510A               	movf	??___ftmul& (0+255),w,b
  9117  004044  0101               	movlb	1	; () banked
  9118  004046  6F12               	movwf	___ftmul@sign& (0+255),b
  9119  004048  0101               	movlb	1	; () banked
  9120  00404A  5112               	movf	___ftmul@sign& (0+255),w,b
  9121  00404C  A4D8               	btfss	status,2,c
  9122  00404E  D00A               	goto	l7288
  9123                           
  9124                           ; BSR set to: 1
  9125  004050  0E00               	movlw	0
  9126  004052  0101               	movlb	1	; () banked
  9127  004054  6F04               	movwf	?___ftmul& (0+255),b
  9128  004056  0E00               	movlw	0
  9129  004058  0101               	movlb	1	; () banked
  9130  00405A  6F05               	movwf	(?___ftmul+1)& (0+255),b
  9131  00405C  0E00               	movlw	0
  9132  00405E  0101               	movlb	1	; () banked
  9133  004060  6F06               	movwf	(?___ftmul+2)& (0+255),b
  9134                           
  9135                           ; BSR set to: 1
  9136  004062  0012               	return	
  9137  004064                     l7288:
  9138                           
  9139                           ; BSR set to: 1
  9140  004064  0101               	movlb	1	; () banked
  9141  004066  5112               	movf	___ftmul@sign& (0+255),w,b
  9142  004068  0F7B               	addlw	123
  9143  00406A  0101               	movlb	1	; () banked
  9144  00406C  270D               	addwf	___ftmul@exp& (0+255),f,b
  9145                           
  9146                           ; BSR set to: 1
  9147  00406E  C106  F112         	movff	___ftmul@f1+2,___ftmul@sign
  9148  004072  0101               	movlb	1	; () banked
  9149  004074  5109               	movf	(___ftmul@f2+2)& (0+255),w,b
  9150  004076  0101               	movlb	1	; () banked
  9151  004078  1B12               	xorwf	___ftmul@sign& (0+255),f,b
  9152  00407A  0E80               	movlw	128
  9153  00407C  0101               	movlb	1	; () banked
  9154  00407E  1712               	andwf	___ftmul@sign& (0+255),f,b
  9155                           
  9156                           ; BSR set to: 1
  9157  004080  0101               	movlb	1	; () banked
  9158  004082  8F05               	bsf	(___ftmul@f1+1)& (0+255),7,b
  9159                           
  9160                           ; BSR set to: 1
  9161  004084  0101               	movlb	1	; () banked
  9162  004086  8F08               	bsf	(___ftmul@f2+1)& (0+255),7,b
  9163                           
  9164                           ; BSR set to: 1
  9165  004088  0EFF               	movlw	255
  9166  00408A  0101               	movlb	1	; () banked
  9167  00408C  1707               	andwf	___ftmul@f2& (0+255),f,b
  9168  00408E  0EFF               	movlw	255
  9169  004090  0101               	movlb	1	; () banked
  9170  004092  1708               	andwf	(___ftmul@f2+1)& (0+255),f,b
  9171  004094  0E00               	movlw	0
  9172  004096  0101               	movlb	1	; () banked
  9173  004098  1709               	andwf	(___ftmul@f2+2)& (0+255),f,b
  9174                           
  9175                           ; BSR set to: 1
  9176  00409A  0E00               	movlw	0
  9177  00409C  0101               	movlb	1	; () banked
  9178  00409E  6F0E               	movwf	___ftmul@f3_as_product& (0+255),b
  9179  0040A0  0E00               	movlw	0
  9180  0040A2  0101               	movlb	1	; () banked
  9181  0040A4  6F0F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  9182  0040A6  0E00               	movlw	0
  9183  0040A8  0101               	movlb	1	; () banked
  9184  0040AA  6F10               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  9185                           
  9186                           ; BSR set to: 1
  9187  0040AC  0E07               	movlw	7
  9188  0040AE  0101               	movlb	1	; () banked
  9189  0040B0  6F11               	movwf	___ftmul@cntr& (0+255),b
  9190  0040B2                     l7302:
  9191                           
  9192                           ; BSR set to: 1
  9193  0040B2  0101               	movlb	1	; () banked
  9194  0040B4  A104               	btfss	___ftmul@f1& (0+255),0,b
  9195  0040B6  D00C               	goto	l7306
  9196                           
  9197                           ; BSR set to: 1
  9198  0040B8  0101               	movlb	1	; () banked
  9199  0040BA  5107               	movf	___ftmul@f2& (0+255),w,b
  9200  0040BC  0101               	movlb	1	; () banked
  9201  0040BE  270E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9202  0040C0  0101               	movlb	1	; () banked
  9203  0040C2  5108               	movf	(___ftmul@f2+1)& (0+255),w,b
  9204  0040C4  0101               	movlb	1	; () banked
  9205  0040C6  230F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9206  0040C8  0101               	movlb	1	; () banked
  9207  0040CA  5109               	movf	(___ftmul@f2+2)& (0+255),w,b
  9208  0040CC  0101               	movlb	1	; () banked
  9209  0040CE  2310               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9210  0040D0                     l7306:
  9211                           
  9212                           ; BSR set to: 1
  9213  0040D0  0101               	movlb	1	; () banked
  9214  0040D2  90D8               	bcf	status,0,c
  9215  0040D4  3306               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9216  0040D6  3305               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9217  0040D8  3304               	rrcf	___ftmul@f1& (0+255),f,b
  9218  0040DA  0101               	movlb	1	; () banked
  9219  0040DC  90D8               	bcf	status,0,c
  9220  0040DE  3707               	rlcf	___ftmul@f2& (0+255),f,b
  9221  0040E0  3708               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9222  0040E2  3709               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9223                           
  9224                           ; BSR set to: 1
  9225  0040E4  0101               	movlb	1	; () banked
  9226  0040E6  2F11               	decfsz	___ftmul@cntr& (0+255),f,b
  9227  0040E8  D7E4               	goto	l7302
  9228                           
  9229                           ; BSR set to: 1
  9230                           
  9231                           ; BSR set to: 1
  9232  0040EA  0E09               	movlw	9
  9233  0040EC  0101               	movlb	1	; () banked
  9234  0040EE  6F11               	movwf	___ftmul@cntr& (0+255),b
  9235  0040F0                     l7312:
  9236                           
  9237                           ; BSR set to: 1
  9238  0040F0  0101               	movlb	1	; () banked
  9239  0040F2  A104               	btfss	___ftmul@f1& (0+255),0,b
  9240  0040F4  D00C               	goto	l7316
  9241                           
  9242                           ; BSR set to: 1
  9243  0040F6  0101               	movlb	1	; () banked
  9244  0040F8  5107               	movf	___ftmul@f2& (0+255),w,b
  9245  0040FA  0101               	movlb	1	; () banked
  9246  0040FC  270E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9247  0040FE  0101               	movlb	1	; () banked
  9248  004100  5108               	movf	(___ftmul@f2+1)& (0+255),w,b
  9249  004102  0101               	movlb	1	; () banked
  9250  004104  230F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9251  004106  0101               	movlb	1	; () banked
  9252  004108  5109               	movf	(___ftmul@f2+2)& (0+255),w,b
  9253  00410A  0101               	movlb	1	; () banked
  9254  00410C  2310               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9255  00410E                     l7316:
  9256                           
  9257                           ; BSR set to: 1
  9258  00410E  0101               	movlb	1	; () banked
  9259  004110  90D8               	bcf	status,0,c
  9260  004112  3306               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9261  004114  3305               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9262  004116  3304               	rrcf	___ftmul@f1& (0+255),f,b
  9263  004118  0101               	movlb	1	; () banked
  9264  00411A  90D8               	bcf	status,0,c
  9265  00411C  3310               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9266  00411E  330F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9267  004120  330E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9268                           
  9269                           ; BSR set to: 1
  9270  004122  0101               	movlb	1	; () banked
  9271  004124  2F11               	decfsz	___ftmul@cntr& (0+255),f,b
  9272  004126  D7E4               	goto	l7312
  9273                           
  9274                           ; BSR set to: 1
  9275                           
  9276                           ; BSR set to: 1
  9277  004128  C10E  F0B7         	movff	___ftmul@f3_as_product,___ftpack@arg
  9278  00412C  C10F  F0B8         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9279  004130  C110  F0B9         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9280  004134  C10D  F0BA         	movff	___ftmul@exp,___ftpack@exp
  9281  004138  C112  F0BB         	movff	___ftmul@sign,___ftpack@sign
  9282  00413C  ECBA  F023         	call	___ftpack	;wreg free
  9283  004140  C0B7  F104         	movff	?___ftpack,?___ftmul
  9284  004144  C0B8  F105         	movff	?___ftpack+1,?___ftmul+1
  9285  004148  C0B9  F106         	movff	?___ftpack+2,?___ftmul+2
  9286  00414C  0012               	return	
  9287  00414E                     __end_of___ftmul:
  9288                           	opt stack 0
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           intcon	equ	0xFF2
  9296                           intcon3	equ	0xFF0
  9297                           postinc0	equ	0xFEE
  9298                           wreg	equ	0xFE8
  9299                           indf2	equ	0xFDF
  9300                           postinc2	equ	0xFDE
  9301                           postdec2	equ	0xFDD
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function ___awmod *****************
  9307 ;; Defined at:
  9308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  dividend        2   55[BANK0 ] int 
  9311 ;;  divisor         2   57[BANK0 ] int 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;  sign            1   60[BANK0 ] unsigned char 
  9314 ;;  counter         1   59[BANK0 ] unsigned char 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  2   55[BANK0 ] int 
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9324 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;Total ram usage:        6 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    5
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_fround
  9335 ;;		_scale
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           	psect	text24
  9340  0051C0                     __ptext24:
  9341                           	opt stack 0
  9342  0051C0                     ___awmod:
  9343                           	opt stack 22
  9344                           
  9345                           ;incstack = 0
  9346  0051C0  0E00               	movlw	0
  9347  0051C2  0100               	movlb	0	; () banked
  9348  0051C4  6FBC               	movwf	___awmod@sign& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351  0051C6  0100               	movlb	0	; () banked
  9352  0051C8  AFB8               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9353  0051CA  D008               	goto	l4502
  9354                           
  9355                           ; BSR set to: 0
  9356  0051CC  0100               	movlb	0	; () banked
  9357  0051CE  6DB7               	negf	___awmod@dividend& (0+255),b
  9358  0051D0  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  9359  0051D2  B0D8               	btfsc	status,0,c
  9360  0051D4  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  9361                           
  9362                           ; BSR set to: 0
  9363  0051D6  0E01               	movlw	1
  9364  0051D8  0100               	movlb	0	; () banked
  9365  0051DA  6FBC               	movwf	___awmod@sign& (0+255),b
  9366  0051DC                     l4502:
  9367                           
  9368                           ; BSR set to: 0
  9369  0051DC  0100               	movlb	0	; () banked
  9370  0051DE  AFBA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9371  0051E0  D005               	goto	l4506
  9372                           
  9373                           ; BSR set to: 0
  9374  0051E2  0100               	movlb	0	; () banked
  9375  0051E4  6DB9               	negf	___awmod@divisor& (0+255),b
  9376  0051E6  1FBA               	comf	(___awmod@divisor+1)& (0+255),f,b
  9377  0051E8  B0D8               	btfsc	status,0,c
  9378  0051EA  2BBA               	incf	(___awmod@divisor+1)& (0+255),f,b
  9379  0051EC                     l4506:
  9380                           
  9381                           ; BSR set to: 0
  9382  0051EC  0100               	movlb	0	; () banked
  9383  0051EE  51B9               	movf	___awmod@divisor& (0+255),w,b
  9384  0051F0  0100               	movlb	0	; () banked
  9385  0051F2  11BA               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9386  0051F4  B4D8               	btfsc	status,2,c
  9387  0051F6  D026               	goto	l4522
  9388                           
  9389                           ; BSR set to: 0
  9390  0051F8  0E01               	movlw	1
  9391  0051FA  0100               	movlb	0	; () banked
  9392  0051FC  6FBB               	movwf	___awmod@counter& (0+255),b
  9393  0051FE  D006               	goto	l4512
  9394  005200                     l4510:
  9395                           
  9396                           ; BSR set to: 0
  9397  005200  0100               	movlb	0	; () banked
  9398  005202  90D8               	bcf	status,0,c
  9399  005204  37B9               	rlcf	___awmod@divisor& (0+255),f,b
  9400  005206  37BA               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9401  005208  0100               	movlb	0	; () banked
  9402  00520A  2BBB               	incf	___awmod@counter& (0+255),f,b
  9403  00520C                     l4512:
  9404                           
  9405                           ; BSR set to: 0
  9406  00520C  0100               	movlb	0	; () banked
  9407  00520E  AFBA               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9408  005210  D7F7               	goto	l4510
  9409  005212                     l4514:
  9410                           
  9411                           ; BSR set to: 0
  9412  005212  0100               	movlb	0	; () banked
  9413  005214  51B9               	movf	___awmod@divisor& (0+255),w,b
  9414  005216  0100               	movlb	0	; () banked
  9415  005218  5DB7               	subwf	___awmod@dividend& (0+255),w,b
  9416  00521A  0100               	movlb	0	; () banked
  9417  00521C  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  9418  00521E  0100               	movlb	0	; () banked
  9419  005220  59B8               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9420  005222  A0D8               	btfss	status,0,c
  9421  005224  D008               	goto	l4518
  9422                           
  9423                           ; BSR set to: 0
  9424  005226  0100               	movlb	0	; () banked
  9425  005228  51B9               	movf	___awmod@divisor& (0+255),w,b
  9426  00522A  0100               	movlb	0	; () banked
  9427  00522C  5FB7               	subwf	___awmod@dividend& (0+255),f,b
  9428  00522E  0100               	movlb	0	; () banked
  9429  005230  51BA               	movf	(___awmod@divisor+1)& (0+255),w,b
  9430  005232  0100               	movlb	0	; () banked
  9431  005234  5BB8               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9432  005236                     l4518:
  9433                           
  9434                           ; BSR set to: 0
  9435  005236  0100               	movlb	0	; () banked
  9436  005238  90D8               	bcf	status,0,c
  9437  00523A  33BA               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9438  00523C  33B9               	rrcf	___awmod@divisor& (0+255),f,b
  9439                           
  9440                           ; BSR set to: 0
  9441  00523E  0100               	movlb	0	; () banked
  9442  005240  2FBB               	decfsz	___awmod@counter& (0+255),f,b
  9443  005242  D7E7               	goto	l4514
  9444  005244                     l4522:
  9445                           
  9446                           ; BSR set to: 0
  9447  005244  0100               	movlb	0	; () banked
  9448  005246  51BC               	movf	___awmod@sign& (0+255),w,b
  9449  005248  0100               	movlb	0	; () banked
  9450  00524A  B4D8               	btfsc	status,2,c
  9451  00524C  D005               	goto	l4526
  9452                           
  9453                           ; BSR set to: 0
  9454  00524E  0100               	movlb	0	; () banked
  9455  005250  6DB7               	negf	___awmod@dividend& (0+255),b
  9456  005252  1FB8               	comf	(___awmod@dividend+1)& (0+255),f,b
  9457  005254  B0D8               	btfsc	status,0,c
  9458  005256  2BB8               	incf	(___awmod@dividend+1)& (0+255),f,b
  9459  005258                     l4526:
  9460                           
  9461                           ; BSR set to: 0
  9462  005258  C0B7  F0B7         	movff	___awmod@dividend,?___awmod
  9463  00525C  C0B8  F0B8         	movff	___awmod@dividend+1,?___awmod+1
  9464  005260  0012               	return	
  9465  005262                     __end_of___awmod:
  9466                           	opt stack 0
  9467                           tblptru	equ	0xFF8
  9468                           tblptrh	equ	0xFF7
  9469                           tblptrl	equ	0xFF6
  9470                           tablat	equ	0xFF5
  9471                           prodh	equ	0xFF4
  9472                           prodl	equ	0xFF3
  9473                           intcon	equ	0xFF2
  9474                           intcon3	equ	0xFF0
  9475                           postinc0	equ	0xFEE
  9476                           wreg	equ	0xFE8
  9477                           indf2	equ	0xFDF
  9478                           postinc2	equ	0xFDE
  9479                           postdec2	equ	0xFDD
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8
  9483                           
  9484 ;; *************** function ___awdiv *****************
  9485 ;; Defined at:
  9486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  dividend        2   61[BANK0 ] int 
  9489 ;;  divisor         2   63[BANK0 ] int 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  quotient        2   67[BANK0 ] int 
  9492 ;;  sign            1   66[BANK0 ] unsigned char 
  9493 ;;  counter         1   65[BANK0 ] unsigned char 
  9494 ;; Return value:  Size  Location     Type
  9495 ;;                  2   61[BANK0 ] int 
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;Total ram usage:        8 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    5
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_sort
  9514 ;;		_fround
  9515 ;;		_scale
  9516 ;;		_printf
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text25
  9521  004F98                     __ptext25:
  9522                           	opt stack 0
  9523  004F98                     ___awdiv:
  9524                           	opt stack 22
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;incstack = 0
  9528  004F98  0E00               	movlw	0
  9529  004F9A  0100               	movlb	0	; () banked
  9530  004F9C  6FC2               	movwf	___awdiv@sign& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533  004F9E  0100               	movlb	0	; () banked
  9534  004FA0  AFC0               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9535  004FA2  D008               	goto	l4458
  9536                           
  9537                           ; BSR set to: 0
  9538  004FA4  0100               	movlb	0	; () banked
  9539  004FA6  6DBF               	negf	___awdiv@divisor& (0+255),b
  9540  004FA8  1FC0               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9541  004FAA  B0D8               	btfsc	status,0,c
  9542  004FAC  2BC0               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9543                           
  9544                           ; BSR set to: 0
  9545  004FAE  0E01               	movlw	1
  9546  004FB0  0100               	movlb	0	; () banked
  9547  004FB2  6FC2               	movwf	___awdiv@sign& (0+255),b
  9548  004FB4                     l4458:
  9549                           
  9550                           ; BSR set to: 0
  9551  004FB4  0100               	movlb	0	; () banked
  9552  004FB6  AFBE               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9553  004FB8  D008               	goto	l4464
  9554                           
  9555                           ; BSR set to: 0
  9556  004FBA  0100               	movlb	0	; () banked
  9557  004FBC  6DBD               	negf	___awdiv@dividend& (0+255),b
  9558  004FBE  1FBE               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9559  004FC0  B0D8               	btfsc	status,0,c
  9560  004FC2  2BBE               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  004FC4  0E01               	movlw	1
  9564  004FC6  0100               	movlb	0	; () banked
  9565  004FC8  1BC2               	xorwf	___awdiv@sign& (0+255),f,b
  9566  004FCA                     l4464:
  9567                           
  9568                           ; BSR set to: 0
  9569  004FCA  0E00               	movlw	0
  9570  004FCC  0100               	movlb	0	; () banked
  9571  004FCE  6FC4               	movwf	(___awdiv@quotient+1)& (0+255),b
  9572  004FD0  0E00               	movlw	0
  9573  004FD2  6FC3               	movwf	___awdiv@quotient& (0+255),b
  9574                           
  9575                           ; BSR set to: 0
  9576  004FD4  0100               	movlb	0	; () banked
  9577  004FD6  51BF               	movf	___awdiv@divisor& (0+255),w,b
  9578  004FD8  0100               	movlb	0	; () banked
  9579  004FDA  11C0               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9580  004FDC  B4D8               	btfsc	status,2,c
  9581  004FDE  D02C               	goto	l4486
  9582                           
  9583                           ; BSR set to: 0
  9584  004FE0  0E01               	movlw	1
  9585  004FE2  0100               	movlb	0	; () banked
  9586  004FE4  6FC1               	movwf	___awdiv@counter& (0+255),b
  9587  004FE6  D006               	goto	l4472
  9588  004FE8                     l4470:
  9589                           
  9590                           ; BSR set to: 0
  9591  004FE8  0100               	movlb	0	; () banked
  9592  004FEA  90D8               	bcf	status,0,c
  9593  004FEC  37BF               	rlcf	___awdiv@divisor& (0+255),f,b
  9594  004FEE  37C0               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9595  004FF0  0100               	movlb	0	; () banked
  9596  004FF2  2BC1               	incf	___awdiv@counter& (0+255),f,b
  9597  004FF4                     l4472:
  9598                           
  9599                           ; BSR set to: 0
  9600  004FF4  0100               	movlb	0	; () banked
  9601  004FF6  AFC0               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9602  004FF8  D7F7               	goto	l4470
  9603  004FFA                     l4474:
  9604                           
  9605                           ; BSR set to: 0
  9606  004FFA  0100               	movlb	0	; () banked
  9607  004FFC  90D8               	bcf	status,0,c
  9608  004FFE  37C3               	rlcf	___awdiv@quotient& (0+255),f,b
  9609  005000  37C4               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9610                           
  9611                           ; BSR set to: 0
  9612  005002  0100               	movlb	0	; () banked
  9613  005004  51BF               	movf	___awdiv@divisor& (0+255),w,b
  9614  005006  0100               	movlb	0	; () banked
  9615  005008  5DBD               	subwf	___awdiv@dividend& (0+255),w,b
  9616  00500A  0100               	movlb	0	; () banked
  9617  00500C  51C0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9618  00500E  0100               	movlb	0	; () banked
  9619  005010  59BE               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9620  005012  A0D8               	btfss	status,0,c
  9621  005014  D00A               	goto	l4482
  9622                           
  9623                           ; BSR set to: 0
  9624  005016  0100               	movlb	0	; () banked
  9625  005018  51BF               	movf	___awdiv@divisor& (0+255),w,b
  9626  00501A  0100               	movlb	0	; () banked
  9627  00501C  5FBD               	subwf	___awdiv@dividend& (0+255),f,b
  9628  00501E  0100               	movlb	0	; () banked
  9629  005020  51C0               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9630  005022  0100               	movlb	0	; () banked
  9631  005024  5BBE               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9632                           
  9633                           ; BSR set to: 0
  9634  005026  0100               	movlb	0	; () banked
  9635  005028  81C3               	bsf	___awdiv@quotient& (0+255),0,b
  9636  00502A                     l4482:
  9637                           
  9638                           ; BSR set to: 0
  9639  00502A  0100               	movlb	0	; () banked
  9640  00502C  90D8               	bcf	status,0,c
  9641  00502E  33C0               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9642  005030  33BF               	rrcf	___awdiv@divisor& (0+255),f,b
  9643                           
  9644                           ; BSR set to: 0
  9645  005032  0100               	movlb	0	; () banked
  9646  005034  2FC1               	decfsz	___awdiv@counter& (0+255),f,b
  9647  005036  D7E1               	goto	l4474
  9648  005038                     l4486:
  9649                           
  9650                           ; BSR set to: 0
  9651  005038  0100               	movlb	0	; () banked
  9652  00503A  51C2               	movf	___awdiv@sign& (0+255),w,b
  9653  00503C  0100               	movlb	0	; () banked
  9654  00503E  B4D8               	btfsc	status,2,c
  9655  005040  D005               	goto	l4490
  9656                           
  9657                           ; BSR set to: 0
  9658  005042  0100               	movlb	0	; () banked
  9659  005044  6DC3               	negf	___awdiv@quotient& (0+255),b
  9660  005046  1FC4               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9661  005048  B0D8               	btfsc	status,0,c
  9662  00504A  2BC4               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9663  00504C                     l4490:
  9664                           
  9665                           ; BSR set to: 0
  9666  00504C  C0C3  F0BD         	movff	___awdiv@quotient,?___awdiv
  9667  005050  C0C4  F0BE         	movff	___awdiv@quotient+1,?___awdiv+1
  9668  005054  0012               	return	
  9669  005056                     __end_of___awdiv:
  9670                           	opt stack 0
  9671                           tblptru	equ	0xFF8
  9672                           tblptrh	equ	0xFF7
  9673                           tblptrl	equ	0xFF6
  9674                           tablat	equ	0xFF5
  9675                           prodh	equ	0xFF4
  9676                           prodl	equ	0xFF3
  9677                           intcon	equ	0xFF2
  9678                           intcon3	equ	0xFF0
  9679                           postinc0	equ	0xFEE
  9680                           wreg	equ	0xFE8
  9681                           indf2	equ	0xFDF
  9682                           postinc2	equ	0xFDE
  9683                           postdec2	equ	0xFDD
  9684                           fsr2h	equ	0xFDA
  9685                           fsr2l	equ	0xFD9
  9686                           status	equ	0xFD8
  9687                           
  9688 ;; *************** function __tdiv_to_l_ *****************
  9689 ;; Defined at:
  9690 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  f1              3   55[BANK0 ] float 
  9693 ;;  f2              3   58[BANK0 ] float 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  quot            4   64[BANK0 ] unsigned long 
  9696 ;;  exp1            1   69[BANK0 ] unsigned char 
  9697 ;;  cntr            1   68[BANK0 ] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  4   55[BANK0 ] unsigned long 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 0/0
  9704 ;;		On exit  : 0/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9707 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;Total ram usage:       15 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    5
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_printf
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           	psect	text26
  9722  003CCA                     __ptext26:
  9723                           	opt stack 0
  9724  003CCA                     __tdiv_to_l_:
  9725                           	opt stack 23
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;incstack = 0
  9729  003CCA  C0B9  F0BD         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9730  003CCE  0100               	movlb	0	; () banked
  9731  003CD0  6BBE               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9732  003CD2  6BBF               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9733  003CD4  0100               	movlb	0	; () banked
  9734  003CD6  35B8               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9735  003CD8  0100               	movlb	0	; () banked
  9736  003CDA  37BD               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9737  003CDC  E301               	bnc	u5221
  9738  003CDE  81BE               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9739  003CE0                     u5221:
  9740  003CE0  0100               	movlb	0	; () banked
  9741  003CE2  51BD               	movf	??__tdiv_to_l_& (0+255),w,b
  9742  003CE4  0100               	movlb	0	; () banked
  9743  003CE6  6FC5               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9744  003CE8  0100               	movlb	0	; () banked
  9745  003CEA  51C5               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9746  003CEC  A4D8               	btfss	status,2,c
  9747  003CEE  D00A               	goto	l4612
  9748                           
  9749                           ; BSR set to: 0
  9750  003CF0  0E00               	movlw	0
  9751  003CF2  0100               	movlb	0	; () banked
  9752  003CF4  6FB7               	movwf	?__tdiv_to_l_& (0+255),b
  9753  003CF6  0E00               	movlw	0
  9754  003CF8  6FB8               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9755  003CFA  0E00               	movlw	0
  9756  003CFC  6FB9               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9757  003CFE  0E00               	movlw	0
  9758  003D00  6FBA               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9759                           
  9760                           ; BSR set to: 0
  9761  003D02  0012               	return	
  9762  003D04                     l4612:
  9763                           
  9764                           ; BSR set to: 0
  9765  003D04  C0BC  F0BD         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9766  003D08  0100               	movlb	0	; () banked
  9767  003D0A  6BBE               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9768  003D0C  6BBF               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9769  003D0E  0100               	movlb	0	; () banked
  9770  003D10  35BB               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9771  003D12  0100               	movlb	0	; () banked
  9772  003D14  37BD               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9773  003D16  E301               	bnc	u5241
  9774  003D18  81BE               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9775  003D1A                     u5241:
  9776  003D1A  0100               	movlb	0	; () banked
  9777  003D1C  51BD               	movf	??__tdiv_to_l_& (0+255),w,b
  9778  003D1E  0100               	movlb	0	; () banked
  9779  003D20  6FC4               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9780  003D22  0100               	movlb	0	; () banked
  9781  003D24  51C4               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9782  003D26  A4D8               	btfss	status,2,c
  9783  003D28  D00A               	goto	l4618
  9784                           
  9785                           ; BSR set to: 0
  9786  003D2A  0E00               	movlw	0
  9787  003D2C  0100               	movlb	0	; () banked
  9788  003D2E  6FB7               	movwf	?__tdiv_to_l_& (0+255),b
  9789  003D30  0E00               	movlw	0
  9790  003D32  6FB8               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9791  003D34  0E00               	movlw	0
  9792  003D36  6FB9               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9793  003D38  0E00               	movlw	0
  9794  003D3A  6FBA               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9795                           
  9796                           ; BSR set to: 0
  9797  003D3C  0012               	return	
  9798  003D3E                     l4618:
  9799                           
  9800                           ; BSR set to: 0
  9801  003D3E  0100               	movlb	0	; () banked
  9802  003D40  8FB8               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9803                           
  9804                           ; BSR set to: 0
  9805  003D42  0EFF               	movlw	255
  9806  003D44  0100               	movlb	0	; () banked
  9807  003D46  17B7               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9808  003D48  0EFF               	movlw	255
  9809  003D4A  0100               	movlb	0	; () banked
  9810  003D4C  17B8               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9811  003D4E  0E00               	movlw	0
  9812  003D50  0100               	movlb	0	; () banked
  9813  003D52  17B9               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9814  003D54  0100               	movlb	0	; () banked
  9815  003D56  8FBB               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9816                           
  9817                           ; BSR set to: 0
  9818  003D58  0EFF               	movlw	255
  9819  003D5A  0100               	movlb	0	; () banked
  9820  003D5C  17BA               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9821  003D5E  0EFF               	movlw	255
  9822  003D60  0100               	movlb	0	; () banked
  9823  003D62  17BB               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9824  003D64  0E00               	movlw	0
  9825  003D66  0100               	movlb	0	; () banked
  9826  003D68  17BC               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829  003D6A  0E00               	movlw	0
  9830  003D6C  0100               	movlb	0	; () banked
  9831  003D6E  6FC0               	movwf	__tdiv_to_l_@quot& (0+255),b
  9832  003D70  0E00               	movlw	0
  9833  003D72  6FC1               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9834  003D74  0E00               	movlw	0
  9835  003D76  6FC2               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9836  003D78  0E00               	movlw	0
  9837  003D7A  6FC3               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9838                           
  9839                           ; BSR set to: 0
  9840  003D7C  0E7F               	movlw	127
  9841  003D7E  0100               	movlb	0	; () banked
  9842  003D80  5FC5               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9843                           
  9844                           ; BSR set to: 0
  9845  003D82  0100               	movlb	0	; () banked
  9846  003D84  51C4               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9847  003D86  0F98               	addlw	152
  9848  003D88  0100               	movlb	0	; () banked
  9849  003D8A  5FC5               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9850                           
  9851                           ; BSR set to: 0
  9852  003D8C  0E18               	movlw	24
  9853  003D8E  0100               	movlb	0	; () banked
  9854  003D90  6FC4               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9855  003D92                     l984:
  9856                           
  9857                           ; BSR set to: 0
  9858  003D92  0100               	movlb	0	; () banked
  9859  003D94  90D8               	bcf	status,0,c
  9860  003D96  37C0               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9861  003D98  37C1               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9862  003D9A  37C2               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9863  003D9C  37C3               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9864                           
  9865                           ; BSR set to: 0
  9866  003D9E  0100               	movlb	0	; () banked
  9867  003DA0  51BA               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9868  003DA2  0100               	movlb	0	; () banked
  9869  003DA4  5DB7               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9870  003DA6  0100               	movlb	0	; () banked
  9871  003DA8  51BB               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9872  003DAA  0100               	movlb	0	; () banked
  9873  003DAC  59B8               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9874  003DAE  0100               	movlb	0	; () banked
  9875  003DB0  51BC               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9876  003DB2  0100               	movlb	0	; () banked
  9877  003DB4  59B9               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9878  003DB6  A0D8               	btfss	status,0,c
  9879  003DB8  D00E               	goto	l985
  9880                           
  9881                           ; BSR set to: 0
  9882  003DBA  0100               	movlb	0	; () banked
  9883  003DBC  51BA               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9884  003DBE  0100               	movlb	0	; () banked
  9885  003DC0  5FB7               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9886  003DC2  0100               	movlb	0	; () banked
  9887  003DC4  51BB               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9888  003DC6  0100               	movlb	0	; () banked
  9889  003DC8  5BB8               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9890  003DCA  0100               	movlb	0	; () banked
  9891  003DCC  51BC               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9892  003DCE  0100               	movlb	0	; () banked
  9893  003DD0  5BB9               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9894                           
  9895                           ; BSR set to: 0
  9896  003DD2  0100               	movlb	0	; () banked
  9897  003DD4  81C0               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9898  003DD6                     l985:
  9899                           
  9900                           ; BSR set to: 0
  9901  003DD6  0100               	movlb	0	; () banked
  9902  003DD8  90D8               	bcf	status,0,c
  9903  003DDA  37B7               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9904  003DDC  37B8               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9905  003DDE  37B9               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9906                           
  9907                           ; BSR set to: 0
  9908  003DE0  0100               	movlb	0	; () banked
  9909  003DE2  2FC4               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9910  003DE4  D7D6               	goto	l984
  9911                           
  9912                           ; BSR set to: 0
  9913                           
  9914                           ; BSR set to: 0
  9915  003DE6  0100               	movlb	0	; () banked
  9916  003DE8  AFC5               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9917  003DEA  D01A               	goto	l4652
  9918                           
  9919                           ; BSR set to: 0
  9920  003DEC  0100               	movlb	0	; () banked
  9921  003DEE  51C5               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9922  003DF0  0A80               	xorlw	128
  9923  003DF2  0F97               	addlw	151
  9924  003DF4  B0D8               	btfsc	status,0,c
  9925  003DF6  D00A               	goto	l4648
  9926                           
  9927                           ; BSR set to: 0
  9928  003DF8  0E00               	movlw	0
  9929  003DFA  0100               	movlb	0	; () banked
  9930  003DFC  6FB7               	movwf	?__tdiv_to_l_& (0+255),b
  9931  003DFE  0E00               	movlw	0
  9932  003E00  6FB8               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9933  003E02  0E00               	movlw	0
  9934  003E04  6FB9               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9935  003E06  0E00               	movlw	0
  9936  003E08  6FBA               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9937                           
  9938                           ; BSR set to: 0
  9939  003E0A  0012               	return	
  9940  003E0C                     l4648:
  9941                           
  9942                           ; BSR set to: 0
  9943  003E0C  0100               	movlb	0	; () banked
  9944  003E0E  90D8               	bcf	status,0,c
  9945  003E10  33C3               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9946  003E12  33C2               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9947  003E14  33C1               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9948  003E16  33C0               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9949                           
  9950                           ; BSR set to: 0
  9951  003E18  0100               	movlb	0	; () banked
  9952  003E1A  3FC5               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9953  003E1C  D7F7               	goto	l4648
  9954                           
  9955                           ; BSR set to: 0
  9956  003E1E  D01B               	goto	l991
  9957  003E20                     l4652:
  9958                           
  9959                           ; BSR set to: 0
  9960  003E20  0E17               	movlw	23
  9961  003E22  0100               	movlb	0	; () banked
  9962  003E24  65C5               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9963  003E26  D012               	goto	l4660
  9964                           
  9965                           ; BSR set to: 0
  9966  003E28  0E00               	movlw	0
  9967  003E2A  0100               	movlb	0	; () banked
  9968  003E2C  6FB7               	movwf	?__tdiv_to_l_& (0+255),b
  9969  003E2E  0E00               	movlw	0
  9970  003E30  6FB8               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9971  003E32  0E00               	movlw	0
  9972  003E34  6FB9               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9973  003E36  0E00               	movlw	0
  9974  003E38  6FBA               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9975                           
  9976                           ; BSR set to: 0
  9977  003E3A  0012               	return	
  9978  003E3C                     l4658:
  9979                           
  9980                           ; BSR set to: 0
  9981  003E3C  0100               	movlb	0	; () banked
  9982  003E3E  90D8               	bcf	status,0,c
  9983  003E40  37C0               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9984  003E42  37C1               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9985  003E44  37C2               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9986  003E46  37C3               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9987  003E48  0100               	movlb	0	; () banked
  9988  003E4A  07C5               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9989  003E4C                     l4660:
  9990                           
  9991                           ; BSR set to: 0
  9992  003E4C  0100               	movlb	0	; () banked
  9993  003E4E  51C5               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9994  003E50  0100               	movlb	0	; () banked
  9995  003E52  A4D8               	btfss	status,2,c
  9996  003E54  D7F3               	goto	l4658
  9997  003E56                     l991:
  9998                           
  9999                           ; BSR set to: 0
 10000  003E56  C0C0  F0B7         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10001  003E5A  C0C1  F0B8         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10002  003E5E  C0C2  F0B9         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10003  003E62  C0C3  F0BA         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10004                           
 10005                           ; BSR set to: 0
 10006  003E66  0012               	return		;funcret
 10007  003E68                     __end_of__tdiv_to_l_:
 10008                           	opt stack 0
 10009                           tblptru	equ	0xFF8
 10010                           tblptrh	equ	0xFF7
 10011                           tblptrl	equ	0xFF6
 10012                           tablat	equ	0xFF5
 10013                           prodh	equ	0xFF4
 10014                           prodl	equ	0xFF3
 10015                           intcon	equ	0xFF2
 10016                           intcon3	equ	0xFF0
 10017                           postinc0	equ	0xFEE
 10018                           wreg	equ	0xFE8
 10019                           indf2	equ	0xFDF
 10020                           postinc2	equ	0xFDE
 10021                           postdec2	equ	0xFDD
 10022                           fsr2h	equ	0xFDA
 10023                           fsr2l	equ	0xFD9
 10024                           status	equ	0xFD8
 10025                           
 10026 ;; *************** function __div_to_l_ *****************
 10027 ;; Defined at:
 10028 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  f1              3   55[BANK0 ] unsigned long 
 10031 ;;  f2              3   58[BANK0 ] unsigned long 
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  quot            4   61[BANK0 ] unsigned long 
 10034 ;;  exp1            1   66[BANK0 ] unsigned char 
 10035 ;;  cntr            1   65[BANK0 ] unsigned char 
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  4   55[BANK0 ] unsigned long 
 10038 ;; Registers used:
 10039 ;;		wreg, status,2, status,0
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10045 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10048 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10049 ;;Total ram usage:       12 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:    5
 10052 ;; This function calls:
 10053 ;;		Nothing
 10054 ;; This function is called by:
 10055 ;;		_printf
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059                           	psect	text27
 10060  003E68                     __ptext27:
 10061                           	opt stack 0
 10062  003E68                     __div_to_l_:
 10063                           	opt stack 23
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;incstack = 0
 10067  003E68  0100               	movlb	0	; () banked
 10068  003E6A  35B9               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10069  003E6C  35BA               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10070  003E6E  0100               	movlb	0	; () banked
 10071  003E70  6FC2               	movwf	__div_to_l_@exp1& (0+255),b
 10072  003E72  0100               	movlb	0	; () banked
 10073  003E74  51C2               	movf	__div_to_l_@exp1& (0+255),w,b
 10074  003E76  A4D8               	btfss	status,2,c
 10075  003E78  D00A               	goto	l4668
 10076                           
 10077                           ; BSR set to: 0
 10078  003E7A  0E00               	movlw	0
 10079  003E7C  0100               	movlb	0	; () banked
 10080  003E7E  6FB7               	movwf	?__div_to_l_& (0+255),b
 10081  003E80  0E00               	movlw	0
 10082  003E82  6FB8               	movwf	(?__div_to_l_+1)& (0+255),b
 10083  003E84  0E00               	movlw	0
 10084  003E86  6FB9               	movwf	(?__div_to_l_+2)& (0+255),b
 10085  003E88  0E00               	movlw	0
 10086  003E8A  6FBA               	movwf	(?__div_to_l_+3)& (0+255),b
 10087                           
 10088                           ; BSR set to: 0
 10089  003E8C  0012               	return	
 10090  003E8E                     l4668:
 10091                           
 10092                           ; BSR set to: 0
 10093  003E8E  0100               	movlb	0	; () banked
 10094  003E90  35BC               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10095  003E92  35BD               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10096  003E94  0100               	movlb	0	; () banked
 10097  003E96  6FC1               	movwf	__div_to_l_@cntr& (0+255),b
 10098  003E98  0100               	movlb	0	; () banked
 10099  003E9A  51C1               	movf	__div_to_l_@cntr& (0+255),w,b
 10100  003E9C  A4D8               	btfss	status,2,c
 10101  003E9E  D00A               	goto	l4674
 10102                           
 10103                           ; BSR set to: 0
 10104  003EA0  0E00               	movlw	0
 10105  003EA2  0100               	movlb	0	; () banked
 10106  003EA4  6FB7               	movwf	?__div_to_l_& (0+255),b
 10107  003EA6  0E00               	movlw	0
 10108  003EA8  6FB8               	movwf	(?__div_to_l_+1)& (0+255),b
 10109  003EAA  0E00               	movlw	0
 10110  003EAC  6FB9               	movwf	(?__div_to_l_+2)& (0+255),b
 10111  003EAE  0E00               	movlw	0
 10112  003EB0  6FBA               	movwf	(?__div_to_l_+3)& (0+255),b
 10113                           
 10114                           ; BSR set to: 0
 10115  003EB2  0012               	return	
 10116  003EB4                     l4674:
 10117                           
 10118                           ; BSR set to: 0
 10119  003EB4  0100               	movlb	0	; () banked
 10120  003EB6  8FB9               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10121                           
 10122                           ; BSR set to: 0
 10123  003EB8  0EFF               	movlw	255
 10124  003EBA  0100               	movlb	0	; () banked
 10125  003EBC  17B7               	andwf	__div_to_l_@f1& (0+255),f,b
 10126  003EBE  0EFF               	movlw	255
 10127  003EC0  17B8               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10128  003EC2  0EFF               	movlw	255
 10129  003EC4  17B9               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10130  003EC6  0E00               	movlw	0
 10131  003EC8  17BA               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10132                           
 10133                           ; BSR set to: 0
 10134  003ECA  0100               	movlb	0	; () banked
 10135  003ECC  8FBC               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10136  003ECE  0EFF               	movlw	255
 10137  003ED0  0100               	movlb	0	; () banked
 10138  003ED2  17BA               	andwf	__div_to_l_@f2& (0+255),f,b
 10139  003ED4  0EFF               	movlw	255
 10140  003ED6  17BB               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10141  003ED8  0EFF               	movlw	255
 10142  003EDA  17BC               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10143  003EDC  0E00               	movlw	0
 10144  003EDE  17BD               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10145                           
 10146                           ; BSR set to: 0
 10147  003EE0  0E00               	movlw	0
 10148  003EE2  0100               	movlb	0	; () banked
 10149  003EE4  6FBD               	movwf	__div_to_l_@quot& (0+255),b
 10150  003EE6  0E00               	movlw	0
 10151  003EE8  6FBE               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10152  003EEA  0E00               	movlw	0
 10153  003EEC  6FBF               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10154  003EEE  0E00               	movlw	0
 10155  003EF0  6FC0               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10156                           
 10157                           ; BSR set to: 0
 10158  003EF2  0E7F               	movlw	127
 10159  003EF4  0100               	movlb	0	; () banked
 10160  003EF6  5FC2               	subwf	__div_to_l_@exp1& (0+255),f,b
 10161                           
 10162                           ; BSR set to: 0
 10163  003EF8  0100               	movlb	0	; () banked
 10164  003EFA  51C1               	movf	__div_to_l_@cntr& (0+255),w,b
 10165  003EFC  0FA0               	addlw	160
 10166  003EFE  0100               	movlb	0	; () banked
 10167  003F00  5FC2               	subwf	__div_to_l_@exp1& (0+255),f,b
 10168                           
 10169                           ; BSR set to: 0
 10170  003F02  0E20               	movlw	32
 10171  003F04  0100               	movlb	0	; () banked
 10172  003F06  6FC1               	movwf	__div_to_l_@cntr& (0+255),b
 10173  003F08                     l4688:
 10174                           
 10175                           ; BSR set to: 0
 10176  003F08  0100               	movlb	0	; () banked
 10177  003F0A  90D8               	bcf	status,0,c
 10178  003F0C  37BD               	rlcf	__div_to_l_@quot& (0+255),f,b
 10179  003F0E  37BE               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10180  003F10  37BF               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10181  003F12  37C0               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10182                           
 10183                           ; BSR set to: 0
 10184  003F14  0100               	movlb	0	; () banked
 10185  003F16  51BA               	movf	__div_to_l_@f2& (0+255),w,b
 10186  003F18  0100               	movlb	0	; () banked
 10187  003F1A  5DB7               	subwf	__div_to_l_@f1& (0+255),w,b
 10188  003F1C  0100               	movlb	0	; () banked
 10189  003F1E  51BB               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10190  003F20  0100               	movlb	0	; () banked
 10191  003F22  59B8               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10192  003F24  0100               	movlb	0	; () banked
 10193  003F26  51BC               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10194  003F28  0100               	movlb	0	; () banked
 10195  003F2A  59B9               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10196  003F2C  0100               	movlb	0	; () banked
 10197  003F2E  51BD               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10198  003F30  0100               	movlb	0	; () banked
 10199  003F32  59BA               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10200  003F34  A0D8               	btfss	status,0,c
 10201  003F36  D012               	goto	l4696
 10202                           
 10203                           ; BSR set to: 0
 10204  003F38  0100               	movlb	0	; () banked
 10205  003F3A  51BA               	movf	__div_to_l_@f2& (0+255),w,b
 10206  003F3C  0100               	movlb	0	; () banked
 10207  003F3E  5FB7               	subwf	__div_to_l_@f1& (0+255),f,b
 10208  003F40  0100               	movlb	0	; () banked
 10209  003F42  51BB               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10210  003F44  0100               	movlb	0	; () banked
 10211  003F46  5BB8               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10212  003F48  0100               	movlb	0	; () banked
 10213  003F4A  51BC               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10214  003F4C  0100               	movlb	0	; () banked
 10215  003F4E  5BB9               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10216  003F50  0100               	movlb	0	; () banked
 10217  003F52  51BD               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10218  003F54  0100               	movlb	0	; () banked
 10219  003F56  5BBA               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 0
 10222  003F58  0100               	movlb	0	; () banked
 10223  003F5A  81BD               	bsf	__div_to_l_@quot& (0+255),0,b
 10224  003F5C                     l4696:
 10225                           
 10226                           ; BSR set to: 0
 10227  003F5C  0100               	movlb	0	; () banked
 10228  003F5E  90D8               	bcf	status,0,c
 10229  003F60  37B7               	rlcf	__div_to_l_@f1& (0+255),f,b
 10230  003F62  37B8               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10231  003F64  37B9               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10232  003F66  37BA               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10233                           
 10234                           ; BSR set to: 0
 10235  003F68  0100               	movlb	0	; () banked
 10236  003F6A  2FC1               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10237  003F6C  D7CD               	goto	l4688
 10238                           
 10239                           ; BSR set to: 0
 10240                           
 10241                           ; BSR set to: 0
 10242  003F6E  0100               	movlb	0	; () banked
 10243  003F70  AFC2               	btfss	__div_to_l_@exp1& (0+255),7,b
 10244  003F72  D01A               	goto	l4712
 10245                           
 10246                           ; BSR set to: 0
 10247  003F74  0100               	movlb	0	; () banked
 10248  003F76  51C2               	movf	__div_to_l_@exp1& (0+255),w,b
 10249  003F78  0A80               	xorlw	128
 10250  003F7A  0F9F               	addlw	159
 10251  003F7C  B0D8               	btfsc	status,0,c
 10252  003F7E  D00A               	goto	l4708
 10253                           
 10254                           ; BSR set to: 0
 10255  003F80  0E00               	movlw	0
 10256  003F82  0100               	movlb	0	; () banked
 10257  003F84  6FB7               	movwf	?__div_to_l_& (0+255),b
 10258  003F86  0E00               	movlw	0
 10259  003F88  6FB8               	movwf	(?__div_to_l_+1)& (0+255),b
 10260  003F8A  0E00               	movlw	0
 10261  003F8C  6FB9               	movwf	(?__div_to_l_+2)& (0+255),b
 10262  003F8E  0E00               	movlw	0
 10263  003F90  6FBA               	movwf	(?__div_to_l_+3)& (0+255),b
 10264                           
 10265                           ; BSR set to: 0
 10266  003F92  0012               	return	
 10267  003F94                     l4708:
 10268                           
 10269                           ; BSR set to: 0
 10270  003F94  0100               	movlb	0	; () banked
 10271  003F96  90D8               	bcf	status,0,c
 10272  003F98  33C0               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10273  003F9A  33BF               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10274  003F9C  33BE               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10275  003F9E  33BD               	rrcf	__div_to_l_@quot& (0+255),f,b
 10276                           
 10277                           ; BSR set to: 0
 10278  003FA0  0100               	movlb	0	; () banked
 10279  003FA2  3FC2               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10280  003FA4  D7F7               	goto	l4708
 10281                           
 10282                           ; BSR set to: 0
 10283  003FA6  D01B               	goto	l887
 10284  003FA8                     l4712:
 10285                           
 10286                           ; BSR set to: 0
 10287  003FA8  0E1F               	movlw	31
 10288  003FAA  0100               	movlb	0	; () banked
 10289  003FAC  65C2               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10290  003FAE  D012               	goto	l4720
 10291                           
 10292                           ; BSR set to: 0
 10293  003FB0  0E00               	movlw	0
 10294  003FB2  0100               	movlb	0	; () banked
 10295  003FB4  6FB7               	movwf	?__div_to_l_& (0+255),b
 10296  003FB6  0E00               	movlw	0
 10297  003FB8  6FB8               	movwf	(?__div_to_l_+1)& (0+255),b
 10298  003FBA  0E00               	movlw	0
 10299  003FBC  6FB9               	movwf	(?__div_to_l_+2)& (0+255),b
 10300  003FBE  0E00               	movlw	0
 10301  003FC0  6FBA               	movwf	(?__div_to_l_+3)& (0+255),b
 10302                           
 10303                           ; BSR set to: 0
 10304  003FC2  0012               	return	
 10305  003FC4                     l4718:
 10306                           
 10307                           ; BSR set to: 0
 10308  003FC4  0100               	movlb	0	; () banked
 10309  003FC6  90D8               	bcf	status,0,c
 10310  003FC8  37BD               	rlcf	__div_to_l_@quot& (0+255),f,b
 10311  003FCA  37BE               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10312  003FCC  37BF               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10313  003FCE  37C0               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10314  003FD0  0100               	movlb	0	; () banked
 10315  003FD2  07C2               	decf	__div_to_l_@exp1& (0+255),f,b
 10316  003FD4                     l4720:
 10317                           
 10318                           ; BSR set to: 0
 10319  003FD4  0100               	movlb	0	; () banked
 10320  003FD6  51C2               	movf	__div_to_l_@exp1& (0+255),w,b
 10321  003FD8  0100               	movlb	0	; () banked
 10322  003FDA  A4D8               	btfss	status,2,c
 10323  003FDC  D7F3               	goto	l4718
 10324  003FDE                     l887:
 10325                           
 10326                           ; BSR set to: 0
 10327  003FDE  C0BD  F0B7         	movff	__div_to_l_@quot,?__div_to_l_
 10328  003FE2  C0BE  F0B8         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10329  003FE6  C0BF  F0B9         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10330  003FEA  C0C0  F0BA         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10331                           
 10332                           ; BSR set to: 0
 10333  003FEE  0012               	return		;funcret
 10334  003FF0                     __end_of__div_to_l_:
 10335                           	opt stack 0
 10336                           tblptru	equ	0xFF8
 10337                           tblptrh	equ	0xFF7
 10338                           tblptrl	equ	0xFF6
 10339                           tablat	equ	0xFF5
 10340                           prodh	equ	0xFF4
 10341                           prodl	equ	0xFF3
 10342                           intcon	equ	0xFF2
 10343                           intcon3	equ	0xFF0
 10344                           postinc0	equ	0xFEE
 10345                           wreg	equ	0xFE8
 10346                           indf2	equ	0xFDF
 10347                           postinc2	equ	0xFDE
 10348                           postdec2	equ	0xFDD
 10349                           fsr2h	equ	0xFDA
 10350                           fsr2l	equ	0xFD9
 10351                           status	equ	0xFD8
 10352                           
 10353 ;; *************** function ___lltoft *****************
 10354 ;; Defined at:
 10355 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  c               4   63[BANK0 ] unsigned long 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  exp             1    0[BANK1 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  3   63[BANK0 ] float 
 10362 ;; Registers used:
 10363 ;;		wreg, status,2, status,0, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10369 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Totals:         0       8       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;Total ram usage:        9 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    6
 10376 ;; This function calls:
 10377 ;;		___ftpack
 10378 ;; This function is called by:
 10379 ;;		_printf
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text28
 10384  005492                     __ptext28:
 10385                           	opt stack 0
 10386  005492                     ___lltoft:
 10387                           	opt stack 22
 10388                           
 10389                           ; BSR set to: 0
 10390                           ;incstack = 0
 10391  005492  0E8E               	movlw	142
 10392  005494  0101               	movlb	1	; () banked
 10393  005496  6F00               	movwf	___lltoft@exp& (0+255),b
 10394  005498  D008               	goto	l7396
 10395  00549A                     l7394:
 10396  00549A  0100               	movlb	0	; () banked
 10397  00549C  90D8               	bcf	status,0,c
 10398  00549E  33C2               	rrcf	(___lltoft@c+3)& (0+255),f,b
 10399  0054A0  33C1               	rrcf	(___lltoft@c+2)& (0+255),f,b
 10400  0054A2  33C0               	rrcf	(___lltoft@c+1)& (0+255),f,b
 10401  0054A4  33BF               	rrcf	___lltoft@c& (0+255),f,b
 10402  0054A6  0101               	movlb	1	; () banked
 10403  0054A8  2B00               	incf	___lltoft@exp& (0+255),f,b
 10404  0054AA                     l7396:
 10405                           
 10406                           ; BSR set to: 1
 10407  0054AA  0E00               	movlw	0
 10408  0054AC  0100               	movlb	0	; () banked
 10409  0054AE  15BF               	andwf	___lltoft@c& (0+255),w,b
 10410  0054B0  0100               	movlb	0	; () banked
 10411  0054B2  6FC3               	movwf	??___lltoft& (0+255),b
 10412  0054B4  0E00               	movlw	0
 10413  0054B6  0100               	movlb	0	; () banked
 10414  0054B8  15C0               	andwf	(___lltoft@c+1)& (0+255),w,b
 10415  0054BA  0100               	movlb	0	; () banked
 10416  0054BC  6FC4               	movwf	(??___lltoft+1)& (0+255),b
 10417  0054BE  0E00               	movlw	0
 10418  0054C0  0100               	movlb	0	; () banked
 10419  0054C2  15C1               	andwf	(___lltoft@c+2)& (0+255),w,b
 10420  0054C4  0100               	movlb	0	; () banked
 10421  0054C6  6FC5               	movwf	(??___lltoft+2)& (0+255),b
 10422  0054C8  0EFF               	movlw	255
 10423  0054CA  0100               	movlb	0	; () banked
 10424  0054CC  15C2               	andwf	(___lltoft@c+3)& (0+255),w,b
 10425  0054CE  0100               	movlb	0	; () banked
 10426  0054D0  6FC6               	movwf	(??___lltoft+3)& (0+255),b
 10427  0054D2  0100               	movlb	0	; () banked
 10428  0054D4  51C3               	movf	??___lltoft& (0+255),w,b
 10429  0054D6  0100               	movlb	0	; () banked
 10430  0054D8  11C4               	iorwf	(??___lltoft+1)& (0+255),w,b
 10431  0054DA  0100               	movlb	0	; () banked
 10432  0054DC  11C5               	iorwf	(??___lltoft+2)& (0+255),w,b
 10433  0054DE  0100               	movlb	0	; () banked
 10434  0054E0  11C6               	iorwf	(??___lltoft+3)& (0+255),w,b
 10435  0054E2  A4D8               	btfss	status,2,c
 10436  0054E4  D7DA               	goto	l7394
 10437                           
 10438                           ; BSR set to: 0
 10439                           
 10440                           ; BSR set to: 0
 10441  0054E6  C0BF  F0B7         	movff	___lltoft@c,___ftpack@arg
 10442  0054EA  C0C0  F0B8         	movff	___lltoft@c+1,___ftpack@arg+1
 10443  0054EE  C0C1  F0B9         	movff	___lltoft@c+2,___ftpack@arg+2
 10444  0054F2  C100  F0BA         	movff	___lltoft@exp,___ftpack@exp
 10445  0054F6  0E00               	movlw	0
 10446  0054F8  0100               	movlb	0	; () banked
 10447  0054FA  6FBB               	movwf	___ftpack@sign& (0+255),b
 10448  0054FC  ECBA  F023         	call	___ftpack	;wreg free
 10449  005500  C0B7  F0BF         	movff	?___ftpack,?___lltoft
 10450  005504  C0B8  F0C0         	movff	?___ftpack+1,?___lltoft+1
 10451  005508  C0B9  F0C1         	movff	?___ftpack+2,?___lltoft+2
 10452  00550C  0012               	return	
 10453  00550E                     __end_of___lltoft:
 10454                           	opt stack 0
 10455                           tblptru	equ	0xFF8
 10456                           tblptrh	equ	0xFF7
 10457                           tblptrl	equ	0xFF6
 10458                           tablat	equ	0xFF5
 10459                           prodh	equ	0xFF4
 10460                           prodl	equ	0xFF3
 10461                           intcon	equ	0xFF2
 10462                           intcon3	equ	0xFF0
 10463                           postinc0	equ	0xFEE
 10464                           wreg	equ	0xFE8
 10465                           indf2	equ	0xFDF
 10466                           postinc2	equ	0xFDE
 10467                           postdec2	equ	0xFDD
 10468                           fsr2h	equ	0xFDA
 10469                           fsr2l	equ	0xFD9
 10470                           status	equ	0xFD8
 10471                           
 10472 ;; *************** function ___llmod *****************
 10473 ;; Defined at:
 10474 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  dividend        4    0[BANK1 ] unsigned long 
 10477 ;;  divisor         4    4[BANK1 ] unsigned long 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  counter         1   68[BANK0 ] unsigned char 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  4    0[BANK1 ] unsigned long 
 10482 ;; Registers used:
 10483 ;;		wreg, status,2, status,0
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10489 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10493 ;;Total ram usage:        9 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:    5
 10496 ;; This function calls:
 10497 ;;		Nothing
 10498 ;; This function is called by:
 10499 ;;		_printf
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           	psect	text29
 10504  005262                     __ptext29:
 10505                           	opt stack 0
 10506  005262                     ___llmod:
 10507                           	opt stack 23
 10508                           
 10509                           ;incstack = 0
 10510  005262  0101               	movlb	1	; () banked
 10511  005264  5104               	movf	___llmod@divisor& (0+255),w,b
 10512  005266  0101               	movlb	1	; () banked
 10513  005268  1105               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10514  00526A  0101               	movlb	1	; () banked
 10515  00526C  1106               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10516  00526E  0101               	movlb	1	; () banked
 10517  005270  1107               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10518  005272  B4D8               	btfsc	status,2,c
 10519  005274  D03A               	goto	l1076
 10520                           
 10521                           ; BSR set to: 1
 10522  005276  0E01               	movlw	1
 10523  005278  0100               	movlb	0	; () banked
 10524  00527A  6FC4               	movwf	___llmod@counter& (0+255),b
 10525  00527C  D008               	goto	l4826
 10526  00527E                     l4824:
 10527  00527E  0101               	movlb	1	; () banked
 10528  005280  90D8               	bcf	status,0,c
 10529  005282  3704               	rlcf	___llmod@divisor& (0+255),f,b
 10530  005284  3705               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10531  005286  3706               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10532  005288  3707               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10533  00528A  0100               	movlb	0	; () banked
 10534  00528C  2BC4               	incf	___llmod@counter& (0+255),f,b
 10535  00528E                     l4826:
 10536                           
 10537                           ; BSR set to: 0
 10538  00528E  0101               	movlb	1	; () banked
 10539  005290  AF07               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10540  005292  D7F5               	goto	l4824
 10541  005294                     l4828:
 10542  005294  0101               	movlb	1	; () banked
 10543  005296  5104               	movf	___llmod@divisor& (0+255),w,b
 10544  005298  0101               	movlb	1	; () banked
 10545  00529A  5D00               	subwf	___llmod@dividend& (0+255),w,b
 10546  00529C  0101               	movlb	1	; () banked
 10547  00529E  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 10548  0052A0  0101               	movlb	1	; () banked
 10549  0052A2  5901               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10550  0052A4  0101               	movlb	1	; () banked
 10551  0052A6  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 10552  0052A8  0101               	movlb	1	; () banked
 10553  0052AA  5902               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10554  0052AC  0101               	movlb	1	; () banked
 10555  0052AE  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 10556  0052B0  0101               	movlb	1	; () banked
 10557  0052B2  5903               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10558  0052B4  A0D8               	btfss	status,0,c
 10559  0052B6  D010               	goto	l4832
 10560                           
 10561                           ; BSR set to: 1
 10562  0052B8  0101               	movlb	1	; () banked
 10563  0052BA  5104               	movf	___llmod@divisor& (0+255),w,b
 10564  0052BC  0101               	movlb	1	; () banked
 10565  0052BE  5F00               	subwf	___llmod@dividend& (0+255),f,b
 10566  0052C0  0101               	movlb	1	; () banked
 10567  0052C2  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 10568  0052C4  0101               	movlb	1	; () banked
 10569  0052C6  5B01               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10570  0052C8  0101               	movlb	1	; () banked
 10571  0052CA  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 10572  0052CC  0101               	movlb	1	; () banked
 10573  0052CE  5B02               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10574  0052D0  0101               	movlb	1	; () banked
 10575  0052D2  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 10576  0052D4  0101               	movlb	1	; () banked
 10577  0052D6  5B03               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10578  0052D8                     l4832:
 10579                           
 10580                           ; BSR set to: 1
 10581  0052D8  0101               	movlb	1	; () banked
 10582  0052DA  90D8               	bcf	status,0,c
 10583  0052DC  3307               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10584  0052DE  3306               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10585  0052E0  3305               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10586  0052E2  3304               	rrcf	___llmod@divisor& (0+255),f,b
 10587                           
 10588                           ; BSR set to: 1
 10589  0052E4  0100               	movlb	0	; () banked
 10590  0052E6  2FC4               	decfsz	___llmod@counter& (0+255),f,b
 10591  0052E8  D7D5               	goto	l4828
 10592  0052EA                     l1076:
 10593  0052EA  C100  F100         	movff	___llmod@dividend,?___llmod
 10594  0052EE  C101  F101         	movff	___llmod@dividend+1,?___llmod+1
 10595  0052F2  C102  F102         	movff	___llmod@dividend+2,?___llmod+2
 10596  0052F6  C103  F103         	movff	___llmod@dividend+3,?___llmod+3
 10597  0052FA  0012               	return		;funcret
 10598  0052FC                     __end_of___llmod:
 10599                           	opt stack 0
 10600                           tblptru	equ	0xFF8
 10601                           tblptrh	equ	0xFF7
 10602                           tblptrl	equ	0xFF6
 10603                           tablat	equ	0xFF5
 10604                           prodh	equ	0xFF4
 10605                           prodl	equ	0xFF3
 10606                           intcon	equ	0xFF2
 10607                           intcon3	equ	0xFF0
 10608                           postinc0	equ	0xFEE
 10609                           wreg	equ	0xFE8
 10610                           indf2	equ	0xFDF
 10611                           postinc2	equ	0xFDE
 10612                           postdec2	equ	0xFDD
 10613                           fsr2h	equ	0xFDA
 10614                           fsr2l	equ	0xFD9
 10615                           status	equ	0xFD8
 10616                           
 10617 ;; *************** function ___fttol *****************
 10618 ;; Defined at:
 10619 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;  f1              3   26[BANK1 ] float 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  lval            4   36[BANK1 ] unsigned long 
 10624 ;;  exp1            1   40[BANK1 ] unsigned char 
 10625 ;;  sign1           1   35[BANK1 ] unsigned char 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  4   26[BANK1 ] long 
 10628 ;; Registers used:
 10629 ;;		wreg, status,2, status,0
 10630 ;; Tracked objects:
 10631 ;;		On entry : 0/0
 10632 ;;		On exit  : 0/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10635 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;Total ram usage:       15 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:    5
 10642 ;; This function calls:
 10643 ;;		Nothing
 10644 ;; This function is called by:
 10645 ;;		_ultrasonicFindBottle
 10646 ;;		_printf
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           	psect	text30
 10651  00429A                     __ptext30:
 10652                           	opt stack 0
 10653  00429A                     ___fttol:
 10654                           	opt stack 23
 10655                           
 10656                           ;incstack = 0
 10657  00429A  C11C  F11E         	movff	___fttol@f1+2,??___fttol
 10658  00429E  0101               	movlb	1	; () banked
 10659  0042A0  6B1F               	clrf	(??___fttol+1)& (0+255),b
 10660  0042A2  6B20               	clrf	(??___fttol+2)& (0+255),b
 10661  0042A4  0101               	movlb	1	; () banked
 10662  0042A6  351B               	rlcf	(___fttol@f1+1)& (0+255),w,b
 10663  0042A8  0101               	movlb	1	; () banked
 10664  0042AA  371E               	rlcf	??___fttol& (0+255),f,b
 10665  0042AC  E301               	bnc	u5431
 10666  0042AE  811F               	bsf	(??___fttol+1)& (0+255),0,b
 10667  0042B0                     u5431:
 10668  0042B0  0101               	movlb	1	; () banked
 10669  0042B2  511E               	movf	??___fttol& (0+255),w,b
 10670  0042B4  0101               	movlb	1	; () banked
 10671  0042B6  6F28               	movwf	___fttol@exp1& (0+255),b
 10672  0042B8  0101               	movlb	1	; () banked
 10673  0042BA  5128               	movf	___fttol@exp1& (0+255),w,b
 10674  0042BC  A4D8               	btfss	status,2,c
 10675  0042BE  D00A               	goto	l4758
 10676                           
 10677                           ; BSR set to: 1
 10678  0042C0  0E00               	movlw	0
 10679  0042C2  0101               	movlb	1	; () banked
 10680  0042C4  6F1A               	movwf	?___fttol& (0+255),b
 10681  0042C6  0E00               	movlw	0
 10682  0042C8  6F1B               	movwf	(?___fttol+1)& (0+255),b
 10683  0042CA  0E00               	movlw	0
 10684  0042CC  6F1C               	movwf	(?___fttol+2)& (0+255),b
 10685  0042CE  0E00               	movlw	0
 10686  0042D0  6F1D               	movwf	(?___fttol+3)& (0+255),b
 10687                           
 10688                           ; BSR set to: 1
 10689  0042D2  0012               	return	
 10690  0042D4                     l4758:
 10691                           
 10692                           ; BSR set to: 1
 10693  0042D4  0E17               	movlw	23
 10694  0042D6  0101               	movlb	1	; () banked
 10695  0042D8  6F1E               	movwf	??___fttol& (0+255),b
 10696  0042DA  C11A  F11F         	movff	___fttol@f1,??___fttol+1
 10697  0042DE  C11B  F120         	movff	___fttol@f1+1,??___fttol+2
 10698  0042E2  C11C  F121         	movff	___fttol@f1+2,??___fttol+3
 10699  0042E6  0101               	movlb	1	; () banked
 10700  0042E8  291E               	incf	??___fttol& (0+255),w,b
 10701  0042EA  0101               	movlb	1	; () banked
 10702  0042EC  6F22               	movwf	(??___fttol+4)& (0+255),b
 10703  0042EE  D005               	goto	u5450
 10704  0042F0                     u5455:
 10705  0042F0  0101               	movlb	1	; () banked
 10706  0042F2  90D8               	bcf	status,0,c
 10707  0042F4  3321               	rrcf	(??___fttol+3)& (0+255),f,b
 10708  0042F6  3320               	rrcf	(??___fttol+2)& (0+255),f,b
 10709  0042F8  331F               	rrcf	(??___fttol+1)& (0+255),f,b
 10710  0042FA                     u5450:
 10711  0042FA  0101               	movlb	1	; () banked
 10712  0042FC  2F22               	decfsz	(??___fttol+4)& (0+255),f,b
 10713  0042FE  D7F8               	goto	u5455
 10714  004300  0101               	movlb	1	; () banked
 10715  004302  511F               	movf	(??___fttol+1)& (0+255),w,b
 10716  004304  0101               	movlb	1	; () banked
 10717  004306  6F23               	movwf	___fttol@sign1& (0+255),b
 10718                           
 10719                           ; BSR set to: 1
 10720  004308  0101               	movlb	1	; () banked
 10721  00430A  8F1B               	bsf	(___fttol@f1+1)& (0+255),7,b
 10722                           
 10723                           ; BSR set to: 1
 10724  00430C  0EFF               	movlw	255
 10725  00430E  0101               	movlb	1	; () banked
 10726  004310  171A               	andwf	___fttol@f1& (0+255),f,b
 10727  004312  0EFF               	movlw	255
 10728  004314  0101               	movlb	1	; () banked
 10729  004316  171B               	andwf	(___fttol@f1+1)& (0+255),f,b
 10730  004318  0E00               	movlw	0
 10731  00431A  0101               	movlb	1	; () banked
 10732  00431C  171C               	andwf	(___fttol@f1+2)& (0+255),f,b
 10733                           
 10734                           ; BSR set to: 1
 10735  00431E  0101               	movlb	1	; () banked
 10736  004320  511A               	movf	___fttol@f1& (0+255),w,b
 10737  004322  0101               	movlb	1	; () banked
 10738  004324  6F24               	movwf	___fttol@lval& (0+255),b
 10739  004326  0101               	movlb	1	; () banked
 10740  004328  511B               	movf	(___fttol@f1+1)& (0+255),w,b
 10741  00432A  0101               	movlb	1	; () banked
 10742  00432C  6F25               	movwf	(___fttol@lval+1)& (0+255),b
 10743  00432E  0101               	movlb	1	; () banked
 10744  004330  511C               	movf	(___fttol@f1+2)& (0+255),w,b
 10745  004332  0101               	movlb	1	; () banked
 10746  004334  6F26               	movwf	(___fttol@lval+2)& (0+255),b
 10747  004336  0101               	movlb	1	; () banked
 10748  004338  6B27               	clrf	(___fttol@lval+3)& (0+255),b
 10749                           
 10750                           ; BSR set to: 1
 10751  00433A  0E8E               	movlw	142
 10752  00433C  0101               	movlb	1	; () banked
 10753  00433E  5F28               	subwf	___fttol@exp1& (0+255),f,b
 10754                           
 10755                           ; BSR set to: 1
 10756  004340  0101               	movlb	1	; () banked
 10757  004342  AF28               	btfss	___fttol@exp1& (0+255),7,b
 10758  004344  D01A               	goto	l4780
 10759                           
 10760                           ; BSR set to: 1
 10761  004346  0101               	movlb	1	; () banked
 10762  004348  5128               	movf	___fttol@exp1& (0+255),w,b
 10763  00434A  0A80               	xorlw	128
 10764  00434C  0F8F               	addlw	143
 10765  00434E  B0D8               	btfsc	status,0,c
 10766  004350  D00A               	goto	l4776
 10767                           
 10768                           ; BSR set to: 1
 10769  004352  0E00               	movlw	0
 10770  004354  0101               	movlb	1	; () banked
 10771  004356  6F1A               	movwf	?___fttol& (0+255),b
 10772  004358  0E00               	movlw	0
 10773  00435A  6F1B               	movwf	(?___fttol+1)& (0+255),b
 10774  00435C  0E00               	movlw	0
 10775  00435E  6F1C               	movwf	(?___fttol+2)& (0+255),b
 10776  004360  0E00               	movlw	0
 10777  004362  6F1D               	movwf	(?___fttol+3)& (0+255),b
 10778                           
 10779                           ; BSR set to: 1
 10780  004364  0012               	return	
 10781  004366                     l4776:
 10782                           
 10783                           ; BSR set to: 1
 10784  004366  0101               	movlb	1	; () banked
 10785  004368  90D8               	bcf	status,0,c
 10786  00436A  3327               	rrcf	(___fttol@lval+3)& (0+255),f,b
 10787  00436C  3326               	rrcf	(___fttol@lval+2)& (0+255),f,b
 10788  00436E  3325               	rrcf	(___fttol@lval+1)& (0+255),f,b
 10789  004370  3324               	rrcf	___fttol@lval& (0+255),f,b
 10790                           
 10791                           ; BSR set to: 1
 10792  004372  0101               	movlb	1	; () banked
 10793  004374  3F28               	incfsz	___fttol@exp1& (0+255),f,b
 10794  004376  D7F7               	goto	l4776
 10795                           
 10796                           ; BSR set to: 1
 10797  004378  D01B               	goto	l4790
 10798  00437A                     l4780:
 10799                           
 10800                           ; BSR set to: 1
 10801  00437A  0E17               	movlw	23
 10802  00437C  0101               	movlb	1	; () banked
 10803  00437E  6528               	cpfsgt	___fttol@exp1& (0+255),b
 10804  004380  D012               	goto	l4788
 10805                           
 10806                           ; BSR set to: 1
 10807  004382  0E00               	movlw	0
 10808  004384  0101               	movlb	1	; () banked
 10809  004386  6F1A               	movwf	?___fttol& (0+255),b
 10810  004388  0E00               	movlw	0
 10811  00438A  6F1B               	movwf	(?___fttol+1)& (0+255),b
 10812  00438C  0E00               	movlw	0
 10813  00438E  6F1C               	movwf	(?___fttol+2)& (0+255),b
 10814  004390  0E00               	movlw	0
 10815  004392  6F1D               	movwf	(?___fttol+3)& (0+255),b
 10816                           
 10817                           ; BSR set to: 1
 10818  004394  0012               	return	
 10819  004396                     l4786:
 10820                           
 10821                           ; BSR set to: 1
 10822  004396  0101               	movlb	1	; () banked
 10823  004398  90D8               	bcf	status,0,c
 10824  00439A  3724               	rlcf	___fttol@lval& (0+255),f,b
 10825  00439C  3725               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10826  00439E  3726               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10827  0043A0  3727               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10828  0043A2  0101               	movlb	1	; () banked
 10829  0043A4  0728               	decf	___fttol@exp1& (0+255),f,b
 10830  0043A6                     l4788:
 10831                           
 10832                           ; BSR set to: 1
 10833  0043A6  0101               	movlb	1	; () banked
 10834  0043A8  5128               	movf	___fttol@exp1& (0+255),w,b
 10835  0043AA  0101               	movlb	1	; () banked
 10836  0043AC  A4D8               	btfss	status,2,c
 10837  0043AE  D7F3               	goto	l4786
 10838  0043B0                     l4790:
 10839                           
 10840                           ; BSR set to: 1
 10841  0043B0  0101               	movlb	1	; () banked
 10842  0043B2  5123               	movf	___fttol@sign1& (0+255),w,b
 10843  0043B4  0101               	movlb	1	; () banked
 10844  0043B6  B4D8               	btfsc	status,2,c
 10845  0043B8  D009               	goto	l4794
 10846                           
 10847                           ; BSR set to: 1
 10848  0043BA  0101               	movlb	1	; () banked
 10849  0043BC  1F27               	comf	(___fttol@lval+3)& (0+255),f,b
 10850  0043BE  1F26               	comf	(___fttol@lval+2)& (0+255),f,b
 10851  0043C0  1F25               	comf	(___fttol@lval+1)& (0+255),f,b
 10852  0043C2  6D24               	negf	___fttol@lval& (0+255),b
 10853  0043C4  0E00               	movlw	0
 10854  0043C6  2325               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10855  0043C8  2326               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10856  0043CA  2327               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10857  0043CC                     l4794:
 10858                           
 10859                           ; BSR set to: 1
 10860  0043CC  C124  F11A         	movff	___fttol@lval,?___fttol
 10861  0043D0  C125  F11B         	movff	___fttol@lval+1,?___fttol+1
 10862  0043D4  C126  F11C         	movff	___fttol@lval+2,?___fttol+2
 10863  0043D8  C127  F11D         	movff	___fttol@lval+3,?___fttol+3
 10864  0043DC  0012               	return	
 10865  0043DE                     __end_of___fttol:
 10866                           	opt stack 0
 10867                           tblptru	equ	0xFF8
 10868                           tblptrh	equ	0xFF7
 10869                           tblptrl	equ	0xFF6
 10870                           tablat	equ	0xFF5
 10871                           prodh	equ	0xFF4
 10872                           prodl	equ	0xFF3
 10873                           intcon	equ	0xFF2
 10874                           intcon3	equ	0xFF0
 10875                           postinc0	equ	0xFEE
 10876                           wreg	equ	0xFE8
 10877                           indf2	equ	0xFDF
 10878                           postinc2	equ	0xFDE
 10879                           postdec2	equ	0xFDD
 10880                           fsr2h	equ	0xFDA
 10881                           fsr2l	equ	0xFD9
 10882                           status	equ	0xFD8
 10883                           
 10884 ;; *************** function ___ftsub *****************
 10885 ;; Defined at:
 10886 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;  f1              3   41[BANK1 ] float 
 10889 ;;  f2              3   44[BANK1 ] float 
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;		None
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  3   41[BANK1 ] float 
 10894 ;; Registers used:
 10895 ;;		wreg, status,2, status,0, cstack
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10901 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;Total ram usage:        6 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    7
 10908 ;; This function calls:
 10909 ;;		___ftadd
 10910 ;; This function is called by:
 10911 ;;		_printf
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text31
 10916  005896                     __ptext31:
 10917                           	opt stack 0
 10918  005896                     ___ftsub:
 10919                           	opt stack 21
 10920                           
 10921                           ; BSR set to: 1
 10922                           ;incstack = 0
 10923  005896  0101               	movlb	1	; () banked
 10924  005898  512C               	movf	___ftsub@f2& (0+255),w,b
 10925  00589A  0101               	movlb	1	; () banked
 10926  00589C  112D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 10927  00589E  0101               	movlb	1	; () banked
 10928  0058A0  112E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 10929  0058A2  B4D8               	btfsc	status,2,c
 10930  0058A4  D009               	goto	l7388
 10931                           
 10932                           ; BSR set to: 1
 10933  0058A6  0E00               	movlw	0
 10934  0058A8  0101               	movlb	1	; () banked
 10935  0058AA  1B2C               	xorwf	___ftsub@f2& (0+255),f,b
 10936  0058AC  0E00               	movlw	0
 10937  0058AE  0101               	movlb	1	; () banked
 10938  0058B0  1B2D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10939  0058B2  0E80               	movlw	128
 10940  0058B4  0101               	movlb	1	; () banked
 10941  0058B6  1B2E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10942  0058B8                     l7388:
 10943                           
 10944                           ; BSR set to: 1
 10945  0058B8  C129  F11D         	movff	___ftsub@f1,___ftadd@f1
 10946  0058BC  C12A  F11E         	movff	___ftsub@f1+1,___ftadd@f1+1
 10947  0058C0  C12B  F11F         	movff	___ftsub@f1+2,___ftadd@f1+2
 10948  0058C4  C12C  F120         	movff	___ftsub@f2,___ftadd@f2
 10949  0058C8  C12D  F121         	movff	___ftsub@f2+1,___ftadd@f2+1
 10950  0058CC  C12E  F122         	movff	___ftsub@f2+2,___ftadd@f2+2
 10951  0058D0  EC38  F01B         	call	___ftadd	;wreg free
 10952  0058D4  C11D  F129         	movff	?___ftadd,?___ftsub
 10953  0058D8  C11E  F12A         	movff	?___ftadd+1,?___ftsub+1
 10954  0058DC  C11F  F12B         	movff	?___ftadd+2,?___ftsub+2
 10955  0058E0  0012               	return	
 10956  0058E2                     __end_of___ftsub:
 10957                           	opt stack 0
 10958                           tblptru	equ	0xFF8
 10959                           tblptrh	equ	0xFF7
 10960                           tblptrl	equ	0xFF6
 10961                           tablat	equ	0xFF5
 10962                           prodh	equ	0xFF4
 10963                           prodl	equ	0xFF3
 10964                           intcon	equ	0xFF2
 10965                           intcon3	equ	0xFF0
 10966                           postinc0	equ	0xFEE
 10967                           wreg	equ	0xFE8
 10968                           indf2	equ	0xFDF
 10969                           postinc2	equ	0xFDE
 10970                           postdec2	equ	0xFDD
 10971                           fsr2h	equ	0xFDA
 10972                           fsr2l	equ	0xFD9
 10973                           status	equ	0xFD8
 10974                           
 10975 ;; *************** function ___ftadd *****************
 10976 ;; Defined at:
 10977 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 10978 ;; Parameters:    Size  Location     Type
 10979 ;;  f1              3   29[BANK1 ] float 
 10980 ;;  f2              3   32[BANK1 ] float 
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  exp1            1   40[BANK1 ] unsigned char 
 10983 ;;  exp2            1   39[BANK1 ] unsigned char 
 10984 ;;  sign            1   38[BANK1 ] unsigned char 
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  3   29[BANK1 ] float 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2, status,0, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10994 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10998 ;;Total ram usage:       12 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:    6
 11001 ;; This function calls:
 11002 ;;		___ftpack
 11003 ;; This function is called by:
 11004 ;;		_sort
 11005 ;;		_printf
 11006 ;;		___ftsub
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text32
 11011  003670                     __ptext32:
 11012                           	opt stack 0
 11013  003670                     ___ftadd:
 11014                           	opt stack 21
 11015                           
 11016                           ;incstack = 0
 11017  003670  C11F  F123         	movff	___ftadd@f1+2,??___ftadd
 11018  003674  0101               	movlb	1	; () banked
 11019  003676  6B24               	clrf	(??___ftadd+1)& (0+255),b
 11020  003678  6B25               	clrf	(??___ftadd+2)& (0+255),b
 11021  00367A  0101               	movlb	1	; () banked
 11022  00367C  351E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11023  00367E  0101               	movlb	1	; () banked
 11024  003680  3723               	rlcf	??___ftadd& (0+255),f,b
 11025  003682  E301               	bnc	u9381
 11026  003684  8124               	bsf	(??___ftadd+1)& (0+255),0,b
 11027  003686                     u9381:
 11028  003686  0101               	movlb	1	; () banked
 11029  003688  5123               	movf	??___ftadd& (0+255),w,b
 11030  00368A  0101               	movlb	1	; () banked
 11031  00368C  6F28               	movwf	___ftadd@exp1& (0+255),b
 11032  00368E  C122  F123         	movff	___ftadd@f2+2,??___ftadd
 11033  003692  0101               	movlb	1	; () banked
 11034  003694  6B24               	clrf	(??___ftadd+1)& (0+255),b
 11035  003696  6B25               	clrf	(??___ftadd+2)& (0+255),b
 11036  003698  0101               	movlb	1	; () banked
 11037  00369A  3521               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11038  00369C  0101               	movlb	1	; () banked
 11039  00369E  3723               	rlcf	??___ftadd& (0+255),f,b
 11040  0036A0  E301               	bnc	u9391
 11041  0036A2  8124               	bsf	(??___ftadd+1)& (0+255),0,b
 11042  0036A4                     u9391:
 11043  0036A4  0101               	movlb	1	; () banked
 11044  0036A6  5123               	movf	??___ftadd& (0+255),w,b
 11045  0036A8  0101               	movlb	1	; () banked
 11046  0036AA  6F27               	movwf	___ftadd@exp2& (0+255),b
 11047                           
 11048                           ; BSR set to: 1
 11049  0036AC  0101               	movlb	1	; () banked
 11050  0036AE  5128               	movf	___ftadd@exp1& (0+255),w,b
 11051  0036B0  0101               	movlb	1	; () banked
 11052  0036B2  B4D8               	btfsc	status,2,c
 11053  0036B4  D011               	goto	l942
 11054                           
 11055                           ; BSR set to: 1
 11056  0036B6  0101               	movlb	1	; () banked
 11057  0036B8  5127               	movf	___ftadd@exp2& (0+255),w,b
 11058  0036BA  0101               	movlb	1	; () banked
 11059  0036BC  5D28               	subwf	___ftadd@exp1& (0+255),w,b
 11060  0036BE  B0D8               	btfsc	status,0,c
 11061  0036C0  D012               	goto	l7214
 11062                           
 11063                           ; BSR set to: 1
 11064  0036C2  0101               	movlb	1	; () banked
 11065  0036C4  5128               	movf	___ftadd@exp1& (0+255),w,b
 11066  0036C6  0800               	sublw	0
 11067  0036C8  0101               	movlb	1	; () banked
 11068  0036CA  2527               	addwf	___ftadd@exp2& (0+255),w,b
 11069  0036CC  0101               	movlb	1	; () banked
 11070  0036CE  6F23               	movwf	??___ftadd& (0+255),b
 11071  0036D0  0E18               	movlw	24
 11072  0036D2  0101               	movlb	1	; () banked
 11073  0036D4  6523               	cpfsgt	??___ftadd& (0+255),b
 11074  0036D6  D007               	goto	l7214
 11075  0036D8                     l942:
 11076                           
 11077                           ; BSR set to: 1
 11078  0036D8  C120  F11D         	movff	___ftadd@f2,?___ftadd
 11079  0036DC  C121  F11E         	movff	___ftadd@f2+1,?___ftadd+1
 11080  0036E0  C122  F11F         	movff	___ftadd@f2+2,?___ftadd+2
 11081  0036E4  0012               	return	
 11082  0036E6                     l7214:
 11083                           
 11084                           ; BSR set to: 1
 11085  0036E6  0101               	movlb	1	; () banked
 11086  0036E8  5127               	movf	___ftadd@exp2& (0+255),w,b
 11087  0036EA  0101               	movlb	1	; () banked
 11088  0036EC  B4D8               	btfsc	status,2,c
 11089  0036EE  D011               	goto	l946
 11090                           
 11091                           ; BSR set to: 1
 11092  0036F0  0101               	movlb	1	; () banked
 11093  0036F2  5128               	movf	___ftadd@exp1& (0+255),w,b
 11094  0036F4  0101               	movlb	1	; () banked
 11095  0036F6  5D27               	subwf	___ftadd@exp2& (0+255),w,b
 11096  0036F8  B0D8               	btfsc	status,0,c
 11097  0036FA  D012               	goto	l7220
 11098                           
 11099                           ; BSR set to: 1
 11100  0036FC  0101               	movlb	1	; () banked
 11101  0036FE  5127               	movf	___ftadd@exp2& (0+255),w,b
 11102  003700  0800               	sublw	0
 11103  003702  0101               	movlb	1	; () banked
 11104  003704  2528               	addwf	___ftadd@exp1& (0+255),w,b
 11105  003706  0101               	movlb	1	; () banked
 11106  003708  6F23               	movwf	??___ftadd& (0+255),b
 11107  00370A  0E18               	movlw	24
 11108  00370C  0101               	movlb	1	; () banked
 11109  00370E  6523               	cpfsgt	??___ftadd& (0+255),b
 11110  003710  D007               	goto	l7220
 11111  003712                     l946:
 11112                           
 11113                           ; BSR set to: 1
 11114  003712  C11D  F11D         	movff	___ftadd@f1,?___ftadd
 11115  003716  C11E  F11E         	movff	___ftadd@f1+1,?___ftadd+1
 11116  00371A  C11F  F11F         	movff	___ftadd@f1+2,?___ftadd+2
 11117  00371E  0012               	return	
 11118  003720                     l7220:
 11119                           
 11120                           ; BSR set to: 1
 11121  003720  0E06               	movlw	6
 11122  003722  0101               	movlb	1	; () banked
 11123  003724  6F26               	movwf	___ftadd@sign& (0+255),b
 11124                           
 11125                           ; BSR set to: 1
 11126  003726  0101               	movlb	1	; () banked
 11127  003728  AF1F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11128  00372A  D002               	goto	l7226
 11129                           
 11130                           ; BSR set to: 1
 11131  00372C  0101               	movlb	1	; () banked
 11132  00372E  8F26               	bsf	___ftadd@sign& (0+255),7,b
 11133  003730                     l7226:
 11134                           
 11135                           ; BSR set to: 1
 11136  003730  0101               	movlb	1	; () banked
 11137  003732  AF22               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11138  003734  D002               	goto	l948
 11139                           
 11140                           ; BSR set to: 1
 11141  003736  0101               	movlb	1	; () banked
 11142  003738  8D26               	bsf	___ftadd@sign& (0+255),6,b
 11143  00373A                     l948:
 11144                           
 11145                           ; BSR set to: 1
 11146  00373A  0101               	movlb	1	; () banked
 11147  00373C  8F1E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11148                           
 11149                           ; BSR set to: 1
 11150  00373E  0EFF               	movlw	255
 11151  003740  0101               	movlb	1	; () banked
 11152  003742  171D               	andwf	___ftadd@f1& (0+255),f,b
 11153  003744  0EFF               	movlw	255
 11154  003746  0101               	movlb	1	; () banked
 11155  003748  171E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11156  00374A  0E00               	movlw	0
 11157  00374C  0101               	movlb	1	; () banked
 11158  00374E  171F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11159  003750  0101               	movlb	1	; () banked
 11160  003752  8F21               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11161                           
 11162                           ; BSR set to: 1
 11163  003754  0EFF               	movlw	255
 11164  003756  0101               	movlb	1	; () banked
 11165  003758  1720               	andwf	___ftadd@f2& (0+255),f,b
 11166  00375A  0EFF               	movlw	255
 11167  00375C  0101               	movlb	1	; () banked
 11168  00375E  1721               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11169  003760  0E00               	movlw	0
 11170  003762  0101               	movlb	1	; () banked
 11171  003764  1722               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11172                           
 11173                           ; BSR set to: 1
 11174  003766  0101               	movlb	1	; () banked
 11175  003768  5127               	movf	___ftadd@exp2& (0+255),w,b
 11176  00376A  0101               	movlb	1	; () banked
 11177  00376C  5D28               	subwf	___ftadd@exp1& (0+255),w,b
 11178  00376E  B0D8               	btfsc	status,0,c
 11179  003770  D025               	goto	l7246
 11180  003772                     l7236:
 11181                           
 11182                           ; BSR set to: 1
 11183  003772  0101               	movlb	1	; () banked
 11184  003774  90D8               	bcf	status,0,c
 11185  003776  3720               	rlcf	___ftadd@f2& (0+255),f,b
 11186  003778  3721               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11187  00377A  3722               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11188  00377C  0101               	movlb	1	; () banked
 11189  00377E  0727               	decf	___ftadd@exp2& (0+255),f,b
 11190                           
 11191                           ; BSR set to: 1
 11192  003780  0101               	movlb	1	; () banked
 11193  003782  5128               	movf	___ftadd@exp1& (0+255),w,b
 11194  003784  0101               	movlb	1	; () banked
 11195  003786  1927               	xorwf	___ftadd@exp2& (0+255),w,b
 11196  003788  B4D8               	btfsc	status,2,c
 11197  00378A  D011               	goto	l7244
 11198                           
 11199                           ; BSR set to: 1
 11200  00378C  0101               	movlb	1	; () banked
 11201  00378E  0726               	decf	___ftadd@sign& (0+255),f,b
 11202  003790  C126  F123         	movff	___ftadd@sign,??___ftadd
 11203  003794  0E07               	movlw	7
 11204  003796  0101               	movlb	1	; () banked
 11205  003798  1723               	andwf	??___ftadd& (0+255),f,b
 11206  00379A  B4D8               	btfsc	status,2,c
 11207  00379C  D008               	goto	l7244
 11208  00379E  D7E9               	goto	l7236
 11209  0037A0                     l7242:
 11210                           
 11211                           ; BSR set to: 1
 11212  0037A0  0101               	movlb	1	; () banked
 11213  0037A2  90D8               	bcf	status,0,c
 11214  0037A4  331F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 11215  0037A6  331E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 11216  0037A8  331D               	rrcf	___ftadd@f1& (0+255),f,b
 11217  0037AA  0101               	movlb	1	; () banked
 11218  0037AC  2B28               	incf	___ftadd@exp1& (0+255),f,b
 11219  0037AE                     l7244:
 11220                           
 11221                           ; BSR set to: 1
 11222  0037AE  0101               	movlb	1	; () banked
 11223  0037B0  5127               	movf	___ftadd@exp2& (0+255),w,b
 11224  0037B2  0101               	movlb	1	; () banked
 11225  0037B4  1928               	xorwf	___ftadd@exp1& (0+255),w,b
 11226  0037B6  B4D8               	btfsc	status,2,c
 11227  0037B8  D02B               	goto	l957
 11228  0037BA  D7F2               	goto	l7242
 11229  0037BC                     l7246:
 11230                           
 11231                           ; BSR set to: 1
 11232  0037BC  0101               	movlb	1	; () banked
 11233  0037BE  5128               	movf	___ftadd@exp1& (0+255),w,b
 11234  0037C0  0101               	movlb	1	; () banked
 11235  0037C2  5D27               	subwf	___ftadd@exp2& (0+255),w,b
 11236  0037C4  B0D8               	btfsc	status,0,c
 11237  0037C6  D024               	goto	l957
 11238  0037C8                     l7248:
 11239                           
 11240                           ; BSR set to: 1
 11241  0037C8  0101               	movlb	1	; () banked
 11242  0037CA  90D8               	bcf	status,0,c
 11243  0037CC  371D               	rlcf	___ftadd@f1& (0+255),f,b
 11244  0037CE  371E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 11245  0037D0  371F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 11246  0037D2  0101               	movlb	1	; () banked
 11247  0037D4  0728               	decf	___ftadd@exp1& (0+255),f,b
 11248                           
 11249                           ; BSR set to: 1
 11250  0037D6  0101               	movlb	1	; () banked
 11251  0037D8  5128               	movf	___ftadd@exp1& (0+255),w,b
 11252  0037DA  0101               	movlb	1	; () banked
 11253  0037DC  1927               	xorwf	___ftadd@exp2& (0+255),w,b
 11254  0037DE  B4D8               	btfsc	status,2,c
 11255  0037E0  D011               	goto	l7256
 11256                           
 11257                           ; BSR set to: 1
 11258  0037E2  0101               	movlb	1	; () banked
 11259  0037E4  0726               	decf	___ftadd@sign& (0+255),f,b
 11260  0037E6  C126  F123         	movff	___ftadd@sign,??___ftadd
 11261  0037EA  0E07               	movlw	7
 11262  0037EC  0101               	movlb	1	; () banked
 11263  0037EE  1723               	andwf	??___ftadd& (0+255),f,b
 11264  0037F0  B4D8               	btfsc	status,2,c
 11265  0037F2  D008               	goto	l7256
 11266  0037F4  D7E9               	goto	l7248
 11267  0037F6                     l7254:
 11268                           
 11269                           ; BSR set to: 1
 11270  0037F6  0101               	movlb	1	; () banked
 11271  0037F8  90D8               	bcf	status,0,c
 11272  0037FA  3322               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 11273  0037FC  3321               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 11274  0037FE  3320               	rrcf	___ftadd@f2& (0+255),f,b
 11275  003800  0101               	movlb	1	; () banked
 11276  003802  2B27               	incf	___ftadd@exp2& (0+255),f,b
 11277  003804                     l7256:
 11278                           
 11279                           ; BSR set to: 1
 11280  003804  0101               	movlb	1	; () banked
 11281  003806  5127               	movf	___ftadd@exp2& (0+255),w,b
 11282  003808  0101               	movlb	1	; () banked
 11283  00380A  1928               	xorwf	___ftadd@exp1& (0+255),w,b
 11284  00380C  A4D8               	btfss	status,2,c
 11285  00380E  D7F3               	goto	l7254
 11286  003810                     l957:
 11287                           
 11288                           ; BSR set to: 1
 11289  003810  0101               	movlb	1	; () banked
 11290  003812  AF26               	btfss	___ftadd@sign& (0+255),7,b
 11291  003814  D012               	goto	l966
 11292                           
 11293                           ; BSR set to: 1
 11294  003816  0EFF               	movlw	255
 11295  003818  0101               	movlb	1	; () banked
 11296  00381A  1B1D               	xorwf	___ftadd@f1& (0+255),f,b
 11297  00381C  0EFF               	movlw	255
 11298  00381E  0101               	movlb	1	; () banked
 11299  003820  1B1E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 11300  003822  0EFF               	movlw	255
 11301  003824  0101               	movlb	1	; () banked
 11302  003826  1B1F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 11303  003828  0E01               	movlw	1
 11304  00382A  0101               	movlb	1	; () banked
 11305  00382C  271D               	addwf	___ftadd@f1& (0+255),f,b
 11306  00382E  0E00               	movlw	0
 11307  003830  0101               	movlb	1	; () banked
 11308  003832  231E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 11309  003834  0E00               	movlw	0
 11310  003836  0101               	movlb	1	; () banked
 11311  003838  231F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 11312  00383A                     l966:
 11313                           
 11314                           ; BSR set to: 1
 11315  00383A  0101               	movlb	1	; () banked
 11316  00383C  AD26               	btfss	___ftadd@sign& (0+255),6,b
 11317  00383E  D012               	goto	l7262
 11318                           
 11319                           ; BSR set to: 1
 11320  003840  0EFF               	movlw	255
 11321  003842  0101               	movlb	1	; () banked
 11322  003844  1B20               	xorwf	___ftadd@f2& (0+255),f,b
 11323  003846  0EFF               	movlw	255
 11324  003848  0101               	movlb	1	; () banked
 11325  00384A  1B21               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11326  00384C  0EFF               	movlw	255
 11327  00384E  0101               	movlb	1	; () banked
 11328  003850  1B22               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11329  003852  0E01               	movlw	1
 11330  003854  0101               	movlb	1	; () banked
 11331  003856  2720               	addwf	___ftadd@f2& (0+255),f,b
 11332  003858  0E00               	movlw	0
 11333  00385A  0101               	movlb	1	; () banked
 11334  00385C  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11335  00385E  0E00               	movlw	0
 11336  003860  0101               	movlb	1	; () banked
 11337  003862  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11338  003864                     l7262:
 11339                           
 11340                           ; BSR set to: 1
 11341  003864  0E00               	movlw	0
 11342  003866  0101               	movlb	1	; () banked
 11343  003868  6F26               	movwf	___ftadd@sign& (0+255),b
 11344                           
 11345                           ; BSR set to: 1
 11346  00386A  0101               	movlb	1	; () banked
 11347  00386C  511D               	movf	___ftadd@f1& (0+255),w,b
 11348  00386E  0101               	movlb	1	; () banked
 11349  003870  2720               	addwf	___ftadd@f2& (0+255),f,b
 11350  003872  0101               	movlb	1	; () banked
 11351  003874  511E               	movf	(___ftadd@f1+1)& (0+255),w,b
 11352  003876  0101               	movlb	1	; () banked
 11353  003878  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11354  00387A  0101               	movlb	1	; () banked
 11355  00387C  511F               	movf	(___ftadd@f1+2)& (0+255),w,b
 11356  00387E  0101               	movlb	1	; () banked
 11357  003880  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11358                           
 11359                           ; BSR set to: 1
 11360  003882  0101               	movlb	1	; () banked
 11361  003884  AF22               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11362  003886  D015               	goto	l7272
 11363                           
 11364                           ; BSR set to: 1
 11365  003888  0EFF               	movlw	255
 11366  00388A  0101               	movlb	1	; () banked
 11367  00388C  1B20               	xorwf	___ftadd@f2& (0+255),f,b
 11368  00388E  0EFF               	movlw	255
 11369  003890  0101               	movlb	1	; () banked
 11370  003892  1B21               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 11371  003894  0EFF               	movlw	255
 11372  003896  0101               	movlb	1	; () banked
 11373  003898  1B22               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 11374  00389A  0E01               	movlw	1
 11375  00389C  0101               	movlb	1	; () banked
 11376  00389E  2720               	addwf	___ftadd@f2& (0+255),f,b
 11377  0038A0  0E00               	movlw	0
 11378  0038A2  0101               	movlb	1	; () banked
 11379  0038A4  2321               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 11380  0038A6  0E00               	movlw	0
 11381  0038A8  0101               	movlb	1	; () banked
 11382  0038AA  2322               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 11383                           
 11384                           ; BSR set to: 1
 11385  0038AC  0E01               	movlw	1
 11386  0038AE  0101               	movlb	1	; () banked
 11387  0038B0  6F26               	movwf	___ftadd@sign& (0+255),b
 11388  0038B2                     l7272:
 11389                           
 11390                           ; BSR set to: 1
 11391  0038B2  C120  F0B7         	movff	___ftadd@f2,___ftpack@arg
 11392  0038B6  C121  F0B8         	movff	___ftadd@f2+1,___ftpack@arg+1
 11393  0038BA  C122  F0B9         	movff	___ftadd@f2+2,___ftpack@arg+2
 11394  0038BE  C128  F0BA         	movff	___ftadd@exp1,___ftpack@exp
 11395  0038C2  C126  F0BB         	movff	___ftadd@sign,___ftpack@sign
 11396  0038C6  ECBA  F023         	call	___ftpack	;wreg free
 11397  0038CA  C0B7  F11D         	movff	?___ftpack,?___ftadd
 11398  0038CE  C0B8  F11E         	movff	?___ftpack+1,?___ftadd+1
 11399  0038D2  C0B9  F11F         	movff	?___ftpack+2,?___ftadd+2
 11400  0038D6  0012               	return	
 11401  0038D8                     __end_of___ftadd:
 11402                           	opt stack 0
 11403                           tblptru	equ	0xFF8
 11404                           tblptrh	equ	0xFF7
 11405                           tblptrl	equ	0xFF6
 11406                           tablat	equ	0xFF5
 11407                           prodh	equ	0xFF4
 11408                           prodl	equ	0xFF3
 11409                           intcon	equ	0xFF2
 11410                           intcon3	equ	0xFF0
 11411                           postinc0	equ	0xFEE
 11412                           wreg	equ	0xFE8
 11413                           indf2	equ	0xFDF
 11414                           postinc2	equ	0xFDE
 11415                           postdec2	equ	0xFDD
 11416                           fsr2h	equ	0xFDA
 11417                           fsr2l	equ	0xFD9
 11418                           status	equ	0xFD8
 11419                           
 11420 ;; *************** function ___ftpack *****************
 11421 ;; Defined at:
 11422 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 11423 ;; Parameters:    Size  Location     Type
 11424 ;;  arg             3   55[BANK0 ] unsigned um
 11425 ;;  exp             1   58[BANK0 ] unsigned char 
 11426 ;;  sign            1   59[BANK0 ] unsigned char 
 11427 ;; Auto vars:     Size  Location     Type
 11428 ;;		None
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  3   55[BANK0 ] float 
 11431 ;; Registers used:
 11432 ;;		wreg, status,2, status,0
 11433 ;; Tracked objects:
 11434 ;;		On entry : 0/0
 11435 ;;		On exit  : 0/0
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11438 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11440 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11441 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11442 ;;Total ram usage:        8 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:    5
 11445 ;; This function calls:
 11446 ;;		Nothing
 11447 ;; This function is called by:
 11448 ;;		___awtoft
 11449 ;;		___ftadd
 11450 ;;		___ftdiv
 11451 ;;		___ftmul
 11452 ;;		___lltoft
 11453 ;; This function uses a non-reentrant model
 11454 ;;
 11455                           
 11456                           	psect	text33
 11457  004774                     __ptext33:
 11458                           	opt stack 0
 11459  004774                     ___ftpack:
 11460                           	opt stack 22
 11461                           
 11462                           ;incstack = 0
 11463  004774  0100               	movlb	0	; () banked
 11464  004776  51BA               	movf	___ftpack@exp& (0+255),w,b
 11465  004778  0100               	movlb	0	; () banked
 11466  00477A  B4D8               	btfsc	status,2,c
 11467  00477C  D008               	goto	l7168
 11468                           
 11469                           ; BSR set to: 0
 11470  00477E  0100               	movlb	0	; () banked
 11471  004780  51B7               	movf	___ftpack@arg& (0+255),w,b
 11472  004782  0100               	movlb	0	; () banked
 11473  004784  11B8               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 11474  004786  0100               	movlb	0	; () banked
 11475  004788  11B9               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 11476  00478A  A4D8               	btfss	status,2,c
 11477  00478C  D011               	goto	l7174
 11478  00478E                     l7168:
 11479                           
 11480                           ; BSR set to: 0
 11481  00478E  0E00               	movlw	0
 11482  004790  0100               	movlb	0	; () banked
 11483  004792  6FB7               	movwf	?___ftpack& (0+255),b
 11484  004794  0E00               	movlw	0
 11485  004796  0100               	movlb	0	; () banked
 11486  004798  6FB8               	movwf	(?___ftpack+1)& (0+255),b
 11487  00479A  0E00               	movlw	0
 11488  00479C  0100               	movlb	0	; () banked
 11489  00479E  6FB9               	movwf	(?___ftpack+2)& (0+255),b
 11490                           
 11491                           ; BSR set to: 0
 11492  0047A0  0012               	return	
 11493  0047A2                     l7172:
 11494                           
 11495                           ; BSR set to: 0
 11496  0047A2  0100               	movlb	0	; () banked
 11497  0047A4  2BBA               	incf	___ftpack@exp& (0+255),f,b
 11498  0047A6  0100               	movlb	0	; () banked
 11499  0047A8  90D8               	bcf	status,0,c
 11500  0047AA  33B9               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11501  0047AC  33B8               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11502  0047AE  33B7               	rrcf	___ftpack@arg& (0+255),f,b
 11503  0047B0                     l7174:
 11504                           
 11505                           ; BSR set to: 0
 11506  0047B0  0E00               	movlw	0
 11507  0047B2  0100               	movlb	0	; () banked
 11508  0047B4  15B7               	andwf	___ftpack@arg& (0+255),w,b
 11509  0047B6  0100               	movlb	0	; () banked
 11510  0047B8  6FBC               	movwf	??___ftpack& (0+255),b
 11511  0047BA  0E00               	movlw	0
 11512  0047BC  0100               	movlb	0	; () banked
 11513  0047BE  15B8               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11514  0047C0  0100               	movlb	0	; () banked
 11515  0047C2  6FBD               	movwf	(??___ftpack+1)& (0+255),b
 11516  0047C4  0EFE               	movlw	254
 11517  0047C6  0100               	movlb	0	; () banked
 11518  0047C8  15B9               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11519  0047CA  0100               	movlb	0	; () banked
 11520  0047CC  6FBE               	movwf	(??___ftpack+2)& (0+255),b
 11521  0047CE  0100               	movlb	0	; () banked
 11522  0047D0  51BC               	movf	??___ftpack& (0+255),w,b
 11523  0047D2  0100               	movlb	0	; () banked
 11524  0047D4  11BD               	iorwf	(??___ftpack+1)& (0+255),w,b
 11525  0047D6  0100               	movlb	0	; () banked
 11526  0047D8  11BE               	iorwf	(??___ftpack+2)& (0+255),w,b
 11527  0047DA  B4D8               	btfsc	status,2,c
 11528  0047DC  D011               	goto	l7180
 11529  0047DE  D7E1               	goto	l7172
 11530  0047E0                     l7176:
 11531                           
 11532                           ; BSR set to: 0
 11533  0047E0  0100               	movlb	0	; () banked
 11534  0047E2  2BBA               	incf	___ftpack@exp& (0+255),f,b
 11535                           
 11536                           ; BSR set to: 0
 11537  0047E4  0E01               	movlw	1
 11538  0047E6  0100               	movlb	0	; () banked
 11539  0047E8  27B7               	addwf	___ftpack@arg& (0+255),f,b
 11540  0047EA  0E00               	movlw	0
 11541  0047EC  0100               	movlb	0	; () banked
 11542  0047EE  23B8               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 11543  0047F0  0E00               	movlw	0
 11544  0047F2  0100               	movlb	0	; () banked
 11545  0047F4  23B9               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 11546  0047F6  0100               	movlb	0	; () banked
 11547  0047F8  90D8               	bcf	status,0,c
 11548  0047FA  33B9               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 11549  0047FC  33B8               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 11550  0047FE  33B7               	rrcf	___ftpack@arg& (0+255),f,b
 11551  004800                     l7180:
 11552                           
 11553                           ; BSR set to: 0
 11554  004800  0E00               	movlw	0
 11555  004802  0100               	movlb	0	; () banked
 11556  004804  15B7               	andwf	___ftpack@arg& (0+255),w,b
 11557  004806  0100               	movlb	0	; () banked
 11558  004808  6FBC               	movwf	??___ftpack& (0+255),b
 11559  00480A  0E00               	movlw	0
 11560  00480C  0100               	movlb	0	; () banked
 11561  00480E  15B8               	andwf	(___ftpack@arg+1)& (0+255),w,b
 11562  004810  0100               	movlb	0	; () banked
 11563  004812  6FBD               	movwf	(??___ftpack+1)& (0+255),b
 11564  004814  0EFF               	movlw	255
 11565  004816  0100               	movlb	0	; () banked
 11566  004818  15B9               	andwf	(___ftpack@arg+2)& (0+255),w,b
 11567  00481A  0100               	movlb	0	; () banked
 11568  00481C  6FBE               	movwf	(??___ftpack+2)& (0+255),b
 11569  00481E  0100               	movlb	0	; () banked
 11570  004820  51BC               	movf	??___ftpack& (0+255),w,b
 11571  004822  0100               	movlb	0	; () banked
 11572  004824  11BD               	iorwf	(??___ftpack+1)& (0+255),w,b
 11573  004826  0100               	movlb	0	; () banked
 11574  004828  11BE               	iorwf	(??___ftpack+2)& (0+255),w,b
 11575  00482A  B4D8               	btfsc	status,2,c
 11576  00482C  D008               	goto	l7184
 11577  00482E  D7D8               	goto	l7176
 11578  004830                     l7182:
 11579                           
 11580                           ; BSR set to: 0
 11581  004830  0100               	movlb	0	; () banked
 11582  004832  07BA               	decf	___ftpack@exp& (0+255),f,b
 11583  004834  0100               	movlb	0	; () banked
 11584  004836  90D8               	bcf	status,0,c
 11585  004838  37B7               	rlcf	___ftpack@arg& (0+255),f,b
 11586  00483A  37B8               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 11587  00483C  37B9               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 11588  00483E                     l7184:
 11589                           
 11590                           ; BSR set to: 0
 11591  00483E  0100               	movlb	0	; () banked
 11592  004840  BFB8               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 11593  004842  D004               	goto	l919
 11594                           
 11595                           ; BSR set to: 0
 11596  004844  0E02               	movlw	2
 11597  004846  0100               	movlb	0	; () banked
 11598  004848  61BA               	cpfslt	___ftpack@exp& (0+255),b
 11599  00484A  D7F2               	goto	l7182
 11600  00484C                     l919:
 11601                           
 11602                           ; BSR set to: 0
 11603  00484C  0100               	movlb	0	; () banked
 11604  00484E  B1BA               	btfsc	___ftpack@exp& (0+255),0,b
 11605  004850  D002               	goto	l7190
 11606                           
 11607                           ; BSR set to: 0
 11608  004852  0100               	movlb	0	; () banked
 11609  004854  9FB8               	bcf	(___ftpack@arg+1)& (0+255),7,b
 11610  004856                     l7190:
 11611                           
 11612                           ; BSR set to: 0
 11613  004856  0100               	movlb	0	; () banked
 11614  004858  90D8               	bcf	status,0,c
 11615  00485A  33BA               	rrcf	___ftpack@exp& (0+255),f,b
 11616  00485C  0100               	movlb	0	; () banked
 11617  00485E  51BA               	movf	___ftpack@exp& (0+255),w,b
 11618  004860  0100               	movlb	0	; () banked
 11619  004862  13B9               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 11620                           
 11621                           ; BSR set to: 0
 11622  004864  0100               	movlb	0	; () banked
 11623  004866  51BB               	movf	___ftpack@sign& (0+255),w,b
 11624  004868  0100               	movlb	0	; () banked
 11625  00486A  B4D8               	btfsc	status,2,c
 11626  00486C  D002               	goto	l7196
 11627                           
 11628                           ; BSR set to: 0
 11629  00486E  0100               	movlb	0	; () banked
 11630  004870  8FB9               	bsf	(___ftpack@arg+2)& (0+255),7,b
 11631  004872                     l7196:
 11632                           
 11633                           ; BSR set to: 0
 11634  004872  C0B7  F0B7         	movff	___ftpack@arg,?___ftpack
 11635  004876  C0B8  F0B8         	movff	___ftpack@arg+1,?___ftpack+1
 11636  00487A  C0B9  F0B9         	movff	___ftpack@arg+2,?___ftpack+2
 11637  00487E  0012               	return	
 11638  004880                     __end_of___ftpack:
 11639                           	opt stack 0
 11640                           tblptru	equ	0xFF8
 11641                           tblptrh	equ	0xFF7
 11642                           tblptrl	equ	0xFF6
 11643                           tablat	equ	0xFF5
 11644                           prodh	equ	0xFF4
 11645                           prodl	equ	0xFF3
 11646                           intcon	equ	0xFF2
 11647                           intcon3	equ	0xFF0
 11648                           postinc0	equ	0xFEE
 11649                           wreg	equ	0xFE8
 11650                           indf2	equ	0xFDF
 11651                           postinc2	equ	0xFDE
 11652                           postdec2	equ	0xFDD
 11653                           fsr2h	equ	0xFDA
 11654                           fsr2l	equ	0xFD9
 11655                           status	equ	0xFD8
 11656                           
 11657 ;; *************** function ___ftneg *****************
 11658 ;; Defined at:
 11659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 11660 ;; Parameters:    Size  Location     Type
 11661 ;;  f1              3   55[BANK0 ] float 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;		None
 11664 ;; Return value:  Size  Location     Type
 11665 ;;                  3   55[BANK0 ] float 
 11666 ;; Registers used:
 11667 ;;		wreg, status,2, status,0
 11668 ;; Tracked objects:
 11669 ;;		On entry : 0/0
 11670 ;;		On exit  : 0/0
 11671 ;;		Unchanged: 0/0
 11672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11673 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11677 ;;Total ram usage:        3 bytes
 11678 ;; Hardware stack levels used:    1
 11679 ;; Hardware stack levels required when called:    5
 11680 ;; This function calls:
 11681 ;;		Nothing
 11682 ;; This function is called by:
 11683 ;;		_printf
 11684 ;; This function uses a non-reentrant model
 11685 ;;
 11686                           
 11687                           	psect	text34
 11688  005C18                     __ptext34:
 11689                           	opt stack 0
 11690  005C18                     ___ftneg:
 11691                           	opt stack 23
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;incstack = 0
 11695  005C18  0100               	movlb	0	; () banked
 11696  005C1A  51B7               	movf	___ftneg@f1& (0+255),w,b
 11697  005C1C  0100               	movlb	0	; () banked
 11698  005C1E  11B8               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 11699  005C20  0100               	movlb	0	; () banked
 11700  005C22  11B9               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 11701  005C24  B4D8               	btfsc	status,2,c
 11702  005C26  D009               	goto	l1016
 11703                           
 11704                           ; BSR set to: 0
 11705  005C28  0E00               	movlw	0
 11706  005C2A  0100               	movlb	0	; () banked
 11707  005C2C  1BB7               	xorwf	___ftneg@f1& (0+255),f,b
 11708  005C2E  0E00               	movlw	0
 11709  005C30  0100               	movlb	0	; () banked
 11710  005C32  1BB8               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 11711  005C34  0E80               	movlw	128
 11712  005C36  0100               	movlb	0	; () banked
 11713  005C38  1BB9               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 11714  005C3A                     l1016:
 11715                           
 11716                           ; BSR set to: 0
 11717  005C3A  C0B7  F0B7         	movff	___ftneg@f1,?___ftneg
 11718  005C3E  C0B8  F0B8         	movff	___ftneg@f1+1,?___ftneg+1
 11719  005C42  C0B9  F0B9         	movff	___ftneg@f1+2,?___ftneg+2
 11720                           
 11721                           ; BSR set to: 0
 11722  005C46  0012               	return		;funcret
 11723  005C48                     __end_of___ftneg:
 11724                           	opt stack 0
 11725                           tblptru	equ	0xFF8
 11726                           tblptrh	equ	0xFF7
 11727                           tblptrl	equ	0xFF6
 11728                           tablat	equ	0xFF5
 11729                           prodh	equ	0xFF4
 11730                           prodl	equ	0xFF3
 11731                           intcon	equ	0xFF2
 11732                           intcon3	equ	0xFF0
 11733                           postinc0	equ	0xFEE
 11734                           wreg	equ	0xFE8
 11735                           indf2	equ	0xFDF
 11736                           postinc2	equ	0xFDE
 11737                           postdec2	equ	0xFDD
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function ___ftge *****************
 11743 ;; Defined at:
 11744 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;  ff1             3   55[BANK0 ] float 
 11747 ;;  ff2             3   58[BANK0 ] float 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;		None
 11750 ;; Return value:  Size  Location     Type
 11751 ;;		None               void
 11752 ;; Registers used:
 11753 ;;		wreg, status,2, status,0
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11759 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11761 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11762 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11763 ;;Total ram usage:        9 bytes
 11764 ;; Hardware stack levels used:    1
 11765 ;; Hardware stack levels required when called:    5
 11766 ;; This function calls:
 11767 ;;		Nothing
 11768 ;; This function is called by:
 11769 ;;		_sort
 11770 ;;		_printf
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text35
 11775  004E10                     __ptext35:
 11776                           	opt stack 0
 11777  004E10                     ___ftge:
 11778                           	opt stack 23
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;incstack = 0
 11782  004E10  0100               	movlb	0	; () banked
 11783  004E12  AFB9               	btfss	(___ftge@ff1+2)& (0+255),7,b
 11784  004E14  D01D               	goto	l4734
 11785                           
 11786                           ; BSR set to: 0
 11787  004E16  C0B7  F0BD         	movff	___ftge@ff1,??___ftge
 11788  004E1A  C0B8  F0BE         	movff	___ftge@ff1+1,??___ftge+1
 11789  004E1E  C0B9  F0BF         	movff	___ftge@ff1+2,??___ftge+2
 11790  004E22  0100               	movlb	0	; () banked
 11791  004E24  1FBD               	comf	??___ftge& (0+255),f,b
 11792  004E26  1FBE               	comf	(??___ftge+1)& (0+255),f,b
 11793  004E28  1FBF               	comf	(??___ftge+2)& (0+255),f,b
 11794  004E2A  2BBD               	incf	??___ftge& (0+255),f,b
 11795  004E2C  0E00               	movlw	0
 11796  004E2E  23BE               	addwfc	(??___ftge+1)& (0+255),f,b
 11797  004E30  23BF               	addwfc	(??___ftge+2)& (0+255),f,b
 11798  004E32  0E00               	movlw	0
 11799  004E34  0100               	movlb	0	; () banked
 11800  004E36  25BD               	addwf	??___ftge& (0+255),w,b
 11801  004E38  0100               	movlb	0	; () banked
 11802  004E3A  6FB7               	movwf	___ftge@ff1& (0+255),b
 11803  004E3C  0E00               	movlw	0
 11804  004E3E  0100               	movlb	0	; () banked
 11805  004E40  21BE               	addwfc	(??___ftge+1)& (0+255),w,b
 11806  004E42  0100               	movlb	0	; () banked
 11807  004E44  6FB8               	movwf	(___ftge@ff1+1)& (0+255),b
 11808  004E46  0E80               	movlw	128
 11809  004E48  0100               	movlb	0	; () banked
 11810  004E4A  21BF               	addwfc	(??___ftge+2)& (0+255),w,b
 11811  004E4C  0100               	movlb	0	; () banked
 11812  004E4E  6FB9               	movwf	(___ftge@ff1+2)& (0+255),b
 11813  004E50                     l4734:
 11814                           
 11815                           ; BSR set to: 0
 11816  004E50  0100               	movlb	0	; () banked
 11817  004E52  AFBC               	btfss	(___ftge@ff2+2)& (0+255),7,b
 11818  004E54  D01D               	goto	l4738
 11819                           
 11820                           ; BSR set to: 0
 11821  004E56  C0BA  F0BD         	movff	___ftge@ff2,??___ftge
 11822  004E5A  C0BB  F0BE         	movff	___ftge@ff2+1,??___ftge+1
 11823  004E5E  C0BC  F0BF         	movff	___ftge@ff2+2,??___ftge+2
 11824  004E62  0100               	movlb	0	; () banked
 11825  004E64  1FBD               	comf	??___ftge& (0+255),f,b
 11826  004E66  1FBE               	comf	(??___ftge+1)& (0+255),f,b
 11827  004E68  1FBF               	comf	(??___ftge+2)& (0+255),f,b
 11828  004E6A  2BBD               	incf	??___ftge& (0+255),f,b
 11829  004E6C  0E00               	movlw	0
 11830  004E6E  23BE               	addwfc	(??___ftge+1)& (0+255),f,b
 11831  004E70  23BF               	addwfc	(??___ftge+2)& (0+255),f,b
 11832  004E72  0E00               	movlw	0
 11833  004E74  0100               	movlb	0	; () banked
 11834  004E76  25BD               	addwf	??___ftge& (0+255),w,b
 11835  004E78  0100               	movlb	0	; () banked
 11836  004E7A  6FBA               	movwf	___ftge@ff2& (0+255),b
 11837  004E7C  0E00               	movlw	0
 11838  004E7E  0100               	movlb	0	; () banked
 11839  004E80  21BE               	addwfc	(??___ftge+1)& (0+255),w,b
 11840  004E82  0100               	movlb	0	; () banked
 11841  004E84  6FBB               	movwf	(___ftge@ff2+1)& (0+255),b
 11842  004E86  0E80               	movlw	128
 11843  004E88  0100               	movlb	0	; () banked
 11844  004E8A  21BF               	addwfc	(??___ftge+2)& (0+255),w,b
 11845  004E8C  0100               	movlb	0	; () banked
 11846  004E8E  6FBC               	movwf	(___ftge@ff2+2)& (0+255),b
 11847  004E90                     l4738:
 11848                           
 11849                           ; BSR set to: 0
 11850  004E90  0E00               	movlw	0
 11851  004E92  0100               	movlb	0	; () banked
 11852  004E94  1BB7               	xorwf	___ftge@ff1& (0+255),f,b
 11853  004E96  0E00               	movlw	0
 11854  004E98  0100               	movlb	0	; () banked
 11855  004E9A  1BB8               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 11856  004E9C  0E80               	movlw	128
 11857  004E9E  0100               	movlb	0	; () banked
 11858  004EA0  1BB9               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 11859                           
 11860                           ; BSR set to: 0
 11861  004EA2  0E00               	movlw	0
 11862  004EA4  0100               	movlb	0	; () banked
 11863  004EA6  1BBA               	xorwf	___ftge@ff2& (0+255),f,b
 11864  004EA8  0E00               	movlw	0
 11865  004EAA  0100               	movlb	0	; () banked
 11866  004EAC  1BBB               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 11867  004EAE  0E80               	movlw	128
 11868  004EB0  0100               	movlb	0	; () banked
 11869  004EB2  1BBC               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 11870  004EB4  0100               	movlb	0	; () banked
 11871  004EB6  51BA               	movf	___ftge@ff2& (0+255),w,b
 11872  004EB8  0100               	movlb	0	; () banked
 11873  004EBA  5DB7               	subwf	___ftge@ff1& (0+255),w,b
 11874  004EBC  0100               	movlb	0	; () banked
 11875  004EBE  51BB               	movf	(___ftge@ff2+1)& (0+255),w,b
 11876  004EC0  0100               	movlb	0	; () banked
 11877  004EC2  59B8               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 11878  004EC4  0100               	movlb	0	; () banked
 11879  004EC6  51BC               	movf	(___ftge@ff2+2)& (0+255),w,b
 11880  004EC8  0100               	movlb	0	; () banked
 11881  004ECA  59B9               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 11882  004ECC  B0D8               	btfsc	status,0,c
 11883  004ECE  D002               	goto	l4744
 11884                           
 11885                           ; BSR set to: 0
 11886  004ED0  90D8               	bcf	status,0,c
 11887  004ED2  0012               	return	
 11888  004ED4                     l4744:
 11889                           
 11890                           ; BSR set to: 0
 11891  004ED4  80D8               	bsf	status,0,c
 11892                           
 11893                           ; BSR set to: 0
 11894  004ED6  0012               	return	
 11895  004ED8                     __end_of___ftge:
 11896                           	opt stack 0
 11897                           tblptru	equ	0xFF8
 11898                           tblptrh	equ	0xFF7
 11899                           tblptrl	equ	0xFF6
 11900                           tablat	equ	0xFF5
 11901                           prodh	equ	0xFF4
 11902                           prodl	equ	0xFF3
 11903                           intcon	equ	0xFF2
 11904                           intcon3	equ	0xFF0
 11905                           postinc0	equ	0xFEE
 11906                           wreg	equ	0xFE8
 11907                           indf2	equ	0xFDF
 11908                           postinc2	equ	0xFDE
 11909                           postdec2	equ	0xFDD
 11910                           fsr2h	equ	0xFDA
 11911                           fsr2l	equ	0xFD9
 11912                           status	equ	0xFD8
 11913                           
 11914 ;; *************** function _lcdInst *****************
 11915 ;; Defined at:
 11916 ;;		line 26 in file "lcd.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;  data            1    wreg     unsigned char 
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;  data            1   57[BANK0 ] unsigned char 
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  1    wreg      void 
 11923 ;; Registers used:
 11924 ;;		wreg, status,2, status,0, cstack
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;Total ram usage:        1 bytes
 11935 ;; Hardware stack levels used:    1
 11936 ;; Hardware stack levels required when called:    6
 11937 ;; This function calls:
 11938 ;;		_lcdNibble
 11939 ;; This function is called by:
 11940 ;;		_main
 11941 ;;		_initLCD
 11942 ;;		_sort
 11943 ;;		_displayLog
 11944 ;;		_printRTC
 11945 ;;		_showLogMenu
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949                           	psect	text36
 11950  005DE6                     __ptext36:
 11951                           	opt stack 0
 11952  005DE6                     _lcdInst:
 11953                           	opt stack 23
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;incstack = 0
 11957                           ;lcdInst@data stored from wreg
 11958  005DE6  0100               	movlb	0	; () banked
 11959  005DE8  6FB9               	movwf	lcdInst@data& (0+255),b
 11960                           
 11961                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 11962  005DEA  948C               	bcf	3980,2,c	;volatile
 11963                           
 11964                           ;lcd.c: 28: lcdNibble(data);
 11965  005DEC  0100               	movlb	0	; () banked
 11966  005DEE  51B9               	movf	lcdInst@data& (0+255),w,b
 11967  005DF0  ECBF  F02A         	call	_lcdNibble
 11968  005DF4  0012               	return		;funcret
 11969  005DF6                     __end_of_lcdInst:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           intcon3	equ	0xFF0
 11979                           postinc0	equ	0xFEE
 11980                           wreg	equ	0xFE8
 11981                           indf2	equ	0xFDF
 11982                           postinc2	equ	0xFDE
 11983                           postdec2	equ	0xFDD
 11984                           fsr2h	equ	0xFDA
 11985                           fsr2l	equ	0xFD9
 11986                           status	equ	0xFD8
 11987                           
 11988 ;; *************** function _lcdNibble *****************
 11989 ;; Defined at:
 11990 ;;		line 36 in file "lcd.c"
 11991 ;; Parameters:    Size  Location     Type
 11992 ;;  data            1    wreg     unsigned char 
 11993 ;; Auto vars:     Size  Location     Type
 11994 ;;  data            1   56[BANK0 ] unsigned char 
 11995 ;;  temp            1   55[BANK0 ] unsigned char 
 11996 ;; Return value:  Size  Location     Type
 11997 ;;                  1    wreg      void 
 11998 ;; Registers used:
 11999 ;;		wreg, status,2, status,0
 12000 ;; Tracked objects:
 12001 ;;		On entry : 0/0
 12002 ;;		On exit  : 0/0
 12003 ;;		Unchanged: 0/0
 12004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;Total ram usage:        2 bytes
 12010 ;; Hardware stack levels used:    1
 12011 ;; Hardware stack levels required when called:    5
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		_lcdInst
 12016 ;;		_putch
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           	psect	text37
 12021  00557E                     __ptext37:
 12022                           	opt stack 0
 12023  00557E                     _lcdNibble:
 12024                           	opt stack 22
 12025                           
 12026                           ;incstack = 0
 12027                           ;lcdNibble@data stored from wreg
 12028  00557E  0100               	movlb	0	; () banked
 12029  005580  6FB8               	movwf	lcdNibble@data& (0+255),b
 12030                           
 12031                           ;lcd.c: 38: char temp = data & 0xF0;
 12032  005582  0100               	movlb	0	; () banked
 12033  005584  51B8               	movf	lcdNibble@data& (0+255),w,b
 12034  005586  0BF0               	andlw	240
 12035  005588  0100               	movlb	0	; () banked
 12036  00558A  6FB7               	movwf	lcdNibble@temp& (0+255),b
 12037                           
 12038                           ;lcd.c: 39: LATD = LATD & 0x0F;
 12039  00558C  508C               	movf	3980,w,c	;volatile
 12040  00558E  0B0F               	andlw	15
 12041  005590  6E8C               	movwf	3980,c	;volatile
 12042                           
 12043                           ;lcd.c: 40: LATD = temp | LATD;
 12044  005592  0100               	movlb	0	; () banked
 12045  005594  51B7               	movf	lcdNibble@temp& (0+255),w,b
 12046  005596  108C               	iorwf	3980,w,c	;volatile
 12047  005598  6E8C               	movwf	3980,c	;volatile
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 12051  00559A  968C               	bcf	3980,3,c	;volatile
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;lcd.c: 43: _delay((unsigned long)((25)*(8000000/4000000.0)));
 12055  00559C  0E10               	movlw	16
 12056  00559E                     u11387:
 12057  00559E  2EE8               	decfsz	wreg,f,c
 12058  0055A0  D7FE               	bra	u11387
 12059  0055A2  D000               	nop2	
 12060                           
 12061                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 12062  0055A4  868C               	bsf	3980,3,c	;volatile
 12063                           
 12064                           ;lcd.c: 45: _delay((unsigned long)((25)*(8000000/4000000.0)));
 12065  0055A6  0E10               	movlw	16
 12066  0055A8                     u11397:
 12067  0055A8  2EE8               	decfsz	wreg,f,c
 12068  0055AA  D7FE               	bra	u11397
 12069  0055AC  D000               	nop2	
 12070                           
 12071                           ;lcd.c: 47: data = data << 4;
 12072  0055AE  0100               	movlb	0	; () banked
 12073  0055B0  39B8               	swapf	lcdNibble@data& (0+255),w,b
 12074  0055B2  0BF0               	andlw	240
 12075  0055B4  0100               	movlb	0	; () banked
 12076  0055B6  6FB8               	movwf	lcdNibble@data& (0+255),b
 12077                           
 12078                           ;lcd.c: 49: temp = data & 0xF0;
 12079  0055B8  0100               	movlb	0	; () banked
 12080  0055BA  51B8               	movf	lcdNibble@data& (0+255),w,b
 12081  0055BC  0BF0               	andlw	240
 12082  0055BE  0100               	movlb	0	; () banked
 12083  0055C0  6FB7               	movwf	lcdNibble@temp& (0+255),b
 12084                           
 12085                           ;lcd.c: 50: LATD = LATD & 0x0F;
 12086  0055C2  508C               	movf	3980,w,c	;volatile
 12087  0055C4  0B0F               	andlw	15
 12088  0055C6  6E8C               	movwf	3980,c	;volatile
 12089                           
 12090                           ;lcd.c: 51: LATD = temp | LATD;
 12091  0055C8  0100               	movlb	0	; () banked
 12092  0055CA  51B7               	movf	lcdNibble@temp& (0+255),w,b
 12093  0055CC  108C               	iorwf	3980,w,c	;volatile
 12094  0055CE  6E8C               	movwf	3980,c	;volatile
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 12098  0055D0  968C               	bcf	3980,3,c	;volatile
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;lcd.c: 54: _delay((unsigned long)((25)*(8000000/4000000.0)));
 12102  0055D2  0E10               	movlw	16
 12103  0055D4                     u11407:
 12104  0055D4  2EE8               	decfsz	wreg,f,c
 12105  0055D6  D7FE               	bra	u11407
 12106  0055D8  D000               	nop2	
 12107                           
 12108                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 12109  0055DA  868C               	bsf	3980,3,c	;volatile
 12110                           
 12111                           ;lcd.c: 56: _delay((unsigned long)((25)*(8000000/4000000.0)));
 12112  0055DC  0E10               	movlw	16
 12113  0055DE                     u11417:
 12114  0055DE  2EE8               	decfsz	wreg,f,c
 12115  0055E0  D7FE               	bra	u11417
 12116  0055E2  D000               	nop2	
 12117  0055E4  0012               	return		;funcret
 12118  0055E6                     __end_of_lcdNibble:
 12119                           	opt stack 0
 12120                           tblptru	equ	0xFF8
 12121                           tblptrh	equ	0xFF7
 12122                           tblptrl	equ	0xFF6
 12123                           tablat	equ	0xFF5
 12124                           prodh	equ	0xFF4
 12125                           prodl	equ	0xFF3
 12126                           intcon	equ	0xFF2
 12127                           intcon3	equ	0xFF0
 12128                           postinc0	equ	0xFEE
 12129                           wreg	equ	0xFE8
 12130                           indf2	equ	0xFDF
 12131                           postinc2	equ	0xFDE
 12132                           postdec2	equ	0xFDD
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _I2C_Master_Write *****************
 12138 ;; Defined at:
 12139 ;;		line 48 in file "I2C.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  d               2   56[BANK0 ] unsigned int 
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;		None
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  1    wreg      void 
 12146 ;; Registers used:
 12147 ;;		wreg, status,2, status,0, cstack
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12153 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12157 ;;Total ram usage:        2 bytes
 12158 ;; Hardware stack levels used:    1
 12159 ;; Hardware stack levels required when called:    6
 12160 ;; This function calls:
 12161 ;;		_I2C_Master_Wait
 12162 ;; This function is called by:
 12163 ;;		_printRTC
 12164 ;;		_set_time
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           	psect	text38
 12169  005E0E                     __ptext38:
 12170                           	opt stack 0
 12171  005E0E                     _I2C_Master_Write:
 12172                           	opt stack 23
 12173                           
 12174                           ;I2C.c: 49: I2C_Master_Wait();
 12175                           
 12176                           ;incstack = 0
 12177  005E0E  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12178                           
 12179                           ;I2C.c: 50: SSPBUF = d;
 12180  005E12  C0B8  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 12181  005E16  0012               	return		;funcret
 12182  005E18                     __end_of_I2C_Master_Write:
 12183                           	opt stack 0
 12184                           tblptru	equ	0xFF8
 12185                           tblptrh	equ	0xFF7
 12186                           tblptrl	equ	0xFF6
 12187                           tablat	equ	0xFF5
 12188                           prodh	equ	0xFF4
 12189                           prodl	equ	0xFF3
 12190                           intcon	equ	0xFF2
 12191                           intcon3	equ	0xFF0
 12192                           postinc0	equ	0xFEE
 12193                           wreg	equ	0xFE8
 12194                           indf2	equ	0xFDF
 12195                           postinc2	equ	0xFDE
 12196                           postdec2	equ	0xFDD
 12197                           fsr2h	equ	0xFDA
 12198                           fsr2l	equ	0xFD9
 12199                           status	equ	0xFD8
 12200                           
 12201 ;; *************** function _I2C_Master_Stop *****************
 12202 ;; Defined at:
 12203 ;;		line 43 in file "I2C.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;		None
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;		None
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  2    6[None  ] int 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;Total ram usage:        0 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    6
 12224 ;; This function calls:
 12225 ;;		_I2C_Master_Wait
 12226 ;; This function is called by:
 12227 ;;		_printRTC
 12228 ;;		_set_time
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text39
 12233  005E18                     __ptext39:
 12234                           	opt stack 0
 12235  005E18                     _I2C_Master_Stop:
 12236                           	opt stack 23
 12237                           
 12238                           ;I2C.c: 44: I2C_Master_Wait();
 12239                           
 12240                           ;incstack = 0
 12241  005E18  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12242                           
 12243                           ;I2C.c: 45: PEN = 1;
 12244  005E1C  84C5               	bsf	4037,2,c	;volatile
 12245  005E1E  0012               	return		;funcret
 12246  005E20                     __end_of_I2C_Master_Stop:
 12247                           	opt stack 0
 12248                           tblptru	equ	0xFF8
 12249                           tblptrh	equ	0xFF7
 12250                           tblptrl	equ	0xFF6
 12251                           tablat	equ	0xFF5
 12252                           prodh	equ	0xFF4
 12253                           prodl	equ	0xFF3
 12254                           intcon	equ	0xFF2
 12255                           intcon3	equ	0xFF0
 12256                           postinc0	equ	0xFEE
 12257                           wreg	equ	0xFE8
 12258                           indf2	equ	0xFDF
 12259                           postinc2	equ	0xFDE
 12260                           postdec2	equ	0xFDD
 12261                           fsr2h	equ	0xFDA
 12262                           fsr2l	equ	0xFD9
 12263                           status	equ	0xFD8
 12264                           
 12265 ;; *************** function _I2C_Master_Start *****************
 12266 ;; Defined at:
 12267 ;;		line 33 in file "I2C.c"
 12268 ;; Parameters:    Size  Location     Type
 12269 ;;		None
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;		None
 12272 ;; Return value:  Size  Location     Type
 12273 ;;                  2    2[None  ] int 
 12274 ;; Registers used:
 12275 ;;		wreg, status,2, status,0, cstack
 12276 ;; Tracked objects:
 12277 ;;		On entry : 0/0
 12278 ;;		On exit  : 0/0
 12279 ;;		Unchanged: 0/0
 12280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12285 ;;Total ram usage:        0 bytes
 12286 ;; Hardware stack levels used:    1
 12287 ;; Hardware stack levels required when called:    6
 12288 ;; This function calls:
 12289 ;;		_I2C_Master_Wait
 12290 ;; This function is called by:
 12291 ;;		_printRTC
 12292 ;;		_set_time
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text40
 12297  005E20                     __ptext40:
 12298                           	opt stack 0
 12299  005E20                     _I2C_Master_Start:
 12300                           	opt stack 23
 12301                           
 12302                           ;I2C.c: 34: I2C_Master_Wait();
 12303                           
 12304                           ;incstack = 0
 12305  005E20  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12306                           
 12307                           ;I2C.c: 35: SEN = 1;
 12308  005E24  80C5               	bsf	4037,0,c	;volatile
 12309  005E26  0012               	return		;funcret
 12310  005E28                     __end_of_I2C_Master_Start:
 12311                           	opt stack 0
 12312                           tblptru	equ	0xFF8
 12313                           tblptrh	equ	0xFF7
 12314                           tblptrl	equ	0xFF6
 12315                           tablat	equ	0xFF5
 12316                           prodh	equ	0xFF4
 12317                           prodl	equ	0xFF3
 12318                           intcon	equ	0xFF2
 12319                           intcon3	equ	0xFF0
 12320                           postinc0	equ	0xFEE
 12321                           wreg	equ	0xFE8
 12322                           indf2	equ	0xFDF
 12323                           postinc2	equ	0xFDE
 12324                           postdec2	equ	0xFDD
 12325                           fsr2h	equ	0xFDA
 12326                           fsr2l	equ	0xFD9
 12327                           status	equ	0xFD8
 12328                           
 12329 ;; *************** function _I2C_Master_Read *****************
 12330 ;; Defined at:
 12331 ;;		line 53 in file "I2C.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  a               1    wreg     unsigned char 
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;  a               1   56[BANK0 ] unsigned char 
 12336 ;;  temp            1   57[BANK0 ] unsigned char 
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      unsigned char 
 12339 ;; Registers used:
 12340 ;;		wreg, status,2, status,0, cstack
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        2 bytes
 12351 ;; Hardware stack levels used:    1
 12352 ;; Hardware stack levels required when called:    6
 12353 ;; This function calls:
 12354 ;;		_I2C_Master_Wait
 12355 ;; This function is called by:
 12356 ;;		_printRTC
 12357 ;; This function uses a non-reentrant model
 12358 ;;
 12359                           
 12360                           	psect	text41
 12361  005C48                     __ptext41:
 12362                           	opt stack 0
 12363  005C48                     _I2C_Master_Read:
 12364                           	opt stack 23
 12365                           
 12366                           ;incstack = 0
 12367                           ;I2C_Master_Read@a stored from wreg
 12368  005C48  0100               	movlb	0	; () banked
 12369  005C4A  6FB8               	movwf	I2C_Master_Read@a& (0+255),b
 12370                           
 12371                           ;I2C.c: 54: unsigned char temp;
 12372                           ;I2C.c: 55: I2C_Master_Wait();
 12373  005C4C  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12374                           
 12375                           ;I2C.c: 56: RCEN = 1;
 12376  005C50  86C5               	bsf	4037,3,c	;volatile
 12377                           
 12378                           ;I2C.c: 57: I2C_Master_Wait();
 12379  005C52  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12380                           
 12381                           ;I2C.c: 58: temp = SSPBUF;
 12382  005C56  CFC9 F0B9          	movff	4041,I2C_Master_Read@temp	;volatile
 12383                           
 12384                           ;I2C.c: 59: I2C_Master_Wait();
 12385  005C5A  ECE1  F02E         	call	_I2C_Master_Wait	;wreg free
 12386                           
 12387                           ;I2C.c: 60: ACKDT = (a) ? 0 : 1;
 12388  005C5E  0100               	movlb	0	; () banked
 12389  005C60  51B8               	movf	I2C_Master_Read@a& (0+255),w,b
 12390  005C62  0100               	movlb	0	; () banked
 12391  005C64  A4D8               	btfss	status,2,c
 12392  005C66  D002               	goto	u6880
 12393  005C68  8AC5               	bsf	4037,5,c	;volatile
 12394  005C6A  D001               	goto	l5660
 12395  005C6C                     u6880:
 12396  005C6C  9AC5               	bcf	4037,5,c	;volatile
 12397  005C6E                     l5660:
 12398                           
 12399                           ;I2C.c: 61: ACKEN = 1;
 12400  005C6E  88C5               	bsf	4037,4,c	;volatile
 12401                           
 12402                           ;I2C.c: 62: return temp;
 12403  005C70  0100               	movlb	0	; () banked
 12404  005C72  51B9               	movf	I2C_Master_Read@temp& (0+255),w,b
 12405  005C74  0012               	return	
 12406  005C76                     __end_of_I2C_Master_Read:
 12407                           	opt stack 0
 12408                           tblptru	equ	0xFF8
 12409                           tblptrh	equ	0xFF7
 12410                           tblptrl	equ	0xFF6
 12411                           tablat	equ	0xFF5
 12412                           prodh	equ	0xFF4
 12413                           prodl	equ	0xFF3
 12414                           intcon	equ	0xFF2
 12415                           intcon3	equ	0xFF0
 12416                           postinc0	equ	0xFEE
 12417                           wreg	equ	0xFE8
 12418                           indf2	equ	0xFDF
 12419                           postinc2	equ	0xFDE
 12420                           postdec2	equ	0xFDD
 12421                           fsr2h	equ	0xFDA
 12422                           fsr2l	equ	0xFD9
 12423                           status	equ	0xFD8
 12424                           
 12425 ;; *************** function _I2C_Master_Wait *****************
 12426 ;; Defined at:
 12427 ;;		line 29 in file "I2C.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;		None
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;		None
 12432 ;; Return value:  Size  Location     Type
 12433 ;;                  1    wreg      void 
 12434 ;; Registers used:
 12435 ;;		wreg, status,2, status,0
 12436 ;; Tracked objects:
 12437 ;;		On entry : 0/0
 12438 ;;		On exit  : 0/0
 12439 ;;		Unchanged: 0/0
 12440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;Total ram usage:        1 bytes
 12446 ;; Hardware stack levels used:    1
 12447 ;; Hardware stack levels required when called:    5
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		_I2C_Master_Start
 12452 ;;		_I2C_Master_Stop
 12453 ;;		_I2C_Master_Write
 12454 ;;		_I2C_Master_Read
 12455 ;;		_I2C_Master_RepeatedStart
 12456 ;; This function uses a non-reentrant model
 12457 ;;
 12458                           
 12459                           	psect	text42
 12460  005DC2                     __ptext42:
 12461                           	opt stack 0
 12462  005DC2                     _I2C_Master_Wait:
 12463                           	opt stack 23
 12464  005DC2                     l494:
 12465  005DC2  B4C7               	btfsc	4039,2,c	;volatile
 12466  005DC4  D7FE               	goto	l494
 12467  005DC6  CFC5 F0B7          	movff	4037,??_I2C_Master_Wait	;volatile
 12468  005DCA  0E1F               	movlw	31
 12469  005DCC  0100               	movlb	0	; () banked
 12470  005DCE  17B7               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12471  005DD0  B4D8               	btfsc	status,2,c
 12472  005DD2  0012               	return	
 12473  005DD4  D7F6               	goto	l494
 12474  005DD6                     __end_of_I2C_Master_Wait:
 12475                           	opt stack 0
 12476                           tblptru	equ	0xFF8
 12477                           tblptrh	equ	0xFF7
 12478                           tblptrl	equ	0xFF6
 12479                           tablat	equ	0xFF5
 12480                           prodh	equ	0xFF4
 12481                           prodl	equ	0xFF3
 12482                           intcon	equ	0xFF2
 12483                           intcon3	equ	0xFF0
 12484                           postinc0	equ	0xFEE
 12485                           wreg	equ	0xFE8
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           fsr2h	equ	0xFDA
 12490                           fsr2l	equ	0xFD9
 12491                           status	equ	0xFD8
 12492                           
 12493 ;; *************** function _I2C_Master_Init *****************
 12494 ;; Defined at:
 12495 ;;		line 19 in file "I2C.c"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;  c               4    0[BANK1 ] const unsigned long 
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2, status,0, cstack
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12509 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;Total ram usage:        8 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    6
 12516 ;; This function calls:
 12517 ;;		___lldiv
 12518 ;; This function is called by:
 12519 ;;		_main
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text43
 12524  00564C                     __ptext43:
 12525                           	opt stack 0
 12526  00564C                     _I2C_Master_Init:
 12527                           	opt stack 24
 12528                           
 12529                           ;I2C.c: 21: SSPSTAT = 0b00000000;
 12530                           
 12531                           ; BSR set to: 0
 12532                           ;incstack = 0
 12533  00564C  0E00               	movlw	0
 12534  00564E  6EC7               	movwf	4039,c	;volatile
 12535                           
 12536                           ;I2C.c: 22: SSPCON1 = 0b00101000;
 12537  005650  0E28               	movlw	40
 12538  005652  6EC6               	movwf	4038,c	;volatile
 12539                           
 12540                           ;I2C.c: 23: SSPCON2 = 0b00000000;
 12541  005654  0E00               	movlw	0
 12542  005656  6EC5               	movwf	4037,c	;volatile
 12543                           
 12544                           ;I2C.c: 24: SSPADD = (8000000 / (4 * c)) - 1;
 12545  005658  0E00               	movlw	0
 12546  00565A  0100               	movlb	0	; () banked
 12547  00565C  6FB7               	movwf	___lldiv@dividend& (0+255),b
 12548  00565E  0E12               	movlw	18
 12549  005660  6FB8               	movwf	(___lldiv@dividend+1)& (0+255),b
 12550  005662  0E7A               	movlw	122
 12551  005664  6FB9               	movwf	(___lldiv@dividend+2)& (0+255),b
 12552  005666  0E00               	movlw	0
 12553  005668  6FBA               	movwf	(___lldiv@dividend+3)& (0+255),b
 12554  00566A  C100  F104         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12555  00566E  C101  F105         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12556  005672  C102  F106         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12557  005676  C103  F107         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12558  00567A  0E02               	movlw	2
 12559  00567C                     u10435:
 12560  00567C  90D8               	bcf	status,0,c
 12561  00567E  0101               	movlb	1	; () banked
 12562  005680  3704               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12563  005682  3705               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12564  005684  3706               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12565  005686  3707               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12566  005688  2EE8               	decfsz	wreg,f,c
 12567  00568A  D7F8               	goto	u10435
 12568  00568C  C104  F0BB         	movff	??_I2C_Master_Init,___lldiv@divisor
 12569  005690  C105  F0BC         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12570  005694  C106  F0BD         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12571  005698  C107  F0BE         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12572  00569C  EC2B  F028         	call	___lldiv	;wreg free
 12573  0056A0  0100               	movlb	0	; () banked
 12574  0056A2  05B7               	decf	?___lldiv& (0+255),w,b
 12575  0056A4  6EC8               	movwf	4040,c	;volatile
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;I2C.c: 25: TRISC3 = 1;
 12579  0056A6  8694               	bsf	3988,3,c	;volatile
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;I2C.c: 26: TRISC4 = 1;
 12583  0056A8  8894               	bsf	3988,4,c	;volatile
 12584                           
 12585                           ; BSR set to: 0
 12586  0056AA  0012               	return		;funcret
 12587  0056AC                     __end_of_I2C_Master_Init:
 12588                           	opt stack 0
 12589                           tblptru	equ	0xFF8
 12590                           tblptrh	equ	0xFF7
 12591                           tblptrl	equ	0xFF6
 12592                           tablat	equ	0xFF5
 12593                           prodh	equ	0xFF4
 12594                           prodl	equ	0xFF3
 12595                           intcon	equ	0xFF2
 12596                           intcon3	equ	0xFF0
 12597                           postinc0	equ	0xFEE
 12598                           wreg	equ	0xFE8
 12599                           indf2	equ	0xFDF
 12600                           postinc2	equ	0xFDE
 12601                           postdec2	equ	0xFDD
 12602                           fsr2h	equ	0xFDA
 12603                           fsr2l	equ	0xFD9
 12604                           status	equ	0xFD8
 12605                           
 12606 ;; *************** function ___lldiv *****************
 12607 ;; Defined at:
 12608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;  dividend        4   55[BANK0 ] unsigned long 
 12611 ;;  divisor         4   59[BANK0 ] unsigned long 
 12612 ;; Auto vars:     Size  Location     Type
 12613 ;;  quotient        4   63[BANK0 ] unsigned long 
 12614 ;;  counter         1   67[BANK0 ] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  4   55[BANK0 ] unsigned long 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;Total ram usage:       13 bytes
 12629 ;; Hardware stack levels used:    1
 12630 ;; Hardware stack levels required when called:    5
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_I2C_Master_Init
 12635 ;;		_printf
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text44
 12640  005056                     __ptext44:
 12641                           	opt stack 0
 12642  005056                     ___lldiv:
 12643                           	opt stack 23
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;incstack = 0
 12647  005056  0E00               	movlw	0
 12648  005058  0100               	movlb	0	; () banked
 12649  00505A  6FBF               	movwf	___lldiv@quotient& (0+255),b
 12650  00505C  0E00               	movlw	0
 12651  00505E  6FC0               	movwf	(___lldiv@quotient+1)& (0+255),b
 12652  005060  0E00               	movlw	0
 12653  005062  6FC1               	movwf	(___lldiv@quotient+2)& (0+255),b
 12654  005064  0E00               	movlw	0
 12655  005066  6FC2               	movwf	(___lldiv@quotient+3)& (0+255),b
 12656                           
 12657                           ; BSR set to: 0
 12658  005068  0100               	movlb	0	; () banked
 12659  00506A  51BB               	movf	___lldiv@divisor& (0+255),w,b
 12660  00506C  0100               	movlb	0	; () banked
 12661  00506E  11BC               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12662  005070  0100               	movlb	0	; () banked
 12663  005072  11BD               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12664  005074  0100               	movlb	0	; () banked
 12665  005076  11BE               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12666  005078  B4D8               	btfsc	status,2,c
 12667  00507A  D042               	goto	l1066
 12668                           
 12669                           ; BSR set to: 0
 12670  00507C  0E01               	movlw	1
 12671  00507E  0100               	movlb	0	; () banked
 12672  005080  6FC3               	movwf	___lldiv@counter& (0+255),b
 12673  005082  D008               	goto	l4806
 12674  005084                     l4804:
 12675                           
 12676                           ; BSR set to: 0
 12677  005084  0100               	movlb	0	; () banked
 12678  005086  90D8               	bcf	status,0,c
 12679  005088  37BB               	rlcf	___lldiv@divisor& (0+255),f,b
 12680  00508A  37BC               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12681  00508C  37BD               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12682  00508E  37BE               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12683  005090  0100               	movlb	0	; () banked
 12684  005092  2BC3               	incf	___lldiv@counter& (0+255),f,b
 12685  005094                     l4806:
 12686                           
 12687                           ; BSR set to: 0
 12688  005094  0100               	movlb	0	; () banked
 12689  005096  AFBE               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12690  005098  D7F5               	goto	l4804
 12691  00509A                     l4808:
 12692                           
 12693                           ; BSR set to: 0
 12694  00509A  0100               	movlb	0	; () banked
 12695  00509C  90D8               	bcf	status,0,c
 12696  00509E  37BF               	rlcf	___lldiv@quotient& (0+255),f,b
 12697  0050A0  37C0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12698  0050A2  37C1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12699  0050A4  37C2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12700                           
 12701                           ; BSR set to: 0
 12702  0050A6  0100               	movlb	0	; () banked
 12703  0050A8  51BB               	movf	___lldiv@divisor& (0+255),w,b
 12704  0050AA  0100               	movlb	0	; () banked
 12705  0050AC  5DB7               	subwf	___lldiv@dividend& (0+255),w,b
 12706  0050AE  0100               	movlb	0	; () banked
 12707  0050B0  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12708  0050B2  0100               	movlb	0	; () banked
 12709  0050B4  59B8               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12710  0050B6  0100               	movlb	0	; () banked
 12711  0050B8  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12712  0050BA  0100               	movlb	0	; () banked
 12713  0050BC  59B9               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12714  0050BE  0100               	movlb	0	; () banked
 12715  0050C0  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12716  0050C2  0100               	movlb	0	; () banked
 12717  0050C4  59BA               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12718  0050C6  A0D8               	btfss	status,0,c
 12719  0050C8  D012               	goto	l4816
 12720                           
 12721                           ; BSR set to: 0
 12722  0050CA  0100               	movlb	0	; () banked
 12723  0050CC  51BB               	movf	___lldiv@divisor& (0+255),w,b
 12724  0050CE  0100               	movlb	0	; () banked
 12725  0050D0  5FB7               	subwf	___lldiv@dividend& (0+255),f,b
 12726  0050D2  0100               	movlb	0	; () banked
 12727  0050D4  51BC               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12728  0050D6  0100               	movlb	0	; () banked
 12729  0050D8  5BB8               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12730  0050DA  0100               	movlb	0	; () banked
 12731  0050DC  51BD               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12732  0050DE  0100               	movlb	0	; () banked
 12733  0050E0  5BB9               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12734  0050E2  0100               	movlb	0	; () banked
 12735  0050E4  51BE               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12736  0050E6  0100               	movlb	0	; () banked
 12737  0050E8  5BBA               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12738                           
 12739                           ; BSR set to: 0
 12740  0050EA  0100               	movlb	0	; () banked
 12741  0050EC  81BF               	bsf	___lldiv@quotient& (0+255),0,b
 12742  0050EE                     l4816:
 12743                           
 12744                           ; BSR set to: 0
 12745  0050EE  0100               	movlb	0	; () banked
 12746  0050F0  90D8               	bcf	status,0,c
 12747  0050F2  33BE               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12748  0050F4  33BD               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12749  0050F6  33BC               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12750  0050F8  33BB               	rrcf	___lldiv@divisor& (0+255),f,b
 12751                           
 12752                           ; BSR set to: 0
 12753  0050FA  0100               	movlb	0	; () banked
 12754  0050FC  2FC3               	decfsz	___lldiv@counter& (0+255),f,b
 12755  0050FE  D7CD               	goto	l4808
 12756  005100                     l1066:
 12757                           
 12758                           ; BSR set to: 0
 12759  005100  C0BF  F0B7         	movff	___lldiv@quotient,?___lldiv
 12760  005104  C0C0  F0B8         	movff	___lldiv@quotient+1,?___lldiv+1
 12761  005108  C0C1  F0B9         	movff	___lldiv@quotient+2,?___lldiv+2
 12762  00510C  C0C2  F0BA         	movff	___lldiv@quotient+3,?___lldiv+3
 12763                           
 12764                           ; BSR set to: 0
 12765  005110  0012               	return		;funcret
 12766  005112                     __end_of___lldiv:
 12767                           	opt stack 0
 12768                           tblptru	equ	0xFF8
 12769                           tblptrh	equ	0xFF7
 12770                           tblptrl	equ	0xFF6
 12771                           tablat	equ	0xFF5
 12772                           prodh	equ	0xFF4
 12773                           prodl	equ	0xFF3
 12774                           intcon	equ	0xFF2
 12775                           intcon3	equ	0xFF0
 12776                           postinc0	equ	0xFEE
 12777                           wreg	equ	0xFE8
 12778                           indf2	equ	0xFDF
 12779                           postinc2	equ	0xFDE
 12780                           postdec2	equ	0xFDD
 12781                           fsr2h	equ	0xFDA
 12782                           fsr2l	equ	0xFD9
 12783                           status	equ	0xFD8
 12784                           
 12785 ;; *************** function _Eeprom_ReadByte *****************
 12786 ;; Defined at:
 12787 ;;		line 35 in file "logs.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  address         2   55[BANK0 ] unsigned short 
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;		None
 12792 ;; Return value:  Size  Location     Type
 12793 ;;                  2   55[BANK0 ] unsigned short 
 12794 ;; Registers used:
 12795 ;;		wreg, status,2
 12796 ;; Tracked objects:
 12797 ;;		On entry : 0/0
 12798 ;;		On exit  : 0/0
 12799 ;;		Unchanged: 0/0
 12800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12805 ;;Total ram usage:        2 bytes
 12806 ;; Hardware stack levels used:    1
 12807 ;; Hardware stack levels required when called:    5
 12808 ;; This function calls:
 12809 ;;		Nothing
 12810 ;; This function is called by:
 12811 ;;		_main
 12812 ;; This function uses a non-reentrant model
 12813 ;;
 12814                           
 12815                           	psect	text45
 12816  005D86                     __ptext45:
 12817                           	opt stack 0
 12818  005D86                     _Eeprom_ReadByte:
 12819                           	opt stack 25
 12820                           
 12821                           ;logs.c: 39: EEADRH = (unsigned short int)(address >> 8);
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;incstack = 0
 12825  005D86  0100               	movlb	0	; () banked
 12826  005D88  51B8               	movf	(Eeprom_ReadByte@address+1)& (0+255),w,b
 12827  005D8A  6EAA               	movwf	4010,c	;volatile
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;logs.c: 40: EEADR = (unsigned short int)address;
 12831  005D8C  C0B7  FFA9         	movff	Eeprom_ReadByte@address,4009	;volatile
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;logs.c: 42: EECON1bits.EEPGD = 0;
 12835  005D90  9EA6               	bcf	4006,7,c	;volatile
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;logs.c: 43: EECON1bits.CFGS = 0;
 12839  005D92  9CA6               	bcf	4006,6,c	;volatile
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;logs.c: 44: EECON1bits.RD = 1;
 12843  005D94  80A6               	bsf	4006,0,c	;volatile
 12844  005D96                     l416:
 12845  005D96  B0A6               	btfsc	4006,0,c	;volatile
 12846  005D98  D7FE               	goto	l416
 12847                           
 12848                           ;logs.c: 50: return EEDATA;
 12849  005D9A  CFA8 F0B7          	movff	4008,?_Eeprom_ReadByte	;volatile
 12850  005D9E  0100               	movlb	0	; () banked
 12851  005DA0  6BB8               	clrf	(?_Eeprom_ReadByte+1)& (0+255),b
 12852                           
 12853                           ; BSR set to: 0
 12854  005DA2  0012               	return		;funcret
 12855  005DA4                     __end_of_Eeprom_ReadByte:
 12856                           	opt stack 0
 12857                           tblptru	equ	0xFF8
 12858                           tblptrh	equ	0xFF7
 12859                           tblptrl	equ	0xFF6
 12860                           tablat	equ	0xFF5
 12861                           prodh	equ	0xFF4
 12862                           prodl	equ	0xFF3
 12863                           intcon	equ	0xFF2
 12864                           intcon3	equ	0xFF0
 12865                           postinc0	equ	0xFEE
 12866                           wreg	equ	0xFE8
 12867                           indf2	equ	0xFDF
 12868                           postinc2	equ	0xFDE
 12869                           postdec2	equ	0xFDD
 12870                           fsr2h	equ	0xFDA
 12871                           fsr2l	equ	0xFD9
 12872                           status	equ	0xFD8
 12873                           
 12874 ;; *************** function _keypressed *****************
 12875 ;; Defined at:
 12876 ;;		line 120 in file "main.c"
 12877 ;; Parameters:    Size  Location     Type
 12878 ;;		None
 12879 ;; Auto vars:     Size  Location     Type
 12880 ;;  lightVolt       3    9[BANK0 ] float 
 12881 ;;  lightVolt       3    0[BANK0 ] float 
 12882 ;;  i               2   40[BANK0 ] int 
 12883 ;;  i               2   38[BANK0 ] int 
 12884 ;;  i               2   36[BANK0 ] int 
 12885 ;;  i               2   34[BANK0 ] int 
 12886 ;;  i               2   32[BANK0 ] int 
 12887 ;;  i               2   30[BANK0 ] int 
 12888 ;;  i               2   28[BANK0 ] int 
 12889 ;;  i               2   26[BANK0 ] int 
 12890 ;;  i               2   24[BANK0 ] int 
 12891 ;;  i               2   18[BANK0 ] int 
 12892 ;;  i               2   22[BANK0 ] int 
 12893 ;;  i               2   20[BANK0 ] int 
 12894 ;;  lightVoltSum    3   51[BANK0 ] float 
 12895 ;;  proxVolt        3   45[BANK0 ] float 
 12896 ;;  IRVolt          3   42[BANK0 ] float 
 12897 ;;  IR              2   16[BANK0 ] int 
 12898 ;;  light           2   14[BANK0 ] int 
 12899 ;;  prox            2   12[BANK0 ] int 
 12900 ;;  IRSensor        3    6[BANK0 ] float 
 12901 ;;  proxVolt        3    3[BANK0 ] float 
 12902 ;;  lightVoltSum    3   48[BANK0 ] float 
 12903 ;;  keypress        1   54[BANK0 ] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      void 
 12906 ;; Registers used:
 12907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;      Locals:         0      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Temps:         15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Totals:        15      55       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;Total ram usage:       70 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:    4
 12920 ;; This function calls:
 12921 ;;		i2___awdiv
 12922 ;;		i2___awtoft
 12923 ;;		i2___ftadd
 12924 ;;		i2___ftdiv
 12925 ;;		i2___ftge
 12926 ;;		i2___ftmul
 12927 ;;		i2___fttol
 12928 ;;		i2_dc_forward
 12929 ;;		i2_dc_reverse
 12930 ;;		i2_dc_stop
 12931 ;;		i2_initLCD
 12932 ;;		i2_lcdInst
 12933 ;;		i2_printf
 12934 ;;		i2_readADC
 12935 ;;		i2_rotate180
 12936 ;;		i2_rotate270
 12937 ;;		i2_rotate90
 12938 ;;		i2_ultrasonicFindBottle
 12939 ;; This function is called by:
 12940 ;;		Interrupt level 2
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           	psect	intcode
 12945  000008                     __pintcode:
 12946                           	opt stack 0
 12947  000008                     _keypressed:
 12948                           	opt stack 20
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;incstack = 0
 12952  000008  827D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12953  00000A  EDA2  F010         	call	int_func,f	;refresh shadow registers
 12954                           tblptru	equ	0xFF8
 12955                           tblptrh	equ	0xFF7
 12956                           tblptrl	equ	0xFF6
 12957                           tablat	equ	0xFF5
 12958                           prodh	equ	0xFF4
 12959                           prodl	equ	0xFF3
 12960                           intcon	equ	0xFF2
 12961                           intcon3	equ	0xFF0
 12962                           postinc0	equ	0xFEE
 12963                           wreg	equ	0xFE8
 12964                           indf2	equ	0xFDF
 12965                           postinc2	equ	0xFDE
 12966                           postdec2	equ	0xFDD
 12967                           fsr2h	equ	0xFDA
 12968                           fsr2l	equ	0xFD9
 12969                           status	equ	0xFD8
 12970                           
 12971                           	psect	intcode_body
 12972  002144                     __pintcode_body:
 12973                           	opt stack 20
 12974  002144                     int_func:
 12975                           	opt stack 20
 12976  002144  0006               	pop		; remove dummy address from shadow register refresh
 12977  002146  CFFA F06D          	movff	pclath,??_keypressed+1
 12978  00214A  CFFB F06E          	movff	pclatu,??_keypressed+2
 12979  00214E  CFE9 F06F          	movff	fsr0l,??_keypressed+3
 12980  002152  CFEA F070          	movff	fsr0h,??_keypressed+4
 12981  002156  CFE1 F071          	movff	fsr1l,??_keypressed+5
 12982  00215A  CFE2 F072          	movff	fsr1h,??_keypressed+6
 12983  00215E  CFD9 F073          	movff	fsr2l,??_keypressed+7
 12984  002162  CFDA F074          	movff	fsr2h,??_keypressed+8
 12985  002166  CFF3 F075          	movff	prodl,??_keypressed+9
 12986  00216A  CFF4 F076          	movff	prodh,??_keypressed+10
 12987  00216E  CFF6 F077          	movff	tblptrl,??_keypressed+11
 12988  002172  CFF7 F078          	movff	tblptrh,??_keypressed+12
 12989  002176  CFF8 F079          	movff	tblptru,??_keypressed+13
 12990  00217A  CFF5 F07A          	movff	tablat,??_keypressed+14
 12991                           
 12992                           ;main.c: 121: if (INT1IF) {
 12993  00217E  A0F0               	btfss	intcon3,0,c	;volatile
 12994  002180  EF4D  F015         	goto	i2l107
 12995                           
 12996                           ;main.c: 122: unsigned char keypress = (PORTB & 0xF0) >> 4;
 12997  002184  3881               	swapf	3969,w,c	;volatile
 12998  002186  0B0F               	andlw	15
 12999  002188  0B0F               	andlw	15
 13000  00218A  0100               	movlb	0	; () banked
 13001  00218C  6FB6               	movwf	keypressed@keypress& (0+255),b
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;main.c: 123: initLCD();
 13005  00218E  ECB8  F02C         	call	i2_initLCD	;wreg free
 13006                           
 13007                           ;main.c: 124: if (keys[keypress] == '0') {
 13008  002192  0100               	movlb	0	; () banked
 13009  002194  51B6               	movf	keypressed@keypress& (0+255),w,b
 13010  002196  0D01               	mullw	1
 13011  002198  0E13               	movlw	low _keys
 13012  00219A  24F3               	addwf	prodl,w,c
 13013  00219C  6EF6               	movwf	tblptrl,c
 13014  00219E  0EFF               	movlw	high _keys
 13015  0021A0  20F4               	addwfc	prodh,w,c
 13016  0021A2  6EF7               	movwf	tblptrh,c
 13017  0021A4                     	if	0	;There are less than 3 active tblptr bytes
 13018  0021A4                     	endif
 13019  0021A4  0008               	tblrd		*
 13020  0021A6  50F5               	movf	tablat,w,c
 13021  0021A8  0A30               	xorlw	48
 13022  0021AA  A4D8               	btfss	status,2,c
 13023  0021AC  D02B               	goto	i2l6884
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;main.c: 125: printf("RESET");
 13027  0021AE  0EEE               	movlw	low STR_3
 13028  0021B0  6E40               	movwf	i2printf@f,c
 13029  0021B2  0EFF               	movlw	high STR_3
 13030  0021B4  6E41               	movwf	i2printf@f+1,c
 13031  0021B6  EC83  F00B         	call	i2_printf	;wreg free
 13032                           
 13033                           ;main.c: 126: for(int i=0;i<200;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13034  0021BA  0E00               	movlw	0
 13035  0021BC  0100               	movlb	0	; () banked
 13036  0021BE  6F95               	movwf	(keypressed@i+1)& (0+255),b
 13037  0021C0  0E00               	movlw	0
 13038  0021C2  6F94               	movwf	keypressed@i& (0+255),b
 13039                           
 13040                           ; BSR set to: 0
 13041  0021C4  0100               	movlb	0	; () banked
 13042  0021C6  BF95               	btfsc	(keypressed@i+1)& (0+255),7,b
 13043  0021C8  D008               	goto	i2l6880
 13044  0021CA  0100               	movlb	0	; () banked
 13045  0021CC  5195               	movf	(keypressed@i+1)& (0+255),w,b
 13046  0021CE  E117               	bnz	i2l110
 13047  0021D0  0EC8               	movlw	200
 13048  0021D2  0100               	movlb	0	; () banked
 13049  0021D4  5D94               	subwf	keypressed@i& (0+255),w,b
 13050  0021D6  B0D8               	btfsc	status,0,c
 13051  0021D8  D012               	goto	i2l110
 13052  0021DA                     i2l6880:
 13053                           
 13054                           ; BSR set to: 0
 13055  0021DA  0E1A               	movlw	26
 13056  0021DC  6E6C               	movwf	??_keypressed& (0+255),c
 13057  0021DE  0EF8               	movlw	248
 13058  0021E0                     i2u1142_47:
 13059  0021E0  2EE8               	decfsz	wreg,f,c
 13060  0021E2  D7FE               	bra	i2u1142_47
 13061  0021E4  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13062  0021E6  D7FC               	bra	i2u1142_47
 13063  0021E8  D000               	nop2	
 13064  0021EA  0100               	movlb	0	; () banked
 13065  0021EC  4B94               	infsnz	keypressed@i& (0+255),f,b
 13066  0021EE  2B95               	incf	(keypressed@i+1)& (0+255),f,b
 13067  0021F0  0100               	movlb	0	; () banked
 13068  0021F2  BF95               	btfsc	(keypressed@i+1)& (0+255),7,b
 13069  0021F4  D7F2               	goto	i2l6880
 13070  0021F6  0100               	movlb	0	; () banked
 13071  0021F8  5195               	movf	(keypressed@i+1)& (0+255),w,b
 13072  0021FA  E101               	bnz	i2u874_40
 13073  0021FC  D7E9               	goto	L11
 13074  0021FE                     i2u874_40:
 13075  0021FE                     i2l110:
 13076                           
 13077                           ; BSR set to: 0
 13078  0021FE  00FF               	reset		;# 
 13079                           
 13080                           ;main.c: 130: } else if (keys[keypress] == '1') {
 13081  002200  EF4B  F015         	goto	i2l7084
 13082  002204                     i2l6884:
 13083  002204  0100               	movlb	0	; () banked
 13084  002206  51B6               	movf	keypressed@keypress& (0+255),w,b
 13085  002208  0D01               	mullw	1
 13086  00220A  0E13               	movlw	low _keys
 13087  00220C  24F3               	addwf	prodl,w,c
 13088  00220E  6EF6               	movwf	tblptrl,c
 13089  002210  0EFF               	movlw	high _keys
 13090  002212  20F4               	addwfc	prodh,w,c
 13091  002214  6EF7               	movwf	tblptrh,c
 13092  002216                     	if	0	;There are less than 3 active tblptr bytes
 13093  002216                     	endif
 13094  002216  0008               	tblrd		*
 13095  002218  50F5               	movf	tablat,w,c
 13096  00221A  0A31               	xorlw	49
 13097  00221C  A4D8               	btfss	status,2,c
 13098  00221E  D007               	goto	i2l6888
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;main.c: 131: sorting = 1;
 13102  002220  0E00               	movlw	0
 13103  002222  0101               	movlb	1	; () banked
 13104  002224  6FC1               	movwf	(_sorting+1)& (0+255),b
 13105  002226  0E01               	movlw	1
 13106  002228  6FC0               	movwf	_sorting& (0+255),b
 13107                           
 13108                           ;main.c: 132: } else if (keys[keypress] == '2') {
 13109  00222A  EF4B  F015         	goto	i2l7084
 13110  00222E                     i2l6888:
 13111  00222E  0100               	movlb	0	; () banked
 13112  002230  51B6               	movf	keypressed@keypress& (0+255),w,b
 13113  002232  0D01               	mullw	1
 13114  002234  0E13               	movlw	low _keys
 13115  002236  24F3               	addwf	prodl,w,c
 13116  002238  6EF6               	movwf	tblptrl,c
 13117  00223A  0EFF               	movlw	high _keys
 13118  00223C  20F4               	addwfc	prodh,w,c
 13119  00223E  6EF7               	movwf	tblptrh,c
 13120  002240                     	if	0	;There are less than 3 active tblptr bytes
 13121  002240                     	endif
 13122  002240  0008               	tblrd		*
 13123  002242  50F5               	movf	tablat,w,c
 13124  002244  0A32               	xorlw	50
 13125  002246  A4D8               	btfss	status,2,c
 13126  002248  D028               	goto	i2l6904
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;main.c: 133: printf("Logs");
 13130  00224A  0E73               	movlw	low (STR_1+11)
 13131  00224C  6E40               	movwf	i2printf@f,c
 13132  00224E  0EFF               	movlw	high (STR_1+11)
 13133  002250  6E41               	movwf	i2printf@f+1,c
 13134  002252  EC83  F00B         	call	i2_printf	;wreg free
 13135                           
 13136                           ;main.c: 134: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13137  002256  0E00               	movlw	0
 13138  002258  0100               	movlb	0	; () banked
 13139  00225A  6F97               	movwf	(keypressed@i_245+1)& (0+255),b
 13140  00225C  0E00               	movlw	0
 13141  00225E  6F96               	movwf	keypressed@i_245& (0+255),b
 13142  002260                     i2l6894:
 13143                           
 13144                           ; BSR set to: 0
 13145  002260  0100               	movlb	0	; () banked
 13146  002262  BF97               	btfsc	(keypressed@i_245+1)& (0+255),7,b
 13147  002264  D008               	goto	i2l6898
 13148  002266  0100               	movlb	0	; () banked
 13149  002268  5197               	movf	(keypressed@i_245+1)& (0+255),w,b
 13150  00226A  E111               	bnz	i2l6902
 13151  00226C  0E64               	movlw	100
 13152  00226E  0100               	movlb	0	; () banked
 13153  002270  5D96               	subwf	keypressed@i_245& (0+255),w,b
 13154  002272  B0D8               	btfsc	status,0,c
 13155  002274  D00C               	goto	i2l6902
 13156  002276                     i2l6898:
 13157                           
 13158                           ; BSR set to: 0
 13159  002276  0E1A               	movlw	26
 13160  002278  6E6C               	movwf	??_keypressed& (0+255),c
 13161  00227A  0EF8               	movlw	248
 13162  00227C                     i2u1143_47:
 13163  00227C  2EE8               	decfsz	wreg,f,c
 13164  00227E  D7FE               	bra	i2u1143_47
 13165  002280  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13166  002282  D7FC               	bra	i2u1143_47
 13167  002284  D000               	nop2	
 13168  002286  0100               	movlb	0	; () banked
 13169  002288  4B96               	infsnz	keypressed@i_245& (0+255),f,b
 13170  00228A  2B97               	incf	(keypressed@i_245+1)& (0+255),f,b
 13171  00228C  D7E9               	goto	i2l6894
 13172  00228E                     i2l6902:
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;main.c: 135: logs = 1;
 13176  00228E  0E00               	movlw	0
 13177  002290  0101               	movlb	1	; () banked
 13178  002292  6FBF               	movwf	(_logs+1)& (0+255),b
 13179  002294  0E01               	movlw	1
 13180  002296  6FBE               	movwf	_logs& (0+255),b
 13181                           
 13182                           ;main.c: 136: }
 13183  002298  D3FE               	goto	i2l7084
 13184  00229A                     i2l6904:
 13185                           
 13186                           ;main.c: 137: else if (keys[keypress] == '3') {
 13187  00229A  0100               	movlb	0	; () banked
 13188  00229C  51B6               	movf	keypressed@keypress& (0+255),w,b
 13189  00229E  0D01               	mullw	1
 13190  0022A0  0E13               	movlw	low _keys
 13191  0022A2  24F3               	addwf	prodl,w,c
 13192  0022A4  6EF6               	movwf	tblptrl,c
 13193  0022A6  0EFF               	movlw	high _keys
 13194  0022A8  20F4               	addwfc	prodh,w,c
 13195  0022AA  6EF7               	movwf	tblptrh,c
 13196  0022AC                     	if	0	;There are less than 3 active tblptr bytes
 13197  0022AC                     	endif
 13198  0022AC  0008               	tblrd		*
 13199  0022AE  50F5               	movf	tablat,w,c
 13200  0022B0  0A33               	xorlw	51
 13201  0022B2  A4D8               	btfss	status,2,c
 13202  0022B4  D032               	goto	i2l6922
 13203  0022B6                     i2l6906:
 13204                           
 13205                           ;main.c: 139: {
 13206                           ;main.c: 140: int i = ultrasonicFindBottle();
 13207  0022B6  ECBF  F024         	call	i2_ultrasonicFindBottle	;wreg free
 13208  0022BA  C033  F092         	movff	?i2_ultrasonicFindBottle,keypressed@i_246
 13209  0022BE  C034  F093         	movff	?i2_ultrasonicFindBottle+1,keypressed@i_246+1
 13210                           
 13211                           ;main.c: 141: if (i != 0) {
 13212  0022C2  0100               	movlb	0	; () banked
 13213  0022C4  5192               	movf	keypressed@i_246& (0+255),w,b
 13214  0022C6  0100               	movlb	0	; () banked
 13215  0022C8  1193               	iorwf	(keypressed@i_246+1)& (0+255),w,b
 13216  0022CA  B4D8               	btfsc	status,2,c
 13217  0022CC  D7F4               	goto	i2l6906
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;main.c: 142: printf("%d", i);
 13221  0022CE  0ED1               	movlw	low (STR_14+6)
 13222  0022D0  6E40               	movwf	i2printf@f,c
 13223  0022D2  0EFF               	movlw	high (STR_14+6)
 13224  0022D4  6E41               	movwf	i2printf@f+1,c
 13225  0022D6  C092  F042         	movff	keypressed@i_246,?i2_printf+2
 13226  0022DA  C093  F043         	movff	keypressed@i_246+1,?i2_printf+3
 13227  0022DE  EC83  F00B         	call	i2_printf	;wreg free
 13228                           
 13229                           ;main.c: 144: }
 13230                           ;main.c: 145: }
 13231                           ;main.c: 146: for(int i=0;i<300;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13232                           
 13233                           ;main.c: 143: break;
 13234  0022E2  0E00               	movlw	0
 13235  0022E4  0100               	movlb	0	; () banked
 13236  0022E6  6F99               	movwf	(keypressed@i_248+1)& (0+255),b
 13237  0022E8  0E00               	movlw	0
 13238  0022EA  6F98               	movwf	keypressed@i_248& (0+255),b
 13239  0022EC                     i2l6914:
 13240                           
 13241                           ; BSR set to: 0
 13242  0022EC  0100               	movlb	0	; () banked
 13243  0022EE  BF99               	btfsc	(keypressed@i_248+1)& (0+255),7,b
 13244  0022F0  D008               	goto	i2l6918
 13245  0022F2  0E2C               	movlw	44
 13246  0022F4  0100               	movlb	0	; () banked
 13247  0022F6  5D98               	subwf	keypressed@i_248& (0+255),w,b
 13248  0022F8  0E01               	movlw	1
 13249  0022FA  0100               	movlb	0	; () banked
 13250  0022FC  5999               	subwfb	(keypressed@i_248+1)& (0+255),w,b
 13251  0022FE  B0D8               	btfsc	status,0,c
 13252  002300  D3CA               	goto	i2l7084
 13253  002302                     i2l6918:
 13254                           
 13255                           ; BSR set to: 0
 13256  002302  0E1A               	movlw	26
 13257  002304  6E6C               	movwf	??_keypressed& (0+255),c
 13258  002306  0EF8               	movlw	248
 13259  002308                     i2u1144_47:
 13260  002308  2EE8               	decfsz	wreg,f,c
 13261  00230A  D7FE               	bra	i2u1144_47
 13262  00230C  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13263  00230E  D7FC               	bra	i2u1144_47
 13264  002310  D000               	nop2	
 13265  002312  0100               	movlb	0	; () banked
 13266  002314  4B98               	infsnz	keypressed@i_248& (0+255),f,b
 13267  002316  2B99               	incf	(keypressed@i_248+1)& (0+255),f,b
 13268  002318  D7E9               	goto	i2l6914
 13269  00231A                     i2l6922:
 13270                           
 13271                           ; BSR set to: 0
 13272  00231A  0100               	movlb	0	; () banked
 13273  00231C  51B6               	movf	keypressed@keypress& (0+255),w,b
 13274  00231E  0D01               	mullw	1
 13275  002320  0E13               	movlw	low _keys
 13276  002322  24F3               	addwf	prodl,w,c
 13277  002324  6EF6               	movwf	tblptrl,c
 13278  002326  0EFF               	movlw	high _keys
 13279  002328  20F4               	addwfc	prodh,w,c
 13280  00232A  6EF7               	movwf	tblptrh,c
 13281  00232C                     	if	0	;There are less than 3 active tblptr bytes
 13282  00232C                     	endif
 13283  00232C  0008               	tblrd		*
 13284  00232E  50F5               	movf	tablat,w,c
 13285  002330  0A34               	xorlw	52
 13286  002332  A4D8               	btfss	status,2,c
 13287  002334  D096               	goto	i2l6950
 13288                           
 13289                           ; BSR set to: 0
 13290                           ;main.c: 149: float lightVoltSum = 0;
 13291  002336  0E00               	movlw	0
 13292  002338  0100               	movlb	0	; () banked
 13293  00233A  6FB0               	movwf	keypressed@lightVoltSum& (0+255),b
 13294  00233C  0E00               	movlw	0
 13295  00233E  0100               	movlb	0	; () banked
 13296  002340  6FB1               	movwf	(keypressed@lightVoltSum+1)& (0+255),b
 13297  002342  0E00               	movlw	0
 13298  002344  0100               	movlb	0	; () banked
 13299  002346  6FB2               	movwf	(keypressed@lightVoltSum+2)& (0+255),b
 13300                           
 13301                           ;main.c: 150: for (int i = 0; i < 100; i++) {
 13302  002348  0E00               	movlw	0
 13303  00234A  0100               	movlb	0	; () banked
 13304  00234C  6F9B               	movwf	(keypressed@i_250+1)& (0+255),b
 13305  00234E  0E00               	movlw	0
 13306  002350  6F9A               	movwf	keypressed@i_250& (0+255),b
 13307  002352                     i2l6926:
 13308                           
 13309                           ; BSR set to: 0
 13310  002352  0100               	movlb	0	; () banked
 13311  002354  BF9B               	btfsc	(keypressed@i_250+1)& (0+255),7,b
 13312  002356  D008               	goto	i2l6930
 13313  002358  0100               	movlb	0	; () banked
 13314  00235A  519B               	movf	(keypressed@i_250+1)& (0+255),w,b
 13315  00235C  E143               	bnz	i2l6936
 13316  00235E  0E64               	movlw	100
 13317  002360  0100               	movlb	0	; () banked
 13318  002362  5D9A               	subwf	keypressed@i_250& (0+255),w,b
 13319  002364  B0D8               	btfsc	status,0,c
 13320  002366  D03E               	goto	i2l6936
 13321  002368                     i2l6930:
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;main.c: 151: readADC(0);
 13325  002368  0E00               	movlw	0
 13326  00236A  EC9F  F02E         	call	i2_readADC
 13327                           
 13328                           ;main.c: 152: float lightVolt = (float) ((ADRESH << 8) / 236)*5;
 13329  00236E  0E00               	movlw	0
 13330  002370  6E0A               	movwf	i2___awdiv@divisor+1,c
 13331  002372  0EEC               	movlw	236
 13332  002374  6E09               	movwf	i2___awdiv@divisor,c
 13333  002376  50C4               	movf	4036,w,c	;volatile
 13334  002378  6E08               	movwf	i2___awdiv@dividend+1,c
 13335  00237A  6A07               	clrf	i2___awdiv@dividend,c
 13336  00237C  ECC6  F029         	call	i2___awdiv	;wreg free
 13337  002380  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 13338  002384  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 13339  002388  ECBB  F02D         	call	i2___awtoft	;wreg free
 13340  00238C  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 13341  002390  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 13342  002394  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 13343  002398  0E00               	movlw	0
 13344  00239A  6E18               	movwf	i2___ftmul@f2,c
 13345  00239C  0EA0               	movlw	160
 13346  00239E  6E19               	movwf	i2___ftmul@f2+1,c
 13347  0023A0  0E40               	movlw	64
 13348  0023A2  6E1A               	movwf	i2___ftmul@f2+2,c
 13349  0023A4  EC3B  F025         	call	i2___ftmul	;wreg free
 13350  0023A8  C015  F080         	movff	?i2___ftmul,keypressed@lightVolt
 13351  0023AC  C016  F081         	movff	?i2___ftmul+1,keypressed@lightVolt+1
 13352  0023B0  C017  F082         	movff	?i2___ftmul+2,keypressed@lightVolt+2
 13353                           
 13354                           ;main.c: 153: lightVoltSum += lightVolt;
 13355  0023B4  C0B0  F02E         	movff	keypressed@lightVoltSum,i2___ftadd@f1
 13356  0023B8  C0B1  F02F         	movff	keypressed@lightVoltSum+1,i2___ftadd@f1+1
 13357  0023BC  C0B2  F030         	movff	keypressed@lightVoltSum+2,i2___ftadd@f1+2
 13358  0023C0  C080  F031         	movff	keypressed@lightVolt,i2___ftadd@f2
 13359  0023C4  C081  F032         	movff	keypressed@lightVolt+1,i2___ftadd@f2+1
 13360  0023C8  C082  F033         	movff	keypressed@lightVolt+2,i2___ftadd@f2+2
 13361  0023CC  EC8F  F01D         	call	i2___ftadd	;wreg free
 13362  0023D0  C02E  F0B0         	movff	?i2___ftadd,keypressed@lightVoltSum
 13363  0023D4  C02F  F0B1         	movff	?i2___ftadd+1,keypressed@lightVoltSum+1
 13364  0023D8  C030  F0B2         	movff	?i2___ftadd+2,keypressed@lightVoltSum+2
 13365  0023DC  0100               	movlb	0	; () banked
 13366  0023DE  4B9A               	infsnz	keypressed@i_250& (0+255),f,b
 13367  0023E0  2B9B               	incf	(keypressed@i_250+1)& (0+255),f,b
 13368  0023E2  D7B7               	goto	i2l6926
 13369  0023E4                     i2l6936:
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;main.c: 154: }
 13373                           ;main.c: 155: lightVoltSum = lightVoltSum / 1000;
 13374  0023E4  C0B0  F013         	movff	keypressed@lightVoltSum,i2___ftdiv@f1
 13375  0023E8  C0B1  F014         	movff	keypressed@lightVoltSum+1,i2___ftdiv@f1+1
 13376  0023EC  C0B2  F015         	movff	keypressed@lightVoltSum+2,i2___ftdiv@f1+2
 13377  0023F0  0E00               	movlw	0
 13378  0023F2  6E16               	movwf	i2___ftdiv@f2,c
 13379  0023F4  0E7A               	movlw	122
 13380  0023F6  6E17               	movwf	i2___ftdiv@f2+1,c
 13381  0023F8  0E44               	movlw	68
 13382  0023FA  6E18               	movwf	i2___ftdiv@f2+2,c
 13383  0023FC  EC2F  F026         	call	i2___ftdiv	;wreg free
 13384  002400  C013  F0B0         	movff	?i2___ftdiv,keypressed@lightVoltSum
 13385  002404  C014  F0B1         	movff	?i2___ftdiv+1,keypressed@lightVoltSum+1
 13386  002408  C015  F0B2         	movff	?i2___ftdiv+2,keypressed@lightVoltSum+2
 13387                           
 13388                           ;main.c: 157: lcdInst(0b10000000);
 13389  00240C  0E80               	movlw	128
 13390  00240E  EC01  F02F         	call	i2_lcdInst
 13391                           
 13392                           ;main.c: 158: printf("lightSum %f", lightVoltSum);
 13393  002412  0E93               	movlw	low STR_6
 13394  002414  6E40               	movwf	i2printf@f,c
 13395  002416  0EFF               	movlw	high STR_6
 13396  002418  6E41               	movwf	i2printf@f+1,c
 13397  00241A  C0B0  F042         	movff	keypressed@lightVoltSum,?i2_printf+2
 13398  00241E  C0B1  F043         	movff	keypressed@lightVoltSum+1,?i2_printf+3
 13399  002422  C0B2  F044         	movff	keypressed@lightVoltSum+2,?i2_printf+4
 13400  002426  EC83  F00B         	call	i2_printf	;wreg free
 13401                           
 13402                           ;main.c: 159: for(int i=0;i<300;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13403  00242A  0E00               	movlw	0
 13404  00242C  0100               	movlb	0	; () banked
 13405  00242E  6F9D               	movwf	(keypressed@i_253+1)& (0+255),b
 13406  002430  0E00               	movlw	0
 13407  002432  6F9C               	movwf	keypressed@i_253& (0+255),b
 13408  002434                     i2l6942:
 13409                           
 13410                           ; BSR set to: 0
 13411  002434  0100               	movlb	0	; () banked
 13412  002436  BF9D               	btfsc	(keypressed@i_253+1)& (0+255),7,b
 13413  002438  D008               	goto	i2l6946
 13414  00243A  0E2C               	movlw	44
 13415  00243C  0100               	movlb	0	; () banked
 13416  00243E  5D9C               	subwf	keypressed@i_253& (0+255),w,b
 13417  002440  0E01               	movlw	1
 13418  002442  0100               	movlb	0	; () banked
 13419  002444  599D               	subwfb	(keypressed@i_253+1)& (0+255),w,b
 13420  002446  B0D8               	btfsc	status,0,c
 13421  002448  D326               	goto	i2l7084
 13422  00244A                     i2l6946:
 13423                           
 13424                           ; BSR set to: 0
 13425  00244A  0E1A               	movlw	26
 13426  00244C  6E6C               	movwf	??_keypressed& (0+255),c
 13427  00244E  0EF8               	movlw	248
 13428  002450                     i2u1145_47:
 13429  002450  2EE8               	decfsz	wreg,f,c
 13430  002452  D7FE               	bra	i2u1145_47
 13431  002454  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13432  002456  D7FC               	bra	i2u1145_47
 13433  002458  D000               	nop2	
 13434  00245A  0100               	movlb	0	; () banked
 13435  00245C  4B9C               	infsnz	keypressed@i_253& (0+255),f,b
 13436  00245E  2B9D               	incf	(keypressed@i_253+1)& (0+255),f,b
 13437  002460  D7E9               	goto	i2l6942
 13438  002462                     i2l6950:
 13439                           
 13440                           ; BSR set to: 0
 13441  002462  0100               	movlb	0	; () banked
 13442  002464  51B6               	movf	keypressed@keypress& (0+255),w,b
 13443  002466  0D01               	mullw	1
 13444  002468  0E13               	movlw	low _keys
 13445  00246A  24F3               	addwf	prodl,w,c
 13446  00246C  6EF6               	movwf	tblptrl,c
 13447  00246E  0EFF               	movlw	high _keys
 13448  002470  20F4               	addwfc	prodh,w,c
 13449  002472  6EF7               	movwf	tblptrh,c
 13450  002474                     	if	0	;There are less than 3 active tblptr bytes
 13451  002474                     	endif
 13452  002474  0008               	tblrd		*
 13453  002476  50F5               	movf	tablat,w,c
 13454  002478  0A35               	xorlw	53
 13455  00247A  A4D8               	btfss	status,2,c
 13456  00247C  D054               	goto	i2l6976
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;main.c: 162: for (int i = 0; i < 50; i++) {
 13460  00247E  0E00               	movlw	0
 13461  002480  0100               	movlb	0	; () banked
 13462  002482  6F9F               	movwf	(keypressed@i_254+1)& (0+255),b
 13463  002484  0E00               	movlw	0
 13464  002486  6F9E               	movwf	keypressed@i_254& (0+255),b
 13465  002488                     i2l6954:
 13466                           
 13467                           ; BSR set to: 0
 13468  002488  0100               	movlb	0	; () banked
 13469  00248A  BF9F               	btfsc	(keypressed@i_254+1)& (0+255),7,b
 13470  00248C  D008               	goto	i2l133
 13471  00248E  0100               	movlb	0	; () banked
 13472  002490  519F               	movf	(keypressed@i_254+1)& (0+255),w,b
 13473  002492  E11B               	bnz	i2l6964
 13474  002494  0E32               	movlw	50
 13475  002496  0100               	movlb	0	; () banked
 13476  002498  5D9E               	subwf	keypressed@i_254& (0+255),w,b
 13477  00249A  B0D8               	btfsc	status,0,c
 13478  00249C  D016               	goto	i2l6964
 13479  00249E                     i2l133:
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;main.c: 163: LATCbits.LATC5 = 1;
 13483  00249E  8A8B               	bsf	3979,5,c	;volatile
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;main.c: 164: _delay((unsigned long)((2000)*(8000000/4000000.0)));
 13487  0024A0  0E06               	movlw	6
 13488  0024A2  6E6C               	movwf	??_keypressed& (0+255),c
 13489  0024A4  0E30               	movlw	48
 13490  0024A6                     i2u1146_47:
 13491  0024A6  2EE8               	decfsz	wreg,f,c
 13492  0024A8  D7FE               	bra	i2u1146_47
 13493  0024AA  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13494  0024AC  D7FC               	bra	i2u1146_47
 13495  0024AE  D000               	nop2	
 13496                           
 13497                           ;main.c: 165: LATCbits.LATC5 = 0;
 13498  0024B0  9A8B               	bcf	3979,5,c	;volatile
 13499                           
 13500                           ;main.c: 166: _delay((unsigned long)((25000)*(8000000/4000000.0)));
 13501  0024B2  0E41               	movlw	65
 13502  0024B4  6E6C               	movwf	??_keypressed& (0+255),c
 13503  0024B6  0EEE               	movlw	238
 13504  0024B8                     i2u1147_47:
 13505  0024B8  2EE8               	decfsz	wreg,f,c
 13506  0024BA  D7FE               	bra	i2u1147_47
 13507  0024BC  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13508  0024BE  D7FC               	bra	i2u1147_47
 13509  0024C0  D000               	nop2	
 13510  0024C2  0100               	movlb	0	; () banked
 13511  0024C4  4B9E               	infsnz	keypressed@i_254& (0+255),f,b
 13512  0024C6  2B9F               	incf	(keypressed@i_254+1)& (0+255),f,b
 13513  0024C8  D7DF               	goto	i2l6954
 13514  0024CA                     i2l6964:
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;main.c: 167: }
 13518                           ;main.c: 168: for (int i = 0; i < 50; i++) {
 13519  0024CA  0E00               	movlw	0
 13520  0024CC  0100               	movlb	0	; () banked
 13521  0024CE  6FA1               	movwf	(keypressed@i_255+1)& (0+255),b
 13522  0024D0  0E00               	movlw	0
 13523  0024D2  6FA0               	movwf	keypressed@i_255& (0+255),b
 13524                           
 13525                           ; BSR set to: 0
 13526  0024D4  0100               	movlb	0	; () banked
 13527  0024D6  BFA1               	btfsc	(keypressed@i_255+1)& (0+255),7,b
 13528  0024D8  D00A               	goto	i2l135
 13529  0024DA  0100               	movlb	0	; () banked
 13530  0024DC  51A1               	movf	(keypressed@i_255+1)& (0+255),w,b
 13531  0024DE  E106               	bnz	i2u891_40
 13532  0024E0  0E32               	movlw	50
 13533  0024E2  0100               	movlb	0	; () banked
 13534  0024E4  5DA0               	subwf	keypressed@i_255& (0+255),w,b
 13535  0024E6  B0D8               	btfsc	status,0,c
 13536  0024E8  D2D6               	goto	i2l7084
 13537  0024EA  D001               	goto	i2l135
 13538  0024EC                     i2u891_40:
 13539                           
 13540                           ; BSR set to: 0
 13541  0024EC  D2D4               	goto	i2l7084
 13542  0024EE                     i2l135:
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;main.c: 169: LATCbits.LATC5 = 1;
 13546  0024EE  8A8B               	bsf	3979,5,c	;volatile
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;main.c: 170: _delay((unsigned long)((3200)*(8000000/4000000.0)));
 13550  0024F0  0E09               	movlw	9
 13551  0024F2  6E6C               	movwf	??_keypressed& (0+255),c
 13552  0024F4  0E4E               	movlw	78
 13553  0024F6                     i2u1148_47:
 13554  0024F6  2EE8               	decfsz	wreg,f,c
 13555  0024F8  D7FE               	bra	i2u1148_47
 13556  0024FA  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13557  0024FC  D7FC               	bra	i2u1148_47
 13558  0024FE  D000               	nop2	
 13559                           
 13560                           ;main.c: 171: LATCbits.LATC5 = 0;
 13561  002500  9A8B               	bcf	3979,5,c	;volatile
 13562                           
 13563                           ;main.c: 172: _delay((unsigned long)((18500)*(8000000/4000000.0)));
 13564  002502  0E31               	movlw	49
 13565  002504  6E6C               	movwf	??_keypressed& (0+255),c
 13566  002506  0E0C               	movlw	12
 13567  002508                     i2u1149_47:
 13568  002508  2EE8               	decfsz	wreg,f,c
 13569  00250A  D7FE               	bra	i2u1149_47
 13570  00250C  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13571  00250E  D7FC               	bra	i2u1149_47
 13572  002510  0100               	movlb	0	; () banked
 13573  002512  4BA0               	infsnz	keypressed@i_255& (0+255),f,b
 13574  002514  2BA1               	incf	(keypressed@i_255+1)& (0+255),f,b
 13575  002516  0100               	movlb	0	; () banked
 13576  002518  BFA1               	btfsc	(keypressed@i_255+1)& (0+255),7,b
 13577  00251A  D7E9               	goto	i2l135
 13578  00251C  0100               	movlb	0	; () banked
 13579  00251E  51A1               	movf	(keypressed@i_255+1)& (0+255),w,b
 13580  002520  E101               	bnz	i2u892_40
 13581  002522  D7DE               	goto	L12
 13582  002524                     i2u892_40:
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;main.c: 173: }
 13586                           ;main.c: 175: } else if (keys[keypress] == '6') {
 13587  002524  D2B8               	goto	i2l7084
 13588  002526                     i2l6976:
 13589                           
 13590                           ; BSR set to: 0
 13591  002526  0100               	movlb	0	; () banked
 13592  002528  51B6               	movf	keypressed@keypress& (0+255),w,b
 13593  00252A  0D01               	mullw	1
 13594  00252C  0E13               	movlw	low _keys
 13595  00252E  24F3               	addwf	prodl,w,c
 13596  002530  6EF6               	movwf	tblptrl,c
 13597  002532  0EFF               	movlw	high _keys
 13598  002534  20F4               	addwfc	prodh,w,c
 13599  002536  6EF7               	movwf	tblptrh,c
 13600  002538                     	if	0	;There are less than 3 active tblptr bytes
 13601  002538                     	endif
 13602  002538  0008               	tblrd		*
 13603  00253A  50F5               	movf	tablat,w,c
 13604  00253C  0A36               	xorlw	54
 13605  00253E  A4D8               	btfss	status,2,c
 13606  002540  D003               	goto	i2l6980
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;main.c: 176: rotate90();
 13610  002542  EC7D  F02D         	call	i2_rotate90	;wreg free
 13611                           
 13612                           ;main.c: 177: } else if (keys[keypress] == '7') {
 13613  002546  D2A7               	goto	i2l7084
 13614  002548                     i2l6980:
 13615  002548  0100               	movlb	0	; () banked
 13616  00254A  51B6               	movf	keypressed@keypress& (0+255),w,b
 13617  00254C  0D01               	mullw	1
 13618  00254E  0E13               	movlw	low _keys
 13619  002550  24F3               	addwf	prodl,w,c
 13620  002552  6EF6               	movwf	tblptrl,c
 13621  002554  0EFF               	movlw	high _keys
 13622  002556  20F4               	addwfc	prodh,w,c
 13623  002558  6EF7               	movwf	tblptrh,c
 13624  00255A                     	if	0	;There are less than 3 active tblptr bytes
 13625  00255A                     	endif
 13626  00255A  0008               	tblrd		*
 13627  00255C  50F5               	movf	tablat,w,c
 13628  00255E  0A37               	xorlw	55
 13629  002560  A4D8               	btfss	status,2,c
 13630  002562  D003               	goto	i2l6984
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;main.c: 178: dc_forward();
 13634  002564  EC5D  F02D         	call	i2_dc_forward	;wreg free
 13635                           
 13636                           ;main.c: 179: } else if (keys[keypress] == '8') {
 13637  002568  D296               	goto	i2l7084
 13638  00256A                     i2l6984:
 13639  00256A  0100               	movlb	0	; () banked
 13640  00256C  51B6               	movf	keypressed@keypress& (0+255),w,b
 13641  00256E  0D01               	mullw	1
 13642  002570  0E13               	movlw	low _keys
 13643  002572  24F3               	addwf	prodl,w,c
 13644  002574  6EF6               	movwf	tblptrl,c
 13645  002576  0EFF               	movlw	high _keys
 13646  002578  20F4               	addwfc	prodh,w,c
 13647  00257A  6EF7               	movwf	tblptrh,c
 13648  00257C                     	if	0	;There are less than 3 active tblptr bytes
 13649  00257C                     	endif
 13650  00257C  0008               	tblrd		*
 13651  00257E  50F5               	movf	tablat,w,c
 13652  002580  0A38               	xorlw	56
 13653  002582  A4D8               	btfss	status,2,c
 13654  002584  D003               	goto	i2l6988
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;main.c: 180: dc_reverse();
 13658  002586  EC3D  F02D         	call	i2_dc_reverse	;wreg free
 13659                           
 13660                           ;main.c: 181: } else if (keys[keypress] == '9') {
 13661  00258A  D285               	goto	i2l7084
 13662  00258C                     i2l6988:
 13663  00258C  0100               	movlb	0	; () banked
 13664  00258E  51B6               	movf	keypressed@keypress& (0+255),w,b
 13665  002590  0D01               	mullw	1
 13666  002592  0E13               	movlw	low _keys
 13667  002594  24F3               	addwf	prodl,w,c
 13668  002596  6EF6               	movwf	tblptrl,c
 13669  002598  0EFF               	movlw	high _keys
 13670  00259A  20F4               	addwfc	prodh,w,c
 13671  00259C  6EF7               	movwf	tblptrh,c
 13672  00259E                     	if	0	;There are less than 3 active tblptr bytes
 13673  00259E                     	endif
 13674  00259E  0008               	tblrd		*
 13675  0025A0  50F5               	movf	tablat,w,c
 13676  0025A2  0A39               	xorlw	57
 13677  0025A4  A4D8               	btfss	status,2,c
 13678  0025A6  D003               	goto	i2l6992
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;main.c: 182: dc_stop();
 13682  0025A8  EC17  F02F         	call	i2_dc_stop	;wreg free
 13683                           
 13684                           ;main.c: 183: } else if (keys[keypress] == 'A') {
 13685  0025AC  D274               	goto	i2l7084
 13686  0025AE                     i2l6992:
 13687  0025AE  0100               	movlb	0	; () banked
 13688  0025B0  51B6               	movf	keypressed@keypress& (0+255),w,b
 13689  0025B2  0D01               	mullw	1
 13690  0025B4  0E13               	movlw	low _keys
 13691  0025B6  24F3               	addwf	prodl,w,c
 13692  0025B8  6EF6               	movwf	tblptrl,c
 13693  0025BA  0EFF               	movlw	high _keys
 13694  0025BC  20F4               	addwfc	prodh,w,c
 13695  0025BE  6EF7               	movwf	tblptrh,c
 13696  0025C0                     	if	0	;There are less than 3 active tblptr bytes
 13697  0025C0                     	endif
 13698  0025C0  0008               	tblrd		*
 13699  0025C2  50F5               	movf	tablat,w,c
 13700  0025C4  0A41               	xorlw	65
 13701  0025C6  A4D8               	btfss	status,2,c
 13702  0025C8  D051               	goto	i2l7008
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;main.c: 186: readADC(1);
 13706  0025CA  0E01               	movlw	1
 13707  0025CC  EC9F  F02E         	call	i2_readADC
 13708                           
 13709                           ;main.c: 187: float proxVolt = (float) ((ADRESH << 8) / 236)*5;
 13710  0025D0  0E00               	movlw	0
 13711  0025D2  6E0A               	movwf	i2___awdiv@divisor+1,c
 13712  0025D4  0EEC               	movlw	236
 13713  0025D6  6E09               	movwf	i2___awdiv@divisor,c
 13714  0025D8  50C4               	movf	4036,w,c	;volatile
 13715  0025DA  6E08               	movwf	i2___awdiv@dividend+1,c
 13716  0025DC  6A07               	clrf	i2___awdiv@dividend,c
 13717  0025DE  ECC6  F029         	call	i2___awdiv	;wreg free
 13718  0025E2  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 13719  0025E6  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 13720  0025EA  ECBB  F02D         	call	i2___awtoft	;wreg free
 13721  0025EE  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 13722  0025F2  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 13723  0025F6  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 13724  0025FA  0E00               	movlw	0
 13725  0025FC  6E18               	movwf	i2___ftmul@f2,c
 13726  0025FE  0EA0               	movlw	160
 13727  002600  6E19               	movwf	i2___ftmul@f2+1,c
 13728  002602  0E40               	movlw	64
 13729  002604  6E1A               	movwf	i2___ftmul@f2+2,c
 13730  002606  EC3B  F025         	call	i2___ftmul	;wreg free
 13731  00260A  C015  F083         	movff	?i2___ftmul,keypressed@proxVolt
 13732  00260E  C016  F084         	movff	?i2___ftmul+1,keypressed@proxVolt+1
 13733  002612  C017  F085         	movff	?i2___ftmul+2,keypressed@proxVolt+2
 13734                           
 13735                           ;main.c: 188: lcdInst(0b10000000);
 13736  002616  0E80               	movlw	128
 13737  002618  EC01  F02F         	call	i2_lcdInst
 13738                           
 13739                           ;main.c: 189: printf("proxVolt %f", proxVolt);
 13740  00261C  0E9F               	movlw	low STR_7
 13741  00261E  6E40               	movwf	i2printf@f,c
 13742  002620  0EFF               	movlw	high STR_7
 13743  002622  6E41               	movwf	i2printf@f+1,c
 13744  002624  C083  F042         	movff	keypressed@proxVolt,?i2_printf+2
 13745  002628  C084  F043         	movff	keypressed@proxVolt+1,?i2_printf+3
 13746  00262C  C085  F044         	movff	keypressed@proxVolt+2,?i2_printf+4
 13747  002630  EC83  F00B         	call	i2_printf	;wreg free
 13748                           
 13749                           ;main.c: 190: for(int i=0;i<300;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13750  002634  0E00               	movlw	0
 13751  002636  0100               	movlb	0	; () banked
 13752  002638  6FA3               	movwf	(keypressed@i_258+1)& (0+255),b
 13753  00263A  0E00               	movlw	0
 13754  00263C  6FA2               	movwf	keypressed@i_258& (0+255),b
 13755  00263E                     i2l7000:
 13756                           
 13757                           ; BSR set to: 0
 13758  00263E  0100               	movlb	0	; () banked
 13759  002640  BFA3               	btfsc	(keypressed@i_258+1)& (0+255),7,b
 13760  002642  D008               	goto	i2l7004
 13761  002644  0E2C               	movlw	44
 13762  002646  0100               	movlb	0	; () banked
 13763  002648  5DA2               	subwf	keypressed@i_258& (0+255),w,b
 13764  00264A  0E01               	movlw	1
 13765  00264C  0100               	movlb	0	; () banked
 13766  00264E  59A3               	subwfb	(keypressed@i_258+1)& (0+255),w,b
 13767  002650  B0D8               	btfsc	status,0,c
 13768  002652  D221               	goto	i2l7084
 13769  002654                     i2l7004:
 13770                           
 13771                           ; BSR set to: 0
 13772  002654  0E1A               	movlw	26
 13773  002656  6E6C               	movwf	??_keypressed& (0+255),c
 13774  002658  0EF8               	movlw	248
 13775  00265A                     i2u1150_47:
 13776  00265A  2EE8               	decfsz	wreg,f,c
 13777  00265C  D7FE               	bra	i2u1150_47
 13778  00265E  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13779  002660  D7FC               	bra	i2u1150_47
 13780  002662  D000               	nop2	
 13781  002664  0100               	movlb	0	; () banked
 13782  002666  4BA2               	infsnz	keypressed@i_258& (0+255),f,b
 13783  002668  2BA3               	incf	(keypressed@i_258+1)& (0+255),f,b
 13784  00266A  D7E9               	goto	i2l7000
 13785  00266C                     i2l7008:
 13786                           
 13787                           ; BSR set to: 0
 13788  00266C  0100               	movlb	0	; () banked
 13789  00266E  51B6               	movf	keypressed@keypress& (0+255),w,b
 13790  002670  0D01               	mullw	1
 13791  002672  0E13               	movlw	low _keys
 13792  002674  24F3               	addwf	prodl,w,c
 13793  002676  6EF6               	movwf	tblptrl,c
 13794  002678  0EFF               	movlw	high _keys
 13795  00267A  20F4               	addwfc	prodh,w,c
 13796  00267C  6EF7               	movwf	tblptrh,c
 13797  00267E                     	if	0	;There are less than 3 active tblptr bytes
 13798  00267E                     	endif
 13799  00267E  0008               	tblrd		*
 13800  002680  50F5               	movf	tablat,w,c
 13801  002682  0A42               	xorlw	66
 13802  002684  A4D8               	btfss	status,2,c
 13803  002686  D051               	goto	i2l7024
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;main.c: 193: readADC(2);
 13807  002688  0E02               	movlw	2
 13808  00268A  EC9F  F02E         	call	i2_readADC
 13809                           
 13810                           ;main.c: 194: float IRSensor = (float) ((ADRESH << 8) / 236)*5;
 13811  00268E  0E00               	movlw	0
 13812  002690  6E0A               	movwf	i2___awdiv@divisor+1,c
 13813  002692  0EEC               	movlw	236
 13814  002694  6E09               	movwf	i2___awdiv@divisor,c
 13815  002696  50C4               	movf	4036,w,c	;volatile
 13816  002698  6E08               	movwf	i2___awdiv@dividend+1,c
 13817  00269A  6A07               	clrf	i2___awdiv@dividend,c
 13818  00269C  ECC6  F029         	call	i2___awdiv	;wreg free
 13819  0026A0  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 13820  0026A4  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 13821  0026A8  ECBB  F02D         	call	i2___awtoft	;wreg free
 13822  0026AC  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 13823  0026B0  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 13824  0026B4  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 13825  0026B8  0E00               	movlw	0
 13826  0026BA  6E18               	movwf	i2___ftmul@f2,c
 13827  0026BC  0EA0               	movlw	160
 13828  0026BE  6E19               	movwf	i2___ftmul@f2+1,c
 13829  0026C0  0E40               	movlw	64
 13830  0026C2  6E1A               	movwf	i2___ftmul@f2+2,c
 13831  0026C4  EC3B  F025         	call	i2___ftmul	;wreg free
 13832  0026C8  C015  F086         	movff	?i2___ftmul,keypressed@IRSensor
 13833  0026CC  C016  F087         	movff	?i2___ftmul+1,keypressed@IRSensor+1
 13834  0026D0  C017  F088         	movff	?i2___ftmul+2,keypressed@IRSensor+2
 13835                           
 13836                           ;main.c: 195: lcdInst(0b10000000);
 13837  0026D4  0E80               	movlw	128
 13838  0026D6  EC01  F02F         	call	i2_lcdInst
 13839                           
 13840                           ;main.c: 196: printf("IR %f", IRSensor);
 13841  0026DA  0EF4               	movlw	low STR_8
 13842  0026DC  6E40               	movwf	i2printf@f,c
 13843  0026DE  0EFF               	movlw	high STR_8
 13844  0026E0  6E41               	movwf	i2printf@f+1,c
 13845  0026E2  C086  F042         	movff	keypressed@IRSensor,?i2_printf+2
 13846  0026E6  C087  F043         	movff	keypressed@IRSensor+1,?i2_printf+3
 13847  0026EA  C088  F044         	movff	keypressed@IRSensor+2,?i2_printf+4
 13848  0026EE  EC83  F00B         	call	i2_printf	;wreg free
 13849                           
 13850                           ;main.c: 197: for(int i=0;i<300;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 13851  0026F2  0E00               	movlw	0
 13852  0026F4  0100               	movlb	0	; () banked
 13853  0026F6  6FA5               	movwf	(keypressed@i_261+1)& (0+255),b
 13854  0026F8  0E00               	movlw	0
 13855  0026FA  6FA4               	movwf	keypressed@i_261& (0+255),b
 13856  0026FC                     i2l7016:
 13857                           
 13858                           ; BSR set to: 0
 13859  0026FC  0100               	movlb	0	; () banked
 13860  0026FE  BFA5               	btfsc	(keypressed@i_261+1)& (0+255),7,b
 13861  002700  D008               	goto	i2l7020
 13862  002702  0E2C               	movlw	44
 13863  002704  0100               	movlb	0	; () banked
 13864  002706  5DA4               	subwf	keypressed@i_261& (0+255),w,b
 13865  002708  0E01               	movlw	1
 13866  00270A  0100               	movlb	0	; () banked
 13867  00270C  59A5               	subwfb	(keypressed@i_261+1)& (0+255),w,b
 13868  00270E  B0D8               	btfsc	status,0,c
 13869  002710  D1C2               	goto	i2l7084
 13870  002712                     i2l7020:
 13871                           
 13872                           ; BSR set to: 0
 13873  002712  0E1A               	movlw	26
 13874  002714  6E6C               	movwf	??_keypressed& (0+255),c
 13875  002716  0EF8               	movlw	248
 13876  002718                     i2u1151_47:
 13877  002718  2EE8               	decfsz	wreg,f,c
 13878  00271A  D7FE               	bra	i2u1151_47
 13879  00271C  2E6C               	decfsz	??_keypressed& (0+255),f,c
 13880  00271E  D7FC               	bra	i2u1151_47
 13881  002720  D000               	nop2	
 13882  002722  0100               	movlb	0	; () banked
 13883  002724  4BA4               	infsnz	keypressed@i_261& (0+255),f,b
 13884  002726  2BA5               	incf	(keypressed@i_261+1)& (0+255),f,b
 13885  002728  D7E9               	goto	i2l7016
 13886  00272A                     i2l7024:
 13887                           
 13888                           ; BSR set to: 0
 13889  00272A  0100               	movlb	0	; () banked
 13890  00272C  51B6               	movf	keypressed@keypress& (0+255),w,b
 13891  00272E  0D01               	mullw	1
 13892  002730  0E13               	movlw	low _keys
 13893  002732  24F3               	addwf	prodl,w,c
 13894  002734  6EF6               	movwf	tblptrl,c
 13895  002736  0EFF               	movlw	high _keys
 13896  002738  20F4               	addwfc	prodh,w,c
 13897  00273A  6EF7               	movwf	tblptrh,c
 13898  00273C                     	if	0	;There are less than 3 active tblptr bytes
 13899  00273C                     	endif
 13900  00273C  0008               	tblrd		*
 13901  00273E  50F5               	movf	tablat,w,c
 13902  002740  0A44               	xorlw	68
 13903  002742  A4D8               	btfss	status,2,c
 13904  002744  D188               	goto	i2l7076
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;main.c: 199: readADC(2);
 13908  002746  0E02               	movlw	2
 13909  002748  EC9F  F02E         	call	i2_readADC
 13910                           
 13911                           ;main.c: 200: float IRVolt = (float) ((ADRESH << 8) / 236)*5;
 13912  00274C  0E00               	movlw	0
 13913  00274E  6E0A               	movwf	i2___awdiv@divisor+1,c
 13914  002750  0EEC               	movlw	236
 13915  002752  6E09               	movwf	i2___awdiv@divisor,c
 13916  002754  50C4               	movf	4036,w,c	;volatile
 13917  002756  6E08               	movwf	i2___awdiv@dividend+1,c
 13918  002758  6A07               	clrf	i2___awdiv@dividend,c
 13919  00275A  ECC6  F029         	call	i2___awdiv	;wreg free
 13920  00275E  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 13921  002762  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 13922  002766  ECBB  F02D         	call	i2___awtoft	;wreg free
 13923  00276A  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 13924  00276E  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 13925  002772  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 13926  002776  0E00               	movlw	0
 13927  002778  6E18               	movwf	i2___ftmul@f2,c
 13928  00277A  0EA0               	movlw	160
 13929  00277C  6E19               	movwf	i2___ftmul@f2+1,c
 13930  00277E  0E40               	movlw	64
 13931  002780  6E1A               	movwf	i2___ftmul@f2+2,c
 13932  002782  EC3B  F025         	call	i2___ftmul	;wreg free
 13933  002786  C015  F0AA         	movff	?i2___ftmul,keypressed@IRVolt
 13934  00278A  C016  F0AB         	movff	?i2___ftmul+1,keypressed@IRVolt+1
 13935  00278E  C017  F0AC         	movff	?i2___ftmul+2,keypressed@IRVolt+2
 13936                           
 13937                           ;main.c: 202: readADC(1);
 13938  002792  0E01               	movlw	1
 13939  002794  EC9F  F02E         	call	i2_readADC
 13940                           
 13941                           ;main.c: 203: float proxVolt = (float) ((ADRESH << 8) / 236)*5;
 13942  002798  0E00               	movlw	0
 13943  00279A  6E0A               	movwf	i2___awdiv@divisor+1,c
 13944  00279C  0EEC               	movlw	236
 13945  00279E  6E09               	movwf	i2___awdiv@divisor,c
 13946  0027A0  50C4               	movf	4036,w,c	;volatile
 13947  0027A2  6E08               	movwf	i2___awdiv@dividend+1,c
 13948  0027A4  6A07               	clrf	i2___awdiv@dividend,c
 13949  0027A6  ECC6  F029         	call	i2___awdiv	;wreg free
 13950  0027AA  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 13951  0027AE  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 13952  0027B2  ECBB  F02D         	call	i2___awtoft	;wreg free
 13953  0027B6  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 13954  0027BA  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 13955  0027BE  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 13956  0027C2  0E00               	movlw	0
 13957  0027C4  6E18               	movwf	i2___ftmul@f2,c
 13958  0027C6  0EA0               	movlw	160
 13959  0027C8  6E19               	movwf	i2___ftmul@f2+1,c
 13960  0027CA  0E40               	movlw	64
 13961  0027CC  6E1A               	movwf	i2___ftmul@f2+2,c
 13962  0027CE  EC3B  F025         	call	i2___ftmul	;wreg free
 13963  0027D2  C015  F0AD         	movff	?i2___ftmul,keypressed@proxVolt_263
 13964  0027D6  C016  F0AE         	movff	?i2___ftmul+1,keypressed@proxVolt_263+1
 13965  0027DA  C017  F0AF         	movff	?i2___ftmul+2,keypressed@proxVolt_263+2
 13966                           
 13967                           ;main.c: 206: float lightVoltSum = 0;
 13968  0027DE  0E00               	movlw	0
 13969  0027E0  0100               	movlb	0	; () banked
 13970  0027E2  6FB3               	movwf	keypressed@lightVoltSum_264& (0+255),b
 13971  0027E4  0E00               	movlw	0
 13972  0027E6  0100               	movlb	0	; () banked
 13973  0027E8  6FB4               	movwf	(keypressed@lightVoltSum_264+1)& (0+255),b
 13974  0027EA  0E00               	movlw	0
 13975  0027EC  0100               	movlb	0	; () banked
 13976  0027EE  6FB5               	movwf	(keypressed@lightVoltSum_264+2)& (0+255),b
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;main.c: 208: for (int i = 0; i < 1000; i++) {
 13980  0027F0  0E00               	movlw	0
 13981  0027F2  0100               	movlb	0	; () banked
 13982  0027F4  6FA7               	movwf	(keypressed@i_265+1)& (0+255),b
 13983  0027F6  0E00               	movlw	0
 13984  0027F8  6FA6               	movwf	keypressed@i_265& (0+255),b
 13985  0027FA                     i2l7032:
 13986                           
 13987                           ; BSR set to: 0
 13988  0027FA  0100               	movlb	0	; () banked
 13989  0027FC  BFA7               	btfsc	(keypressed@i_265+1)& (0+255),7,b
 13990  0027FE  D008               	goto	i2l7036
 13991  002800  0EE8               	movlw	232
 13992  002802  0100               	movlb	0	; () banked
 13993  002804  5DA6               	subwf	keypressed@i_265& (0+255),w,b
 13994  002806  0E03               	movlw	3
 13995  002808  0100               	movlb	0	; () banked
 13996  00280A  59A7               	subwfb	(keypressed@i_265+1)& (0+255),w,b
 13997  00280C  B0D8               	btfsc	status,0,c
 13998  00280E  D03E               	goto	i2l7042
 13999  002810                     i2l7036:
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;main.c: 209: readADC(0);
 14003  002810  0E00               	movlw	0
 14004  002812  EC9F  F02E         	call	i2_readADC
 14005                           
 14006                           ;main.c: 210: float lightVolt = (float) ((ADRESH << 8) / 236)*5;
 14007  002816  0E00               	movlw	0
 14008  002818  6E0A               	movwf	i2___awdiv@divisor+1,c
 14009  00281A  0EEC               	movlw	236
 14010  00281C  6E09               	movwf	i2___awdiv@divisor,c
 14011  00281E  50C4               	movf	4036,w,c	;volatile
 14012  002820  6E08               	movwf	i2___awdiv@dividend+1,c
 14013  002822  6A07               	clrf	i2___awdiv@dividend,c
 14014  002824  ECC6  F029         	call	i2___awdiv	;wreg free
 14015  002828  C007  F00F         	movff	?i2___awdiv,i2___awtoft@c
 14016  00282C  C008  F010         	movff	?i2___awdiv+1,i2___awtoft@c+1
 14017  002830  ECBB  F02D         	call	i2___awtoft	;wreg free
 14018  002834  C00F  F015         	movff	?i2___awtoft,i2___ftmul@f1
 14019  002838  C010  F016         	movff	?i2___awtoft+1,i2___ftmul@f1+1
 14020  00283C  C011  F017         	movff	?i2___awtoft+2,i2___ftmul@f1+2
 14021  002840  0E00               	movlw	0
 14022  002842  6E18               	movwf	i2___ftmul@f2,c
 14023  002844  0EA0               	movlw	160
 14024  002846  6E19               	movwf	i2___ftmul@f2+1,c
 14025  002848  0E40               	movlw	64
 14026  00284A  6E1A               	movwf	i2___ftmul@f2+2,c
 14027  00284C  EC3B  F025         	call	i2___ftmul	;wreg free
 14028  002850  C015  F089         	movff	?i2___ftmul,keypressed@lightVolt_266
 14029  002854  C016  F08A         	movff	?i2___ftmul+1,keypressed@lightVolt_266+1
 14030  002858  C017  F08B         	movff	?i2___ftmul+2,keypressed@lightVolt_266+2
 14031                           
 14032                           ;main.c: 211: lightVoltSum += lightVolt;
 14033  00285C  C0B3  F02E         	movff	keypressed@lightVoltSum_264,i2___ftadd@f1
 14034  002860  C0B4  F02F         	movff	keypressed@lightVoltSum_264+1,i2___ftadd@f1+1
 14035  002864  C0B5  F030         	movff	keypressed@lightVoltSum_264+2,i2___ftadd@f1+2
 14036  002868  C089  F031         	movff	keypressed@lightVolt_266,i2___ftadd@f2
 14037  00286C  C08A  F032         	movff	keypressed@lightVolt_266+1,i2___ftadd@f2+1
 14038  002870  C08B  F033         	movff	keypressed@lightVolt_266+2,i2___ftadd@f2+2
 14039  002874  EC8F  F01D         	call	i2___ftadd	;wreg free
 14040  002878  C02E  F0B3         	movff	?i2___ftadd,keypressed@lightVoltSum_264
 14041  00287C  C02F  F0B4         	movff	?i2___ftadd+1,keypressed@lightVoltSum_264+1
 14042  002880  C030  F0B5         	movff	?i2___ftadd+2,keypressed@lightVoltSum_264+2
 14043  002884  0100               	movlb	0	; () banked
 14044  002886  4BA6               	infsnz	keypressed@i_265& (0+255),f,b
 14045  002888  2BA7               	incf	(keypressed@i_265+1)& (0+255),f,b
 14046  00288A  D7B7               	goto	i2l7032
 14047  00288C                     i2l7042:
 14048                           
 14049                           ; BSR set to: 0
 14050                           ;main.c: 212: }
 14051                           ;main.c: 214: lightVoltSum = lightVoltSum / 10000;
 14052  00288C  C0B3  F013         	movff	keypressed@lightVoltSum_264,i2___ftdiv@f1
 14053  002890  C0B4  F014         	movff	keypressed@lightVoltSum_264+1,i2___ftdiv@f1+1
 14054  002894  C0B5  F015         	movff	keypressed@lightVoltSum_264+2,i2___ftdiv@f1+2
 14055  002898  0E40               	movlw	64
 14056  00289A  6E16               	movwf	i2___ftdiv@f2,c
 14057  00289C  0E1C               	movlw	28
 14058  00289E  6E17               	movwf	i2___ftdiv@f2+1,c
 14059  0028A0  0E46               	movlw	70
 14060  0028A2  6E18               	movwf	i2___ftdiv@f2+2,c
 14061  0028A4  EC2F  F026         	call	i2___ftdiv	;wreg free
 14062  0028A8  C013  F0B3         	movff	?i2___ftdiv,keypressed@lightVoltSum_264
 14063  0028AC  C014  F0B4         	movff	?i2___ftdiv+1,keypressed@lightVoltSum_264+1
 14064  0028B0  C015  F0B5         	movff	?i2___ftdiv+2,keypressed@lightVoltSum_264+2
 14065                           
 14066                           ;main.c: 216: lcdInst(0b11000000);
 14067  0028B4  0EC0               	movlw	192
 14068  0028B6  EC01  F02F         	call	i2_lcdInst
 14069                           
 14070                           ;main.c: 217: int prox = (int) proxVolt;
 14071  0028BA  C0AD  F024         	movff	keypressed@proxVolt_263,i2___fttol@f1
 14072  0028BE  C0AE  F025         	movff	keypressed@proxVolt_263+1,i2___fttol@f1+1
 14073  0028C2  C0AF  F026         	movff	keypressed@proxVolt_263+2,i2___fttol@f1+2
 14074  0028C6  ECB5  F025         	call	i2___fttol	;wreg free
 14075  0028CA  C024  F08C         	movff	?i2___fttol,keypressed@prox
 14076  0028CE  C025  F08D         	movff	?i2___fttol+1,keypressed@prox+1
 14077                           
 14078                           ;main.c: 218: int light = (int) (lightVoltSum * 10);
 14079  0028D2  0E00               	movlw	0
 14080  0028D4  6E18               	movwf	i2___ftmul@f2,c
 14081  0028D6  0E20               	movlw	32
 14082  0028D8  6E19               	movwf	i2___ftmul@f2+1,c
 14083  0028DA  0E41               	movlw	65
 14084  0028DC  6E1A               	movwf	i2___ftmul@f2+2,c
 14085  0028DE  C0B3  F015         	movff	keypressed@lightVoltSum_264,i2___ftmul@f1
 14086  0028E2  C0B4  F016         	movff	keypressed@lightVoltSum_264+1,i2___ftmul@f1+1
 14087  0028E6  C0B5  F017         	movff	keypressed@lightVoltSum_264+2,i2___ftmul@f1+2
 14088  0028EA  EC3B  F025         	call	i2___ftmul	;wreg free
 14089  0028EE  C015  F024         	movff	?i2___ftmul,i2___fttol@f1
 14090  0028F2  C016  F025         	movff	?i2___ftmul+1,i2___fttol@f1+1
 14091  0028F6  C017  F026         	movff	?i2___ftmul+2,i2___fttol@f1+2
 14092  0028FA  ECB5  F025         	call	i2___fttol	;wreg free
 14093  0028FE  C024  F08E         	movff	?i2___fttol,keypressed@light
 14094  002902  C025  F08F         	movff	?i2___fttol+1,keypressed@light+1
 14095                           
 14096                           ;main.c: 219: int IR = (int) IRVolt;
 14097  002906  C0AA  F024         	movff	keypressed@IRVolt,i2___fttol@f1
 14098  00290A  C0AB  F025         	movff	keypressed@IRVolt+1,i2___fttol@f1+1
 14099  00290E  C0AC  F026         	movff	keypressed@IRVolt+2,i2___fttol@f1+2
 14100  002912  ECB5  F025         	call	i2___fttol	;wreg free
 14101  002916  C024  F090         	movff	?i2___fttol,keypressed@IR
 14102  00291A  C025  F091         	movff	?i2___fttol+1,keypressed@IR+1
 14103                           
 14104                           ;main.c: 220: printf("%d %d %d", light, prox, IR);
 14105  00291E  0ED4               	movlw	low STR_9
 14106  002920  6E40               	movwf	i2printf@f,c
 14107  002922  0EFF               	movlw	high STR_9
 14108  002924  6E41               	movwf	i2printf@f+1,c
 14109  002926  C08E  F042         	movff	keypressed@light,?i2_printf+2
 14110  00292A  C08F  F043         	movff	keypressed@light+1,?i2_printf+3
 14111  00292E  C08C  F044         	movff	keypressed@prox,?i2_printf+4
 14112  002932  C08D  F045         	movff	keypressed@prox+1,?i2_printf+5
 14113  002936  C090  F046         	movff	keypressed@IR,?i2_printf+6
 14114  00293A  C091  F047         	movff	keypressed@IR+1,?i2_printf+7
 14115  00293E  EC83  F00B         	call	i2_printf	;wreg free
 14116                           
 14117                           ;main.c: 222: lcdInst(0b10000000);
 14118  002942  0E80               	movlw	128
 14119  002944  EC01  F02F         	call	i2_lcdInst
 14120                           
 14121                           ;main.c: 225: if (lightVoltSum > 39) {
 14122  002948  0E00               	movlw	0
 14123  00294A  6E01               	movwf	i2___ftge@ff1,c
 14124  00294C  0E1C               	movlw	28
 14125  00294E  6E02               	movwf	i2___ftge@ff1+1,c
 14126  002950  0E42               	movlw	66
 14127  002952  6E03               	movwf	i2___ftge@ff1+2,c
 14128  002954  C0B3  F004         	movff	keypressed@lightVoltSum_264,i2___ftge@ff2
 14129  002958  C0B4  F005         	movff	keypressed@lightVoltSum_264+1,i2___ftge@ff2+1
 14130  00295C  C0B5  F006         	movff	keypressed@lightVoltSum_264+2,i2___ftge@ff2+2
 14131  002960  EC7E  F029         	call	i2___ftge	;wreg free
 14132  002964  B0D8               	btfsc	status,0,c
 14133  002966  D02E               	goto	i2l7058
 14134                           
 14135                           ;main.c: 226: if (IRVolt < -100 || proxVolt > 350) {
 14136  002968  C0AA  F001         	movff	keypressed@IRVolt,i2___ftge@ff1
 14137  00296C  C0AB  F002         	movff	keypressed@IRVolt+1,i2___ftge@ff1+1
 14138  002970  C0AC  F003         	movff	keypressed@IRVolt+2,i2___ftge@ff1+2
 14139  002974  0E00               	movlw	0
 14140  002976  6E04               	movwf	i2___ftge@ff2,c
 14141  002978  0EC8               	movlw	200
 14142  00297A  6E05               	movwf	i2___ftge@ff2+1,c
 14143  00297C  0EC2               	movlw	194
 14144  00297E  6E06               	movwf	i2___ftge@ff2+2,c
 14145  002980  EC7E  F029         	call	i2___ftge	;wreg free
 14146  002984  A0D8               	btfss	status,0,c
 14147  002986  D010               	goto	i2l7054
 14148  002988  0E00               	movlw	0
 14149  00298A  6E01               	movwf	i2___ftge@ff1,c
 14150  00298C  0EAF               	movlw	175
 14151  00298E  6E02               	movwf	i2___ftge@ff1+1,c
 14152  002990  0E43               	movlw	67
 14153  002992  6E03               	movwf	i2___ftge@ff1+2,c
 14154  002994  C0AD  F004         	movff	keypressed@proxVolt_263,i2___ftge@ff2
 14155  002998  C0AE  F005         	movff	keypressed@proxVolt_263+1,i2___ftge@ff2+1
 14156  00299C  C0AF  F006         	movff	keypressed@proxVolt_263+2,i2___ftge@ff2+2
 14157  0029A0  EC7E  F029         	call	i2___ftge	;wreg free
 14158  0029A4  B0D8               	btfsc	status,0,c
 14159  0029A6  D007               	goto	i2l7056
 14160  0029A8                     i2l7054:
 14161                           
 14162                           ;main.c: 227: printf("eska cap");
 14163  0029A8  0EDD               	movlw	low STR_10
 14164  0029AA  6E40               	movwf	i2printf@f,c
 14165  0029AC  0EFF               	movlw	high STR_10
 14166  0029AE  6E41               	movwf	i2printf@f+1,c
 14167  0029B0  EC83  F00B         	call	i2_printf	;wreg free
 14168                           
 14169                           ;main.c: 228: } else {
 14170  0029B4  D034               	goto	i2l7066
 14171  0029B6                     i2l7056:
 14172                           
 14173                           ;main.c: 229: printf("eska no cap");
 14174  0029B6  0EAB               	movlw	low STR_11
 14175  0029B8  6E40               	movwf	i2printf@f,c
 14176  0029BA  0EFF               	movlw	high STR_11
 14177  0029BC  6E41               	movwf	i2printf@f+1,c
 14178  0029BE  EC83  F00B         	call	i2_printf	;wreg free
 14179                           
 14180                           ;main.c: 230: }
 14181                           ;main.c: 231: } else {
 14182  0029C2  D02D               	goto	i2l7066
 14183  0029C4                     i2l7058:
 14184                           
 14185                           ;main.c: 232: if (IRVolt > 100 && proxVolt >= 300) {
 14186  0029C4  0E00               	movlw	0
 14187  0029C6  6E01               	movwf	i2___ftge@ff1,c
 14188  0029C8  0EC8               	movlw	200
 14189  0029CA  6E02               	movwf	i2___ftge@ff1+1,c
 14190  0029CC  0E42               	movlw	66
 14191  0029CE  6E03               	movwf	i2___ftge@ff1+2,c
 14192  0029D0  C0AA  F004         	movff	keypressed@IRVolt,i2___ftge@ff2
 14193  0029D4  C0AB  F005         	movff	keypressed@IRVolt+1,i2___ftge@ff2+1
 14194  0029D8  C0AC  F006         	movff	keypressed@IRVolt+2,i2___ftge@ff2+2
 14195  0029DC  EC7E  F029         	call	i2___ftge	;wreg free
 14196  0029E0  B0D8               	btfsc	status,0,c
 14197  0029E2  D017               	goto	i2l7064
 14198  0029E4  C0AD  F001         	movff	keypressed@proxVolt_263,i2___ftge@ff1
 14199  0029E8  C0AE  F002         	movff	keypressed@proxVolt_263+1,i2___ftge@ff1+1
 14200  0029EC  C0AF  F003         	movff	keypressed@proxVolt_263+2,i2___ftge@ff1+2
 14201  0029F0  0E00               	movlw	0
 14202  0029F2  6E04               	movwf	i2___ftge@ff2,c
 14203  0029F4  0E96               	movlw	150
 14204  0029F6  6E05               	movwf	i2___ftge@ff2+1,c
 14205  0029F8  0E43               	movlw	67
 14206  0029FA  6E06               	movwf	i2___ftge@ff2+2,c
 14207  0029FC  EC7E  F029         	call	i2___ftge	;wreg free
 14208  002A00  A0D8               	btfss	status,0,c
 14209  002A02  D007               	goto	i2l7064
 14210                           
 14211                           ;main.c: 233: printf("yop cap");
 14212  002A04  0EE6               	movlw	low STR_12
 14213  002A06  6E40               	movwf	i2printf@f,c
 14214  002A08  0EFF               	movlw	high STR_12
 14215  002A0A  6E41               	movwf	i2printf@f+1,c
 14216  002A0C  EC83  F00B         	call	i2_printf	;wreg free
 14217                           
 14218                           ;main.c: 234: } else {
 14219  002A10  D006               	goto	i2l7066
 14220  002A12                     i2l7064:
 14221                           
 14222                           ;main.c: 235: printf("yop no cap");
 14223  002A12  0EB7               	movlw	low STR_13
 14224  002A14  6E40               	movwf	i2printf@f,c
 14225  002A16  0EFF               	movlw	high STR_13
 14226  002A18  6E41               	movwf	i2printf@f+1,c
 14227  002A1A  EC83  F00B         	call	i2_printf	;wreg free
 14228  002A1E                     i2l7066:
 14229                           
 14230                           ;main.c: 236: }
 14231                           ;main.c: 237: }
 14232                           ;main.c: 239: for(int i=0;i<300;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 14233  002A1E  0E00               	movlw	0
 14234  002A20  0100               	movlb	0	; () banked
 14235  002A22  6FA9               	movwf	(keypressed@i_275+1)& (0+255),b
 14236  002A24  0E00               	movlw	0
 14237  002A26  6FA8               	movwf	keypressed@i_275& (0+255),b
 14238  002A28                     i2l7068:
 14239                           
 14240                           ; BSR set to: 0
 14241  002A28  0100               	movlb	0	; () banked
 14242  002A2A  BFA9               	btfsc	(keypressed@i_275+1)& (0+255),7,b
 14243  002A2C  D008               	goto	i2l7072
 14244  002A2E  0E2C               	movlw	44
 14245  002A30  0100               	movlb	0	; () banked
 14246  002A32  5DA8               	subwf	keypressed@i_275& (0+255),w,b
 14247  002A34  0E01               	movlw	1
 14248  002A36  0100               	movlb	0	; () banked
 14249  002A38  59A9               	subwfb	(keypressed@i_275+1)& (0+255),w,b
 14250  002A3A  B0D8               	btfsc	status,0,c
 14251  002A3C  D02C               	goto	i2l7084
 14252  002A3E                     i2l7072:
 14253                           
 14254                           ; BSR set to: 0
 14255  002A3E  0E1A               	movlw	26
 14256  002A40  6E6C               	movwf	??_keypressed& (0+255),c
 14257  002A42  0EF8               	movlw	248
 14258  002A44                     i2u1152_47:
 14259  002A44  2EE8               	decfsz	wreg,f,c
 14260  002A46  D7FE               	bra	i2u1152_47
 14261  002A48  2E6C               	decfsz	??_keypressed& (0+255),f,c
 14262  002A4A  D7FC               	bra	i2u1152_47
 14263  002A4C  D000               	nop2	
 14264  002A4E  0100               	movlb	0	; () banked
 14265  002A50  4BA8               	infsnz	keypressed@i_275& (0+255),f,b
 14266  002A52  2BA9               	incf	(keypressed@i_275+1)& (0+255),f,b
 14267  002A54  D7E9               	goto	i2l7068
 14268  002A56                     i2l7076:
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;main.c: 242: else if (keys[keypress] == '*'){
 14272  002A56  0100               	movlb	0	; () banked
 14273  002A58  51B6               	movf	keypressed@keypress& (0+255),w,b
 14274  002A5A  0D01               	mullw	1
 14275  002A5C  0E13               	movlw	low _keys
 14276  002A5E  24F3               	addwf	prodl,w,c
 14277  002A60  6EF6               	movwf	tblptrl,c
 14278  002A62  0EFF               	movlw	high _keys
 14279  002A64  20F4               	addwfc	prodh,w,c
 14280  002A66  6EF7               	movwf	tblptrh,c
 14281  002A68                     	if	0	;There are less than 3 active tblptr bytes
 14282  002A68                     	endif
 14283  002A68  0008               	tblrd		*
 14284  002A6A  50F5               	movf	tablat,w,c
 14285  002A6C  0A2A               	xorlw	42
 14286  002A6E  A4D8               	btfss	status,2,c
 14287  002A70  D003               	goto	i2l7080
 14288                           
 14289                           ; BSR set to: 0
 14290                           ;main.c: 243: rotate180 ();
 14291  002A72  EC9C  F02D         	call	i2_rotate180	;wreg free
 14292                           
 14293                           ;main.c: 244: }
 14294  002A76  D00F               	goto	i2l7084
 14295  002A78                     i2l7080:
 14296                           
 14297                           ;main.c: 245: else if (keys[keypress] == '#'){
 14298  002A78  0100               	movlb	0	; () banked
 14299  002A7A  51B6               	movf	keypressed@keypress& (0+255),w,b
 14300  002A7C  0D01               	mullw	1
 14301  002A7E  0E13               	movlw	low _keys
 14302  002A80  24F3               	addwf	prodl,w,c
 14303  002A82  6EF6               	movwf	tblptrl,c
 14304  002A84  0EFF               	movlw	high _keys
 14305  002A86  20F4               	addwfc	prodh,w,c
 14306  002A88  6EF7               	movwf	tblptrh,c
 14307  002A8A                     	if	0	;There are less than 3 active tblptr bytes
 14308  002A8A                     	endif
 14309  002A8A  0008               	tblrd		*
 14310  002A8C  50F5               	movf	tablat,w,c
 14311  002A8E  0A23               	xorlw	35
 14312  002A90  B4D8               	btfsc	status,2,c
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;main.c: 246: rotate270();
 14316  002A92  ECFD  F02C         	call	i2_rotate270	;wreg free
 14317  002A96                     i2l7084:
 14318                           
 14319                           ;main.c: 247: }
 14320                           ;main.c: 252: INT1IF = 0;
 14321  002A96  90F0               	bcf	intcon3,0,c	;volatile
 14322                           
 14323                           ;main.c: 253: } else if (TMR0IF) {
 14324  002A98  D028               	goto	i2l174
 14325  002A9A                     i2l107:
 14326  002A9A  A4F2               	btfss	intcon,2,c	;volatile
 14327  002A9C  D026               	goto	i2l174
 14328                           
 14329                           ;main.c: 255: TMR0IF = 0;
 14330  002A9E  94F2               	bcf	intcon,2,c	;volatile
 14331                           
 14332                           ;main.c: 256: timeElapsed ++;
 14333  002AA0  0100               	movlb	0	; () banked
 14334  002AA2  4BC7               	infsnz	_timeElapsed& (0+255),f,b
 14335  002AA4  2BC8               	incf	(_timeElapsed+1)& (0+255),f,b
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;main.c: 257: TMR0ON = 0;
 14339  002AA6  9ED5               	bcf	4053,7,c	;volatile
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;main.c: 258: lcdInst(0b10000000);
 14343  002AA8  0E80               	movlw	128
 14344  002AAA  EC01  F02F         	call	i2_lcdInst
 14345                           
 14346                           ;main.c: 259: printf("Time: %d", timeElapsed);
 14347  002AAE  0ECB               	movlw	low STR_14
 14348  002AB0  6E40               	movwf	i2printf@f,c
 14349  002AB2  0EFF               	movlw	high STR_14
 14350  002AB4  6E41               	movwf	i2printf@f+1,c
 14351  002AB6  C0C7  F042         	movff	_timeElapsed,?i2_printf+2
 14352  002ABA  C0C8  F043         	movff	_timeElapsed+1,?i2_printf+3
 14353  002ABE  EC83  F00B         	call	i2_printf	;wreg free
 14354                           
 14355                           ;main.c: 261: if (timeElapsed < 180){
 14356  002AC2  0100               	movlb	0	; () banked
 14357  002AC4  BFC8               	btfsc	(_timeElapsed+1)& (0+255),7,b
 14358  002AC6  D008               	goto	i2l7098
 14359  002AC8  0100               	movlb	0	; () banked
 14360  002ACA  51C8               	movf	(_timeElapsed+1)& (0+255),w,b
 14361  002ACC  E10E               	bnz	i2l174
 14362  002ACE  0EB4               	movlw	180
 14363  002AD0  0100               	movlb	0	; () banked
 14364  002AD2  5DC7               	subwf	_timeElapsed& (0+255),w,b
 14365  002AD4  B0D8               	btfsc	status,0,c
 14366  002AD6  D009               	goto	i2l174
 14367  002AD8                     i2l7098:
 14368                           
 14369                           ; BSR set to: 0
 14370                           ;main.c: 262: T0CON = 0b00010111;
 14371  002AD8  0E17               	movlw	23
 14372  002ADA  6ED5               	movwf	4053,c	;volatile
 14373                           
 14374                           ;main.c: 263: TMR0H = 0b11011010;
 14375  002ADC  0EDA               	movlw	218
 14376  002ADE  6ED7               	movwf	4055,c	;volatile
 14377                           
 14378                           ;main.c: 264: TMR0L = 0b00010000;
 14379  002AE0  0E10               	movlw	16
 14380  002AE2  6ED6               	movwf	4054,c	;volatile
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;main.c: 265: T0CON = T0CON | 0b10000000;
 14384  002AE4  50D5               	movf	4053,w,c	;volatile
 14385  002AE6  0980               	iorlw	128
 14386  002AE8  6ED5               	movwf	4053,c	;volatile
 14387  002AEA                     i2l174:
 14388  002AEA  C07A  FFF5         	movff	??_keypressed+14,tablat
 14389  002AEE  C079  FFF8         	movff	??_keypressed+13,tblptru
 14390  002AF2  C078  FFF7         	movff	??_keypressed+12,tblptrh
 14391  002AF6  C077  FFF6         	movff	??_keypressed+11,tblptrl
 14392  002AFA  C076  FFF4         	movff	??_keypressed+10,prodh
 14393  002AFE  C075  FFF3         	movff	??_keypressed+9,prodl
 14394  002B02  C074  FFDA         	movff	??_keypressed+8,fsr2h
 14395  002B06  C073  FFD9         	movff	??_keypressed+7,fsr2l
 14396  002B0A  C072  FFE2         	movff	??_keypressed+6,fsr1h
 14397  002B0E  C071  FFE1         	movff	??_keypressed+5,fsr1l
 14398  002B12  C070  FFEA         	movff	??_keypressed+4,fsr0h
 14399  002B16  C06F  FFE9         	movff	??_keypressed+3,fsr0l
 14400  002B1A  C06E  FFFB         	movff	??_keypressed+2,pclatu
 14401  002B1E  C06D  FFFA         	movff	??_keypressed+1,pclath
 14402  002B22  927D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14403  002B24  0011               	retfie		f
 14404  002B26                     __end_of_keypressed:
 14405                           	opt stack 0
 14406                           pclatu	equ	0xFFB
 14407                           pclath	equ	0xFFA
 14408                           tblptru	equ	0xFF8
 14409                           tblptrh	equ	0xFF7
 14410                           tblptrl	equ	0xFF6
 14411                           tablat	equ	0xFF5
 14412                           prodh	equ	0xFF4
 14413                           prodl	equ	0xFF3
 14414                           intcon	equ	0xFF2
 14415                           intcon3	equ	0xFF0
 14416                           postinc0	equ	0xFEE
 14417                           fsr0h	equ	0xFEA
 14418                           fsr0l	equ	0xFE9
 14419                           wreg	equ	0xFE8
 14420                           fsr1h	equ	0xFE2
 14421                           fsr1l	equ	0xFE1
 14422                           indf2	equ	0xFDF
 14423                           postinc2	equ	0xFDE
 14424                           postdec2	equ	0xFDD
 14425                           fsr2h	equ	0xFDA
 14426                           fsr2l	equ	0xFD9
 14427                           status	equ	0xFD8
 14428                           
 14429 ;; *************** function i2_ultrasonicFindBottle *****************
 14430 ;; Defined at:
 14431 ;;		line 36 in file "start.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;		None
 14434 ;; Auto vars:     Size  Location     Type
 14435 ;;  ultrasonicFi    2   56[COMRAM] int 
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  2   50[COMRAM] int 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0, cstack
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14448 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14449 ;;Total ram usage:        8 bytes
 14450 ;; Hardware stack levels used:    1
 14451 ;; Hardware stack levels required when called:    2
 14452 ;; This function calls:
 14453 ;;		i2___awtoft
 14454 ;;		i2___ftdiv
 14455 ;;		i2___fttol
 14456 ;; This function is called by:
 14457 ;;		_keypressed
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text47
 14462  00497E                     __ptext47:
 14463                           	opt stack 0
 14464  00497E                     i2_ultrasonicFindBottle:
 14465                           	opt stack 21
 14466                           
 14467                           ;start.c: 37: int a;
 14468                           ;start.c: 38: LATEbits.LATE0 = 1;
 14469                           
 14470                           ;incstack = 0
 14471  00497E  808D               	bsf	3981,0,c	;volatile
 14472                           
 14473                           ;start.c: 39: _delay((unsigned long)((10)*(8000000/4000000.0)));
 14474  004980  0E06               	movlw	6
 14475  004982                     i2u1153_47:
 14476  004982  2EE8               	decfsz	wreg,f,c
 14477  004984  D7FE               	bra	i2u1153_47
 14478  004986  D000               	nop2	
 14479                           
 14480                           ;start.c: 40: LATEbits.LATE0 = 0;
 14481  004988  908D               	bcf	3981,0,c	;volatile
 14482                           
 14483                           ;start.c: 42: TMR1H = 0;
 14484  00498A  0E00               	movlw	0
 14485  00498C  6ECF               	movwf	4047,c	;volatile
 14486                           
 14487                           ;start.c: 43: TMR1L = 0;
 14488  00498E  0E00               	movlw	0
 14489  004990  6ECE               	movwf	4046,c	;volatile
 14490                           
 14491                           ;start.c: 45: TMR1ON = 1;
 14492  004992  80CD               	bsf	4045,0,c	;volatile
 14493                           
 14494                           ;start.c: 46: while (!PORTEbits.RE1)
 14495  004994  D019               	goto	i2l256
 14496  004996                     i2l6400:
 14497                           
 14498                           ;start.c: 47: {
 14499                           ;start.c: 48: a = (TMR1L | (TMR1H << 8));
 14500  004996  50CF               	movf	4047,w,c	;volatile
 14501  004998  6E36               	movwf	(??i2_ultrasonicFindBottle+1)& (0+255),c
 14502  00499A  6A35               	clrf	??i2_ultrasonicFindBottle& (0+255),c
 14503  00499C  50CE               	movf	4046,w,c	;volatile
 14504  00499E  6E37               	movwf	(??i2_ultrasonicFindBottle+2)& (0+255),c
 14505  0049A0  6A38               	clrf	(??i2_ultrasonicFindBottle+3)& (0+255),c
 14506  0049A2  5035               	movf	??i2_ultrasonicFindBottle,w,c
 14507  0049A4  1037               	iorwf	??i2_ultrasonicFindBottle+2,w,c
 14508  0049A6  6E39               	movwf	i2ultrasonicFindBottle@a,c
 14509  0049A8  5036               	movf	??i2_ultrasonicFindBottle+1,w,c
 14510  0049AA  1038               	iorwf	??i2_ultrasonicFindBottle+3,w,c
 14511  0049AC  6E3A               	movwf	i2ultrasonicFindBottle@a+1,c
 14512                           
 14513                           ;start.c: 49: if (a > 50) return 0;
 14514  0049AE  BE3A               	btfsc	i2ultrasonicFindBottle@a+1,7,c
 14515  0049B0  D00B               	goto	i2l256
 14516  0049B2  503A               	movf	i2ultrasonicFindBottle@a+1,w,c
 14517  0049B4  E104               	bnz	i2u796_40
 14518  0049B6  0E33               	movlw	51
 14519  0049B8  5C39               	subwf	i2ultrasonicFindBottle@a,w,c
 14520  0049BA  A0D8               	btfss	status,0,c
 14521  0049BC  D005               	goto	i2l256
 14522  0049BE                     i2u796_40:
 14523  0049BE  0E00               	movlw	0
 14524  0049C0  6E34               	movwf	?i2_ultrasonicFindBottle+1,c
 14525  0049C2  0E00               	movlw	0
 14526  0049C4  6E33               	movwf	?i2_ultrasonicFindBottle,c
 14527  0049C6  0012               	return	
 14528  0049C8                     i2l256:
 14529  0049C8  A284               	btfss	3972,1,c	;volatile
 14530  0049CA  D7E5               	goto	i2l6400
 14531                           
 14532                           ;start.c: 50: }
 14533                           ;start.c: 51: TMR1ON = 0;
 14534  0049CC  90CD               	bcf	4045,0,c	;volatile
 14535                           
 14536                           ;start.c: 53: TMR1H = 0;
 14537  0049CE  0E00               	movlw	0
 14538  0049D0  6ECF               	movwf	4047,c	;volatile
 14539                           
 14540                           ;start.c: 54: TMR1L = 0;
 14541  0049D2  0E00               	movlw	0
 14542  0049D4  6ECE               	movwf	4046,c	;volatile
 14543                           
 14544                           ;start.c: 56: TMR1ON = 1;
 14545  0049D6  80CD               	bsf	4045,0,c	;volatile
 14546  0049D8                     i2l261:
 14547  0049D8  B284               	btfsc	3972,1,c	;volatile
 14548  0049DA  D7FE               	goto	i2l261
 14549                           
 14550                           ;start.c: 58: TMR1ON = 0;
 14551  0049DC  90CD               	bcf	4045,0,c	;volatile
 14552                           
 14553                           ;start.c: 60: a = (TMR1L | (TMR1H << 8));
 14554  0049DE  50CF               	movf	4047,w,c	;volatile
 14555  0049E0  6E36               	movwf	(??i2_ultrasonicFindBottle+1)& (0+255),c
 14556  0049E2  6A35               	clrf	??i2_ultrasonicFindBottle& (0+255),c
 14557  0049E4  50CE               	movf	4046,w,c	;volatile
 14558  0049E6  6E37               	movwf	(??i2_ultrasonicFindBottle+2)& (0+255),c
 14559  0049E8  6A38               	clrf	(??i2_ultrasonicFindBottle+3)& (0+255),c
 14560  0049EA  5035               	movf	??i2_ultrasonicFindBottle,w,c
 14561  0049EC  1037               	iorwf	??i2_ultrasonicFindBottle+2,w,c
 14562  0049EE  6E39               	movwf	i2ultrasonicFindBottle@a,c
 14563  0049F0  5036               	movf	??i2_ultrasonicFindBottle+1,w,c
 14564  0049F2  1038               	iorwf	??i2_ultrasonicFindBottle+3,w,c
 14565  0049F4  6E3A               	movwf	i2ultrasonicFindBottle@a+1,c
 14566                           
 14567                           ;start.c: 61: a = (int) a / 58.82;
 14568  0049F6  0E48               	movlw	72
 14569  0049F8  6E16               	movwf	i2___ftdiv@f2,c
 14570  0049FA  0E6B               	movlw	107
 14571  0049FC  6E17               	movwf	i2___ftdiv@f2+1,c
 14572  0049FE  0E42               	movlw	66
 14573  004A00  6E18               	movwf	i2___ftdiv@f2+2,c
 14574  004A02  C039  F00F         	movff	i2ultrasonicFindBottle@a,i2___awtoft@c
 14575  004A06  C03A  F010         	movff	i2ultrasonicFindBottle@a+1,i2___awtoft@c+1
 14576  004A0A  ECBB  F02D         	call	i2___awtoft	;wreg free
 14577  004A0E  C00F  F013         	movff	?i2___awtoft,i2___ftdiv@f1
 14578  004A12  C010  F014         	movff	?i2___awtoft+1,i2___ftdiv@f1+1
 14579  004A16  C011  F015         	movff	?i2___awtoft+2,i2___ftdiv@f1+2
 14580  004A1A  EC2F  F026         	call	i2___ftdiv	;wreg free
 14581  004A1E  C013  F024         	movff	?i2___ftdiv,i2___fttol@f1
 14582  004A22  C014  F025         	movff	?i2___ftdiv+1,i2___fttol@f1+1
 14583  004A26  C015  F026         	movff	?i2___ftdiv+2,i2___fttol@f1+2
 14584  004A2A  ECB5  F025         	call	i2___fttol	;wreg free
 14585  004A2E  C024  F039         	movff	?i2___fttol,i2ultrasonicFindBottle@a
 14586  004A32  C025  F03A         	movff	?i2___fttol+1,i2ultrasonicFindBottle@a+1
 14587                           
 14588                           ;start.c: 62: a = a + 1;
 14589  004A36  0E01               	movlw	1
 14590  004A38  2439               	addwf	i2ultrasonicFindBottle@a,w,c
 14591  004A3A  6E39               	movwf	i2ultrasonicFindBottle@a,c
 14592  004A3C  0E00               	movlw	0
 14593  004A3E  203A               	addwfc	i2ultrasonicFindBottle@a+1,w,c
 14594  004A40  6E3A               	movwf	i2ultrasonicFindBottle@a+1,c
 14595                           
 14596                           ;start.c: 64: if (a > 1 & a <= 5) {
 14597  004A42  BE3A               	btfsc	i2ultrasonicFindBottle@a+1,7,c
 14598  004A44  D013               	goto	i2l6422
 14599  004A46  503A               	movf	i2ultrasonicFindBottle@a+1,w,c
 14600  004A48  E104               	bnz	i2u799_40
 14601  004A4A  0E02               	movlw	2
 14602  004A4C  5C39               	subwf	i2ultrasonicFindBottle@a,w,c
 14603  004A4E  A0D8               	btfss	status,0,c
 14604  004A50  D00D               	goto	i2l6422
 14605  004A52                     i2u799_40:
 14606  004A52  BE3A               	btfsc	i2ultrasonicFindBottle@a+1,7,c
 14607  004A54  D006               	goto	i2l6420
 14608  004A56  503A               	movf	i2ultrasonicFindBottle@a+1,w,c
 14609  004A58  E109               	bnz	i2l6422
 14610  004A5A  0E06               	movlw	6
 14611  004A5C  5C39               	subwf	i2ultrasonicFindBottle@a,w,c
 14612  004A5E  B0D8               	btfsc	status,0,c
 14613  004A60  D005               	goto	i2l6422
 14614  004A62                     i2l6420:
 14615                           
 14616                           ;start.c: 65: return a;
 14617  004A62  C039  F033         	movff	i2ultrasonicFindBottle@a,?i2_ultrasonicFindBottle
 14618  004A66  C03A  F034         	movff	i2ultrasonicFindBottle@a+1,?i2_ultrasonicFindBottle+1
 14619  004A6A  0012               	return	
 14620  004A6C                     i2l6422:
 14621                           
 14622                           ;start.c: 66: }
 14623                           ;start.c: 67: return 0;
 14624  004A6C  0E00               	movlw	0
 14625  004A6E  6E34               	movwf	?i2_ultrasonicFindBottle+1,c
 14626  004A70  0E00               	movlw	0
 14627  004A72  6E33               	movwf	?i2_ultrasonicFindBottle,c
 14628  004A74  0012               	return	
 14629  004A76                     __end_ofi2_ultrasonicFindBottle:
 14630                           	opt stack 0
 14631                           pclatu	equ	0xFFB
 14632                           pclath	equ	0xFFA
 14633                           tblptru	equ	0xFF8
 14634                           tblptrh	equ	0xFF7
 14635                           tblptrl	equ	0xFF6
 14636                           tablat	equ	0xFF5
 14637                           prodh	equ	0xFF4
 14638                           prodl	equ	0xFF3
 14639                           intcon	equ	0xFF2
 14640                           intcon3	equ	0xFF0
 14641                           postinc0	equ	0xFEE
 14642                           fsr0h	equ	0xFEA
 14643                           fsr0l	equ	0xFE9
 14644                           wreg	equ	0xFE8
 14645                           fsr1h	equ	0xFE2
 14646                           fsr1l	equ	0xFE1
 14647                           indf2	equ	0xFDF
 14648                           postinc2	equ	0xFDE
 14649                           postdec2	equ	0xFDD
 14650                           fsr2h	equ	0xFDA
 14651                           fsr2l	equ	0xFD9
 14652                           status	equ	0xFD8
 14653                           
 14654 ;; *************** function i2___ftdiv *****************
 14655 ;; Defined at:
 14656 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
 14657 ;; Parameters:    Size  Location     Type
 14658 ;;  f1              3   18[COMRAM] float 
 14659 ;;  f2              3   21[COMRAM] float 
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  __ftdiv         3   28[COMRAM] float 
 14662 ;;  __ftdiv         1   32[COMRAM] unsigned char 
 14663 ;;  __ftdiv         1   31[COMRAM] unsigned char 
 14664 ;;  __ftdiv         1   27[COMRAM] unsigned char 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  3   18[COMRAM] float 
 14667 ;; Registers used:
 14668 ;;		wreg, status,2, status,0, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14674 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;Total ram usage:       15 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:    1
 14681 ;; This function calls:
 14682 ;;		i2___ftpack
 14683 ;; This function is called by:
 14684 ;;		_keypressed
 14685 ;;		i2_ultrasonicFindBottle
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text48
 14690  004C5E                     __ptext48:
 14691                           	opt stack 0
 14692  004C5E                     i2___ftdiv:
 14693                           	opt stack 21
 14694                           
 14695                           ;incstack = 0
 14696  004C5E  C015  F019         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 14697  004C62  6A1A               	clrf	(??i2___ftdiv+1)& (0+255),c
 14698  004C64  6A1B               	clrf	(??i2___ftdiv+2)& (0+255),c
 14699  004C66  3414               	rlcf	i2___ftdiv@f1+1,w,c
 14700  004C68  3619               	rlcf	??i2___ftdiv& (0+255),f,c
 14701  004C6A  E301               	bnc	u705_41
 14702  004C6C  801A               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 14703  004C6E                     u705_41:
 14704  004C6E  5019               	movf	??i2___ftdiv,w,c
 14705  004C70  6E20               	movwf	i2___ftdiv@exp,c
 14706  004C72  5020               	movf	i2___ftdiv@exp,w,c
 14707  004C74  A4D8               	btfss	status,2,c
 14708  004C76  D007               	goto	i2l5814
 14709  004C78  0E00               	movlw	0
 14710  004C7A  6E13               	movwf	?i2___ftdiv,c
 14711  004C7C  0E00               	movlw	0
 14712  004C7E  6E14               	movwf	?i2___ftdiv+1,c
 14713  004C80  0E00               	movlw	0
 14714  004C82  6E15               	movwf	?i2___ftdiv+2,c
 14715  004C84  0012               	return	
 14716  004C86                     i2l5814:
 14717  004C86  C018  F019         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 14718  004C8A  6A1A               	clrf	(??i2___ftdiv+1)& (0+255),c
 14719  004C8C  6A1B               	clrf	(??i2___ftdiv+2)& (0+255),c
 14720  004C8E  3417               	rlcf	i2___ftdiv@f2+1,w,c
 14721  004C90  3619               	rlcf	??i2___ftdiv& (0+255),f,c
 14722  004C92  E301               	bnc	u707_41
 14723  004C94  801A               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 14724  004C96                     u707_41:
 14725  004C96  5019               	movf	??i2___ftdiv,w,c
 14726  004C98  6E21               	movwf	i2___ftdiv@sign,c
 14727  004C9A  5021               	movf	i2___ftdiv@sign,w,c
 14728  004C9C  A4D8               	btfss	status,2,c
 14729  004C9E  D007               	goto	i2l5820
 14730  004CA0  0E00               	movlw	0
 14731  004CA2  6E13               	movwf	?i2___ftdiv,c
 14732  004CA4  0E00               	movlw	0
 14733  004CA6  6E14               	movwf	?i2___ftdiv+1,c
 14734  004CA8  0E00               	movlw	0
 14735  004CAA  6E15               	movwf	?i2___ftdiv+2,c
 14736  004CAC  0012               	return	
 14737  004CAE                     i2l5820:
 14738  004CAE  0E00               	movlw	0
 14739  004CB0  6E1D               	movwf	i2___ftdiv@f3,c
 14740  004CB2  0E00               	movlw	0
 14741  004CB4  6E1E               	movwf	i2___ftdiv@f3+1,c
 14742  004CB6  0E00               	movlw	0
 14743  004CB8  6E1F               	movwf	i2___ftdiv@f3+2,c
 14744  004CBA  5021               	movf	i2___ftdiv@sign,w,c
 14745  004CBC  0F89               	addlw	137
 14746  004CBE  5E20               	subwf	i2___ftdiv@exp,f,c
 14747  004CC0  C015  F021         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 14748  004CC4  5018               	movf	i2___ftdiv@f2+2,w,c
 14749  004CC6  1A21               	xorwf	i2___ftdiv@sign,f,c
 14750  004CC8  0E80               	movlw	128
 14751  004CCA  1621               	andwf	i2___ftdiv@sign,f,c
 14752  004CCC  8E14               	bsf	i2___ftdiv@f1+1,7,c
 14753  004CCE  0EFF               	movlw	255
 14754  004CD0  1613               	andwf	i2___ftdiv@f1,f,c
 14755  004CD2  0EFF               	movlw	255
 14756  004CD4  1614               	andwf	i2___ftdiv@f1+1,f,c
 14757  004CD6  0E00               	movlw	0
 14758  004CD8  1615               	andwf	i2___ftdiv@f1+2,f,c
 14759  004CDA  8E17               	bsf	i2___ftdiv@f2+1,7,c
 14760  004CDC  0EFF               	movlw	255
 14761  004CDE  1616               	andwf	i2___ftdiv@f2,f,c
 14762  004CE0  0EFF               	movlw	255
 14763  004CE2  1617               	andwf	i2___ftdiv@f2+1,f,c
 14764  004CE4  0E00               	movlw	0
 14765  004CE6  1618               	andwf	i2___ftdiv@f2+2,f,c
 14766  004CE8  0E18               	movlw	24
 14767  004CEA  6E1C               	movwf	i2___ftdiv@cntr,c
 14768  004CEC                     i2l5840:
 14769  004CEC  90D8               	bcf	status,0,c
 14770  004CEE  361D               	rlcf	i2___ftdiv@f3,f,c
 14771  004CF0  361E               	rlcf	i2___ftdiv@f3+1,f,c
 14772  004CF2  361F               	rlcf	i2___ftdiv@f3+2,f,c
 14773  004CF4  5016               	movf	i2___ftdiv@f2,w,c
 14774  004CF6  5C13               	subwf	i2___ftdiv@f1,w,c
 14775  004CF8  5017               	movf	i2___ftdiv@f2+1,w,c
 14776  004CFA  5814               	subwfb	i2___ftdiv@f1+1,w,c
 14777  004CFC  5018               	movf	i2___ftdiv@f2+2,w,c
 14778  004CFE  5815               	subwfb	i2___ftdiv@f1+2,w,c
 14779  004D00  A0D8               	btfss	status,0,c
 14780  004D02  D007               	goto	i2l977
 14781  004D04  5016               	movf	i2___ftdiv@f2,w,c
 14782  004D06  5E13               	subwf	i2___ftdiv@f1,f,c
 14783  004D08  5017               	movf	i2___ftdiv@f2+1,w,c
 14784  004D0A  5A14               	subwfb	i2___ftdiv@f1+1,f,c
 14785  004D0C  5018               	movf	i2___ftdiv@f2+2,w,c
 14786  004D0E  5A15               	subwfb	i2___ftdiv@f1+2,f,c
 14787  004D10  801D               	bsf	i2___ftdiv@f3,0,c
 14788  004D12                     i2l977:
 14789  004D12  90D8               	bcf	status,0,c
 14790  004D14  3613               	rlcf	i2___ftdiv@f1,f,c
 14791  004D16  3614               	rlcf	i2___ftdiv@f1+1,f,c
 14792  004D18  3615               	rlcf	i2___ftdiv@f1+2,f,c
 14793  004D1A  2E1C               	decfsz	i2___ftdiv@cntr,f,c
 14794  004D1C  D7E7               	goto	i2l5840
 14795  004D1E  C01D  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 14796  004D22  C01E  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 14797  004D26  C01F  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 14798  004D2A  C020  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 14799  004D2E  C021  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 14800  004D32  EC89  F028         	call	i2___ftpack	;wreg free
 14801  004D36  C001  F013         	movff	?i2___ftpack,?i2___ftdiv
 14802  004D3A  C002  F014         	movff	?i2___ftpack+1,?i2___ftdiv+1
 14803  004D3E  C003  F015         	movff	?i2___ftpack+2,?i2___ftdiv+2
 14804  004D42  0012               	return	
 14805  004D44                     __end_ofi2___ftdiv:
 14806                           	opt stack 0
 14807                           pclatu	equ	0xFFB
 14808                           pclath	equ	0xFFA
 14809                           tblptru	equ	0xFF8
 14810                           tblptrh	equ	0xFF7
 14811                           tblptrl	equ	0xFF6
 14812                           tablat	equ	0xFF5
 14813                           prodh	equ	0xFF4
 14814                           prodl	equ	0xFF3
 14815                           intcon	equ	0xFF2
 14816                           intcon3	equ	0xFF0
 14817                           postinc0	equ	0xFEE
 14818                           fsr0h	equ	0xFEA
 14819                           fsr0l	equ	0xFE9
 14820                           wreg	equ	0xFE8
 14821                           fsr1h	equ	0xFE2
 14822                           fsr1l	equ	0xFE1
 14823                           indf2	equ	0xFDF
 14824                           postinc2	equ	0xFDE
 14825                           postdec2	equ	0xFDD
 14826                           fsr2h	equ	0xFDA
 14827                           fsr2l	equ	0xFD9
 14828                           status	equ	0xFD8
 14829                           
 14830 ;; *************** function i2___awtoft *****************
 14831 ;; Defined at:
 14832 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;  c               2   14[COMRAM] int 
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  __awtoft        1   17[COMRAM] unsigned char 
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  3   14[COMRAM] float 
 14839 ;; Registers used:
 14840 ;;		wreg, status,2, status,0, cstack
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14846 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14850 ;;Total ram usage:        4 bytes
 14851 ;; Hardware stack levels used:    1
 14852 ;; Hardware stack levels required when called:    1
 14853 ;; This function calls:
 14854 ;;		i2___ftpack
 14855 ;; This function is called by:
 14856 ;;		_keypressed
 14857 ;;		i2_ultrasonicFindBottle
 14858 ;; This function uses a non-reentrant model
 14859 ;;
 14860                           
 14861                           	psect	text49
 14862  005B76                     __ptext49:
 14863                           	opt stack 0
 14864  005B76                     i2___awtoft:
 14865                           	opt stack 21
 14866                           
 14867                           ;incstack = 0
 14868  005B76  0E00               	movlw	0
 14869  005B78  6E12               	movwf	i2___awtoft@sign,c
 14870  005B7A  AE10               	btfss	i2___awtoft@c+1,7,c
 14871  005B7C  D006               	goto	i2l5744
 14872  005B7E  6C0F               	negf	i2___awtoft@c,c
 14873  005B80  1E10               	comf	i2___awtoft@c+1,f,c
 14874  005B82  B0D8               	btfsc	status,0,c
 14875  005B84  2A10               	incf	i2___awtoft@c+1,f,c
 14876  005B86  0E01               	movlw	1
 14877  005B88  6E12               	movwf	i2___awtoft@sign,c
 14878  005B8A                     i2l5744:
 14879  005B8A  C00F  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 14880  005B8E  C010  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 14881  005B92  6A03               	clrf	i2___ftpack@arg+2,c
 14882  005B94  0E8E               	movlw	142
 14883  005B96  6E04               	movwf	i2___ftpack@exp,c
 14884  005B98  C012  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 14885  005B9C  EC89  F028         	call	i2___ftpack	;wreg free
 14886  005BA0  C001  F00F         	movff	?i2___ftpack,?i2___awtoft
 14887  005BA4  C002  F010         	movff	?i2___ftpack+1,?i2___awtoft+1
 14888  005BA8  C003  F011         	movff	?i2___ftpack+2,?i2___awtoft+2
 14889  005BAC  0012               	return	
 14890  005BAE                     __end_ofi2___awtoft:
 14891                           	opt stack 0
 14892                           pclatu	equ	0xFFB
 14893                           pclath	equ	0xFFA
 14894                           tblptru	equ	0xFF8
 14895                           tblptrh	equ	0xFF7
 14896                           tblptrl	equ	0xFF6
 14897                           tablat	equ	0xFF5
 14898                           prodh	equ	0xFF4
 14899                           prodl	equ	0xFF3
 14900                           intcon	equ	0xFF2
 14901                           intcon3	equ	0xFF0
 14902                           postinc0	equ	0xFEE
 14903                           fsr0h	equ	0xFEA
 14904                           fsr0l	equ	0xFE9
 14905                           wreg	equ	0xFE8
 14906                           fsr1h	equ	0xFE2
 14907                           fsr1l	equ	0xFE1
 14908                           indf2	equ	0xFDF
 14909                           postinc2	equ	0xFDE
 14910                           postdec2	equ	0xFDD
 14911                           fsr2h	equ	0xFDA
 14912                           fsr2l	equ	0xFD9
 14913                           status	equ	0xFD8
 14914                           
 14915 ;; *************** function i2_rotate90 *****************
 14916 ;; Defined at:
 14917 ;;		line 74 in file "start.c"
 14918 ;; Parameters:    Size  Location     Type
 14919 ;;		None
 14920 ;; Auto vars:     Size  Location     Type
 14921 ;;  rotate90        2    1[COMRAM] unsigned int 
 14922 ;; Return value:  Size  Location     Type
 14923 ;;                  1    wreg      void 
 14924 ;; Registers used:
 14925 ;;		wreg, status,2, status,0
 14926 ;; Tracked objects:
 14927 ;;		On entry : 0/0
 14928 ;;		On exit  : 0/0
 14929 ;;		Unchanged: 0/0
 14930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14932 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14934 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;Total ram usage:        3 bytes
 14936 ;; Hardware stack levels used:    1
 14937 ;; This function calls:
 14938 ;;		Nothing
 14939 ;; This function is called by:
 14940 ;;		_keypressed
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text50
 14945  005AFA                     __ptext50:
 14946                           	opt stack 0
 14947  005AFA                     i2_rotate90:
 14948                           	opt stack 23
 14949                           
 14950                           ;start.c: 75: unsigned int i;
 14951                           ;start.c: 76: for (i = 0; i < 50; i++) {
 14952                           
 14953                           ;incstack = 0
 14954  005AFA  0E00               	movlw	0
 14955  005AFC  6E03               	movwf	i2rotate90@i+1,c
 14956  005AFE  0E00               	movlw	0
 14957  005B00  6E02               	movwf	i2rotate90@i,c
 14958  005B02                     i2l6428:
 14959  005B02  5003               	movf	i2rotate90@i+1,w,c
 14960  005B04  E118               	bnz	i2l269
 14961  005B06  0E32               	movlw	50
 14962  005B08  5C02               	subwf	i2rotate90@i,w,c
 14963  005B0A  B0D8               	btfsc	status,0,c
 14964  005B0C  0012               	return	
 14965                           
 14966                           ;start.c: 77: LATCbits.LATC6 = 1;
 14967  005B0E  8C8B               	bsf	3979,6,c	;volatile
 14968                           
 14969                           ;start.c: 78: _delay((unsigned long)((2000)*(8000000/4000000.0)));
 14970  005B10  0E06               	movlw	6
 14971  005B12  6E01               	movwf	??i2_rotate90& (0+255),c
 14972  005B14  0E30               	movlw	48
 14973  005B16                     i2u1154_47:
 14974  005B16  2EE8               	decfsz	wreg,f,c
 14975  005B18  D7FE               	bra	i2u1154_47
 14976  005B1A  2E01               	decfsz	??i2_rotate90& (0+255),f,c
 14977  005B1C  D7FC               	bra	i2u1154_47
 14978  005B1E  D000               	nop2	
 14979                           
 14980                           ;start.c: 79: LATCbits.LATC6 = 0;
 14981  005B20  9C8B               	bcf	3979,6,c	;volatile
 14982                           
 14983                           ;start.c: 80: _delay((unsigned long)((18000)*(8000000/4000000.0)));
 14984  005B22  0E2F               	movlw	47
 14985  005B24  6E01               	movwf	??i2_rotate90& (0+255),c
 14986  005B26  0EC0               	movlw	192
 14987  005B28                     i2u1155_47:
 14988  005B28  2EE8               	decfsz	wreg,f,c
 14989  005B2A  D7FE               	bra	i2u1155_47
 14990  005B2C  2E01               	decfsz	??i2_rotate90& (0+255),f,c
 14991  005B2E  D7FC               	bra	i2u1155_47
 14992  005B30  4A02               	infsnz	i2rotate90@i,f,c
 14993  005B32  2A03               	incf	i2rotate90@i+1,f,c
 14994  005B34  D7E6               	goto	i2l6428
 14995  005B36                     i2l269:
 14996  005B36  0012               	return		;funcret
 14997  005B38                     __end_ofi2_rotate90:
 14998                           	opt stack 0
 14999                           pclatu	equ	0xFFB
 15000                           pclath	equ	0xFFA
 15001                           tblptru	equ	0xFF8
 15002                           tblptrh	equ	0xFF7
 15003                           tblptrl	equ	0xFF6
 15004                           tablat	equ	0xFF5
 15005                           prodh	equ	0xFF4
 15006                           prodl	equ	0xFF3
 15007                           intcon	equ	0xFF2
 15008                           intcon3	equ	0xFF0
 15009                           postinc0	equ	0xFEE
 15010                           fsr0h	equ	0xFEA
 15011                           fsr0l	equ	0xFE9
 15012                           wreg	equ	0xFE8
 15013                           fsr1h	equ	0xFE2
 15014                           fsr1l	equ	0xFE1
 15015                           indf2	equ	0xFDF
 15016                           postinc2	equ	0xFDE
 15017                           postdec2	equ	0xFDD
 15018                           fsr2h	equ	0xFDA
 15019                           fsr2l	equ	0xFD9
 15020                           status	equ	0xFD8
 15021                           
 15022 ;; *************** function i2_rotate270 *****************
 15023 ;; Defined at:
 15024 ;;		line 93 in file "start.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;  rotate270       2    1[COMRAM] unsigned int 
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  2    0[None  ] int 
 15031 ;; Registers used:
 15032 ;;		wreg, status,2, status,0
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15040 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15041 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15042 ;;Total ram usage:        3 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; This function calls:
 15045 ;;		Nothing
 15046 ;; This function is called by:
 15047 ;;		_keypressed
 15048 ;; This function uses a non-reentrant model
 15049 ;;
 15050                           
 15051                           	psect	text51
 15052  0059FA                     __ptext51:
 15053                           	opt stack 0
 15054  0059FA                     i2_rotate270:
 15055                           	opt stack 23
 15056                           
 15057                           ;start.c: 94: unsigned int i;
 15058                           ;start.c: 95: for (i = 0; i < 50; i++) {
 15059                           
 15060                           ;incstack = 0
 15061  0059FA  0E00               	movlw	0
 15062  0059FC  6E03               	movwf	i2rotate270@i+1,c
 15063  0059FE  0E00               	movlw	0
 15064  005A00  6E02               	movwf	i2rotate270@i,c
 15065  005A02                     i2l6452:
 15066  005A02  5003               	movf	i2rotate270@i+1,w,c
 15067  005A04  E119               	bnz	i2l279
 15068  005A06  0E32               	movlw	50
 15069  005A08  5C02               	subwf	i2rotate270@i,w,c
 15070  005A0A  B0D8               	btfsc	status,0,c
 15071  005A0C  0012               	return	
 15072                           
 15073                           ;start.c: 96: LATCbits.LATC6 = 1;
 15074  005A0E  8C8B               	bsf	3979,6,c	;volatile
 15075                           
 15076                           ;start.c: 97: _delay((unsigned long)((1730)*(8000000/4000000.0)));
 15077  005A10  0E05               	movlw	5
 15078  005A12  6E01               	movwf	??i2_rotate270& (0+255),c
 15079  005A14  0E7D               	movlw	125
 15080  005A16                     i2u1156_47:
 15081  005A16  2EE8               	decfsz	wreg,f,c
 15082  005A18  D7FE               	bra	i2u1156_47
 15083  005A1A  2E01               	decfsz	??i2_rotate270& (0+255),f,c
 15084  005A1C  D7FC               	bra	i2u1156_47
 15085  005A1E  F000               	nop	
 15086                           
 15087                           ;start.c: 98: LATCbits.LATC6 = 0;
 15088  005A20  9C8B               	bcf	3979,6,c	;volatile
 15089                           
 15090                           ;start.c: 99: _delay((unsigned long)((18270)*(8000000/4000000.0)));
 15091  005A22  0E30               	movlw	48
 15092  005A24  6E01               	movwf	??i2_rotate270& (0+255),c
 15093  005A26  0E73               	movlw	115
 15094  005A28                     i2u1157_47:
 15095  005A28  2EE8               	decfsz	wreg,f,c
 15096  005A2A  D7FE               	bra	i2u1157_47
 15097  005A2C  2E01               	decfsz	??i2_rotate270& (0+255),f,c
 15098  005A2E  D7FC               	bra	i2u1157_47
 15099  005A30  F000               	nop	
 15100  005A32  4A02               	infsnz	i2rotate270@i,f,c
 15101  005A34  2A03               	incf	i2rotate270@i+1,f,c
 15102  005A36  D7E5               	goto	i2l6452
 15103  005A38                     i2l279:
 15104  005A38  0012               	return		;funcret
 15105  005A3A                     __end_ofi2_rotate270:
 15106                           	opt stack 0
 15107                           pclatu	equ	0xFFB
 15108                           pclath	equ	0xFFA
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           intcon3	equ	0xFF0
 15117                           postinc0	equ	0xFEE
 15118                           fsr0h	equ	0xFEA
 15119                           fsr0l	equ	0xFE9
 15120                           wreg	equ	0xFE8
 15121                           fsr1h	equ	0xFE2
 15122                           fsr1l	equ	0xFE1
 15123                           indf2	equ	0xFDF
 15124                           postinc2	equ	0xFDE
 15125                           postdec2	equ	0xFDD
 15126                           fsr2h	equ	0xFDA
 15127                           fsr2l	equ	0xFD9
 15128                           status	equ	0xFD8
 15129                           
 15130 ;; *************** function i2_rotate180 *****************
 15131 ;; Defined at:
 15132 ;;		line 84 in file "start.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;  rotate180       2    1[COMRAM] unsigned int 
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  2    0[None  ] int 
 15139 ;; Registers used:
 15140 ;;		wreg, status,2, status,0
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;Total ram usage:        3 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_keypressed
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           	psect	text52
 15160  005B38                     __ptext52:
 15161                           	opt stack 0
 15162  005B38                     i2_rotate180:
 15163                           	opt stack 23
 15164                           
 15165                           ;start.c: 85: unsigned int i;
 15166                           ;start.c: 86: for (i = 0; i < 100; i++) {
 15167                           
 15168                           ;incstack = 0
 15169  005B38  0E00               	movlw	0
 15170  005B3A  6E03               	movwf	i2rotate180@i+1,c
 15171  005B3C  0E00               	movlw	0
 15172  005B3E  6E02               	movwf	i2rotate180@i,c
 15173  005B40                     i2l6440:
 15174  005B40  5003               	movf	i2rotate180@i+1,w,c
 15175  005B42  E118               	bnz	i2l274
 15176  005B44  0E64               	movlw	100
 15177  005B46  5C02               	subwf	i2rotate180@i,w,c
 15178  005B48  B0D8               	btfsc	status,0,c
 15179  005B4A  0012               	return	
 15180                           
 15181                           ;start.c: 87: LATCbits.LATC6 = 1;
 15182  005B4C  8C8B               	bsf	3979,6,c	;volatile
 15183                           
 15184                           ;start.c: 88: _delay((unsigned long)((2000)*(8000000/4000000.0)));
 15185  005B4E  0E06               	movlw	6
 15186  005B50  6E01               	movwf	??i2_rotate180& (0+255),c
 15187  005B52  0E30               	movlw	48
 15188  005B54                     i2u1158_47:
 15189  005B54  2EE8               	decfsz	wreg,f,c
 15190  005B56  D7FE               	bra	i2u1158_47
 15191  005B58  2E01               	decfsz	??i2_rotate180& (0+255),f,c
 15192  005B5A  D7FC               	bra	i2u1158_47
 15193  005B5C  D000               	nop2	
 15194                           
 15195                           ;start.c: 89: LATCbits.LATC6 = 0;
 15196  005B5E  9C8B               	bcf	3979,6,c	;volatile
 15197                           
 15198                           ;start.c: 90: _delay((unsigned long)((18000)*(8000000/4000000.0)));
 15199  005B60  0E2F               	movlw	47
 15200  005B62  6E01               	movwf	??i2_rotate180& (0+255),c
 15201  005B64  0EC0               	movlw	192
 15202  005B66                     i2u1159_47:
 15203  005B66  2EE8               	decfsz	wreg,f,c
 15204  005B68  D7FE               	bra	i2u1159_47
 15205  005B6A  2E01               	decfsz	??i2_rotate180& (0+255),f,c
 15206  005B6C  D7FC               	bra	i2u1159_47
 15207  005B6E  4A02               	infsnz	i2rotate180@i,f,c
 15208  005B70  2A03               	incf	i2rotate180@i+1,f,c
 15209  005B72  D7E6               	goto	i2l6440
 15210  005B74                     i2l274:
 15211  005B74  0012               	return		;funcret
 15212  005B76                     __end_ofi2_rotate180:
 15213                           	opt stack 0
 15214                           pclatu	equ	0xFFB
 15215                           pclath	equ	0xFFA
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           intcon3	equ	0xFF0
 15224                           postinc0	equ	0xFEE
 15225                           fsr0h	equ	0xFEA
 15226                           fsr0l	equ	0xFE9
 15227                           wreg	equ	0xFE8
 15228                           fsr1h	equ	0xFE2
 15229                           fsr1l	equ	0xFE1
 15230                           indf2	equ	0xFDF
 15231                           postinc2	equ	0xFDE
 15232                           postdec2	equ	0xFDD
 15233                           fsr2h	equ	0xFDA
 15234                           fsr2l	equ	0xFD9
 15235                           status	equ	0xFD8
 15236                           
 15237 ;; *************** function i2_readADC *****************
 15238 ;; Defined at:
 15239 ;;		line 126 in file "start.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;  channel         1    wreg     unsigned char 
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;  channel         1    1[COMRAM] unsigned char 
 15244 ;; Return value:  Size  Location     Type
 15245 ;;                  1    wreg      void 
 15246 ;; Registers used:
 15247 ;;		wreg, status,2, status,0, cstack
 15248 ;; Tracked objects:
 15249 ;;		On entry : 0/0
 15250 ;;		On exit  : 0/0
 15251 ;;		Unchanged: 0/0
 15252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15257 ;;Total ram usage:        2 bytes
 15258 ;; Hardware stack levels used:    1
 15259 ;; This function calls:
 15260 ;;		Nothing
 15261 ;; This function is called by:
 15262 ;;		_keypressed
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text53
 15267  005D3E                     __ptext53:
 15268                           	opt stack 0
 15269  005D3E                     i2_readADC:
 15270                           	opt stack 23
 15271                           
 15272                           ;incstack = 0
 15273                           ;i2readADC@channel stored from wreg
 15274  005D3E  6E02               	movwf	i2readADC@channel,c
 15275                           
 15276                           ;start.c: 128: ADCON0 = ((channel << 2));
 15277  005D40  4402               	rlncf	i2readADC@channel,w,c
 15278  005D42  46E8               	rlncf	wreg,f,c
 15279  005D44  0BFC               	andlw	252
 15280  005D46  6EC2               	movwf	4034,c	;volatile
 15281                           
 15282                           ;start.c: 129: ADON = 1;
 15283  005D48  80C2               	bsf	4034,0,c	;volatile
 15284                           
 15285                           ;start.c: 130: ADCON0bits.GO = 1;
 15286  005D4A  82C2               	bsf	4034,1,c	;volatile
 15287                           
 15288                           ;start.c: 131: while (ADCON0bits.GO_NOT_DONE) {
 15289  005D4C  D007               	goto	i2l6494
 15290  005D4E                     i2l6492:
 15291                           
 15292                           ;start.c: 132: _delay((unsigned long)((5)*(8000000/4000.0)));
 15293  005D4E  0E0D               	movlw	13
 15294  005D50  6E01               	movwf	??i2_readADC& (0+255),c
 15295  005D52  0EFC               	movlw	252
 15296  005D54                     i2u1160_47:
 15297  005D54  2EE8               	decfsz	wreg,f,c
 15298  005D56  D7FE               	bra	i2u1160_47
 15299  005D58  2E01               	decfsz	??i2_readADC& (0+255),f,c
 15300  005D5A  D7FC               	bra	i2u1160_47
 15301  005D5C                     i2l6494:
 15302  005D5C  A2C2               	btfss	4034,1,c	;volatile
 15303  005D5E  0012               	return	
 15304  005D60  D7F6               	goto	i2l6492
 15305  005D62                     __end_ofi2_readADC:
 15306                           	opt stack 0
 15307                           pclatu	equ	0xFFB
 15308                           pclath	equ	0xFFA
 15309                           tblptru	equ	0xFF8
 15310                           tblptrh	equ	0xFF7
 15311                           tblptrl	equ	0xFF6
 15312                           tablat	equ	0xFF5
 15313                           prodh	equ	0xFF4
 15314                           prodl	equ	0xFF3
 15315                           intcon	equ	0xFF2
 15316                           intcon3	equ	0xFF0
 15317                           postinc0	equ	0xFEE
 15318                           fsr0h	equ	0xFEA
 15319                           fsr0l	equ	0xFE9
 15320                           wreg	equ	0xFE8
 15321                           fsr1h	equ	0xFE2
 15322                           fsr1l	equ	0xFE1
 15323                           indf2	equ	0xFDF
 15324                           postinc2	equ	0xFDE
 15325                           postdec2	equ	0xFDD
 15326                           fsr2h	equ	0xFDA
 15327                           fsr2l	equ	0xFD9
 15328                           status	equ	0xFD8
 15329                           
 15330 ;; *************** function i2_printf *****************
 15331 ;; Defined at:
 15332 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;  f               2   63[COMRAM] PTR const unsigned char 
 15335 ;;		 -> STR_22(15), STR_21(12), STR_20(5), STR_19(9), 
 15336 ;;		 -> STR_18(9), STR_17(21), STR_16(17), STR_15(21), 
 15337 ;;		 -> STR_14(9), STR_13(11), STR_12(8), STR_11(12), 
 15338 ;;		 -> STR_10(9), STR_9(9), STR_8(6), STR_7(12), 
 15339 ;;		 -> STR_6(12), STR_5(3), STR_4(5), STR_3(6), 
 15340 ;;		 -> STR_2(3), STR_1(16), 
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  printf          4   95[COMRAM] unsigned long 
 15343 ;;  printf          4   89[COMRAM] struct .
 15344 ;;  printf          3  101[COMRAM] struct .
 15345 ;;  printf          2  104[COMRAM] int 
 15346 ;;  printf          2   99[COMRAM] unsigned short 
 15347 ;;  printf          2   93[COMRAM] int 
 15348 ;;  printf          2   87[COMRAM] int 
 15349 ;;  printf          2   85[COMRAM] PTR void [1]
 15350 ;;		 -> ?i2_printf(2), ?_printf(2), 
 15351 ;;  printf          2   83[COMRAM] unsigned int 
 15352 ;;  printf          2   81[COMRAM] PTR const unsigned char 
 15353 ;;		 -> printf@c(1), 
 15354 ;;  printf          1  106[COMRAM] char 
 15355 ;;  printf          1   80[COMRAM] unsigned char 
 15356 ;;  printf          1    0        unsigned char 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  2   63[COMRAM] int 
 15359 ;; Registers used:
 15360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15366 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15367 ;;      Locals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15368 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15369 ;;      Totals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15370 ;;Total ram usage:       44 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; Hardware stack levels required when called:    3
 15373 ;; This function calls:
 15374 ;;		i2___awdiv
 15375 ;;		i2___ftadd
 15376 ;;		i2___ftge
 15377 ;;		i2___ftmul
 15378 ;;		i2___ftneg
 15379 ;;		i2___ftsub
 15380 ;;		i2___fttol
 15381 ;;		i2___lldiv
 15382 ;;		i2___llmod
 15383 ;;		i2___lltoft
 15384 ;;		i2___wmul
 15385 ;;		i2__div_to_l_
 15386 ;;		i2__tdiv_to_l_
 15387 ;;		i2_fround
 15388 ;;		i2_isdigit
 15389 ;;		i2_putch
 15390 ;;		i2_scale
 15391 ;; This function is called by:
 15392 ;;		_keypressed
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           	psect	text54
 15397  001706                     __ptext54:
 15398                           	opt stack 0
 15399  001706                     i2_printf:
 15400                           	opt stack 20
 15401                           
 15402                           ;doprnt.c: 466: va_list ap;
 15403                           ;doprnt.c: 499: signed char c;
 15404                           ;doprnt.c: 501: int width;
 15405                           ;doprnt.c: 504: int prec;
 15406                           ;doprnt.c: 508: unsigned short flag;
 15407                           ;doprnt.c: 515: char d;
 15408                           ;doprnt.c: 516: double fval;
 15409                           ;doprnt.c: 517: int exp;
 15410                           ;doprnt.c: 523: union {
 15411                           ;doprnt.c: 524: unsigned long vd;
 15412                           ;doprnt.c: 525: double integ;
 15413                           ;doprnt.c: 526: } tmpval;
 15414                           ;doprnt.c: 528: unsigned long val;
 15415                           ;doprnt.c: 529: unsigned len;
 15416                           ;doprnt.c: 530: const char * cp;
 15417                           ;doprnt.c: 533: *ap = __va_start();
 15418                           
 15419                           ;incstack = 0
 15420  001706  0E42               	movlw	low (?i2_printf+2)
 15421  001708  6E56               	movwf	i2printf@ap,c
 15422  00170A  0E00               	movlw	high (?i2_printf+2)
 15423  00170C  6E57               	movwf	i2printf@ap+1,c
 15424                           
 15425                           ;doprnt.c: 536: while(c = *f++) {
 15426  00170E  EF94  F010         	goto	i2l6808
 15427  001712                     i2l6498:
 15428                           
 15429                           ;doprnt.c: 538: if(c != '%')
 15430  001712  0E25               	movlw	37
 15431  001714  186B               	xorwf	i2printf@c,w,c
 15432  001716  B4D8               	btfsc	status,2,c
 15433  001718  D005               	goto	i2l6502
 15434                           
 15435                           ;doprnt.c: 540: {
 15436                           ;doprnt.c: 541: (putch(c) );
 15437  00171A  506B               	movf	i2printf@c,w,c
 15438  00171C  ECFB  F02E         	call	i2_putch
 15439                           
 15440                           ;doprnt.c: 542: continue;
 15441  001720  EF94  F010         	goto	i2l6808
 15442  001724                     i2l6502:
 15443                           
 15444                           ;doprnt.c: 543: }
 15445                           ;doprnt.c: 546: width = 0;
 15446  001724  0E00               	movlw	0
 15447  001726  6E6A               	movwf	i2printf@width+1,c
 15448  001728  0E00               	movlw	0
 15449  00172A  6E69               	movwf	i2printf@width,c
 15450                           
 15451                           ;doprnt.c: 548: flag = 0;
 15452  00172C  0E00               	movlw	0
 15453  00172E  6E65               	movwf	i2printf@flag+1,c
 15454  001730  0E00               	movlw	0
 15455  001732  6E64               	movwf	i2printf@flag,c
 15456                           
 15457                           ;doprnt.c: 551: switch(*f) {
 15458                           
 15459                           ;doprnt.c: 550: for(;;) {
 15460  001734  D003               	goto	i2l6508
 15461  001736                     i2l6504:
 15462                           
 15463                           ;doprnt.c: 580: flag |= 0x04;
 15464  001736  8464               	bsf	i2printf@flag,2,c
 15465                           
 15466                           ;doprnt.c: 581: f++;
 15467  001738  4A40               	infsnz	i2printf@f,f,c
 15468  00173A  2A41               	incf	i2printf@f+1,f,c
 15469  00173C                     i2l6508:
 15470  00173C  C040  FFF6         	movff	i2printf@f,tblptrl
 15471  001740  C041  FFF7         	movff	i2printf@f+1,tblptrh
 15472  001744                     	if	0	;tblptru may be non-zero
 15473  001744                     	endif
 15474  001744                     	if	0	;tblptru may be non-zero
 15475  001744                     	endif
 15476  001744  0008               	tblrd		*
 15477  001746  50F5               	movf	tablat,w,c
 15478                           
 15479                           ; Switch size 1, requested type "space"
 15480                           ; Number of cases is 1, Range of values is 48 to 48
 15481                           ; switch strategies available:
 15482                           ; Name         Instructions Cycles
 15483                           ; simple_byte            4     3 (average)
 15484                           ;	Chosen strategy is simple_byte
 15485  001748  0A30               	xorlw	48	; case 48
 15486  00174A  B4D8               	btfsc	status,2,c
 15487  00174C  D7F4               	goto	i2l6504
 15488                           
 15489                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15490                           
 15491                           ;doprnt.c: 586: }
 15492                           
 15493                           ;doprnt.c: 585: break;
 15494  00174E  C040  FFF6         	movff	i2printf@f,tblptrl
 15495  001752  C041  FFF7         	movff	i2printf@f+1,tblptrh
 15496  001756                     	if	0	;tblptru may be non-zero
 15497  001756                     	endif
 15498  001756                     	if	0	;tblptru may be non-zero
 15499  001756                     	endif
 15500  001756  0008               	tblrd		*
 15501  001758  50F5               	movf	tablat,w,c
 15502  00175A  ECD2  F02E         	call	i2_isdigit
 15503  00175E  A0D8               	btfss	status,0,c
 15504  001760  D079               	goto	i2l6552
 15505                           
 15506                           ;doprnt.c: 598: width = 0;
 15507  001762  0E00               	movlw	0
 15508  001764  6E6A               	movwf	i2printf@width+1,c
 15509  001766  0E00               	movlw	0
 15510  001768  6E69               	movwf	i2printf@width,c
 15511  00176A                     i2l6514:
 15512                           
 15513                           ;doprnt.c: 600: width *= 10;
 15514  00176A  C069  F00F         	movff	i2printf@width,i2___wmul@multiplier
 15515  00176E  C06A  F010         	movff	i2printf@width+1,i2___wmul@multiplier+1
 15516  001772  0E00               	movlw	0
 15517  001774  6E12               	movwf	i2___wmul@multiplicand+1,c
 15518  001776  0E0A               	movlw	10
 15519  001778  6E11               	movwf	i2___wmul@multiplicand,c
 15520  00177A  EC7A  F02E         	call	i2___wmul	;wreg free
 15521  00177E  C00F  F069         	movff	?i2___wmul,i2printf@width
 15522  001782  C010  F06A         	movff	?i2___wmul+1,i2printf@width+1
 15523                           
 15524                           ;doprnt.c: 601: width += *f++ - '0';
 15525  001786  0ED0               	movlw	208
 15526  001788  6E48               	movwf	??i2_printf& (0+255),c
 15527  00178A  0EFF               	movlw	255
 15528  00178C  6E49               	movwf	(??i2_printf+1)& (0+255),c
 15529  00178E  C040  FFF6         	movff	i2printf@f,tblptrl
 15530  001792  C041  FFF7         	movff	i2printf@f+1,tblptrh
 15531  001796                     	if	0	;tblptru may be non-zero
 15532  001796                     	endif
 15533  001796                     	if	0	;tblptru may be non-zero
 15534  001796                     	endif
 15535  001796  0008               	tblrd		*
 15536  001798  50F5               	movf	tablat,w,c
 15537  00179A  6E4A               	movwf	(??i2_printf+2)& (0+255),c
 15538  00179C  6A4B               	clrf	(??i2_printf+3)& (0+255),c
 15539  00179E  5048               	movf	??i2_printf,w,c
 15540  0017A0  264A               	addwf	??i2_printf+2,f,c
 15541  0017A2  5049               	movf	??i2_printf+1,w,c
 15542  0017A4  224B               	addwfc	??i2_printf+3,f,c
 15543  0017A6  504A               	movf	??i2_printf+2,w,c
 15544  0017A8  2669               	addwf	i2printf@width,f,c
 15545  0017AA  504B               	movf	??i2_printf+3,w,c
 15546  0017AC  226A               	addwfc	i2printf@width+1,f,c
 15547  0017AE  4A40               	infsnz	i2printf@f,f,c
 15548  0017B0  2A41               	incf	i2printf@f+1,f,c
 15549                           
 15550                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15551  0017B2  C040  FFF6         	movff	i2printf@f,tblptrl
 15552  0017B6  C041  FFF7         	movff	i2printf@f+1,tblptrh
 15553  0017BA                     	if	0	;tblptru may be non-zero
 15554  0017BA                     	endif
 15555  0017BA                     	if	0	;tblptru may be non-zero
 15556  0017BA                     	endif
 15557  0017BA  0008               	tblrd		*
 15558  0017BC  50F5               	movf	tablat,w,c
 15559  0017BE  ECD2  F02E         	call	i2_isdigit
 15560  0017C2  A0D8               	btfss	status,0,c
 15561  0017C4  D047               	goto	i2l6552
 15562  0017C6  D7D1               	goto	i2l6514
 15563  0017C8                     i2l6522:
 15564                           
 15565                           ;doprnt.c: 663: flag |= 0x400;
 15566  0017C8  8465               	bsf	i2printf@flag+1,2,c
 15567                           
 15568                           ;doprnt.c: 698: case 'i':
 15569                           ;doprnt.c: 699: break;
 15570                           
 15571                           ;doprnt.c: 697: case 'd':
 15572                           
 15573                           ;doprnt.c: 664: break;
 15574  0017CA  D061               	goto	i2l6554
 15575  0017CC                     i2l6524:
 15576                           
 15577                           ;doprnt.c: 721: flag |= 0x80;
 15578  0017CC  8E64               	bsf	i2printf@flag,7,c
 15579                           
 15580                           ;doprnt.c: 723: break;
 15581  0017CE  D05F               	goto	i2l6554
 15582  0017D0                     i2l6526:
 15583                           
 15584                           ;doprnt.c: 757: if(width > len)
 15585  0017D0  5069               	movf	i2printf@width,w,c
 15586  0017D2  5C54               	subwf	i2printf@len,w,c
 15587  0017D4  506A               	movf	i2printf@width+1,w,c
 15588  0017D6  5855               	subwfb	i2printf@len+1,w,c
 15589  0017D8  B0D8               	btfsc	status,0,c
 15590  0017DA  D005               	goto	i2l6530
 15591                           
 15592                           ;doprnt.c: 758: width -= len;
 15593  0017DC  5054               	movf	i2printf@len,w,c
 15594  0017DE  5E69               	subwf	i2printf@width,f,c
 15595  0017E0  5055               	movf	i2printf@len+1,w,c
 15596  0017E2  5A6A               	subwfb	i2printf@width+1,f,c
 15597  0017E4  D008               	goto	i2l6534
 15598  0017E6                     i2l6530:
 15599                           
 15600                           ;doprnt.c: 759: else
 15601                           ;doprnt.c: 760: width = 0;
 15602  0017E6  0E00               	movlw	0
 15603  0017E8  6E6A               	movwf	i2printf@width+1,c
 15604  0017EA  0E00               	movlw	0
 15605  0017EC  6E69               	movwf	i2printf@width,c
 15606                           
 15607                           ;doprnt.c: 764: while(width--)
 15608  0017EE  D003               	goto	i2l6534
 15609  0017F0                     i2l6532:
 15610                           
 15611                           ;doprnt.c: 765: (putch(' ') );
 15612  0017F0  0E20               	movlw	32
 15613  0017F2  ECFB  F02E         	call	i2_putch
 15614  0017F6                     i2l6534:
 15615  0017F6  0669               	decf	i2printf@width,f,c
 15616  0017F8  A0D8               	btfss	status,0,c
 15617  0017FA  066A               	decf	i2printf@width+1,f,c
 15618  0017FC  2869               	incf	i2printf@width,w,c
 15619  0017FE  E1F8               	bnz	i2l6532
 15620  001800  286A               	incf	i2printf@width+1,w,c
 15621  001802  B4D8               	btfsc	status,2,c
 15622  001804  D00A               	goto	i2l6540
 15623  001806  D7F4               	goto	i2l6532
 15624  001808                     i2l6536:
 15625                           
 15626                           ;doprnt.c: 768: (putch(*cp++) );
 15627  001808  C052  FFD9         	movff	i2printf@cp,fsr2l
 15628  00180C  C053  FFDA         	movff	i2printf@cp+1,fsr2h
 15629  001810  50DF               	movf	indf2,w,c
 15630  001812  ECFB  F02E         	call	i2_putch
 15631  001816  4A52               	infsnz	i2printf@cp,f,c
 15632  001818  2A53               	incf	i2printf@cp+1,f,c
 15633  00181A                     i2l6540:
 15634  00181A  0654               	decf	i2printf@len,f,c
 15635  00181C  A0D8               	btfss	status,0,c
 15636  00181E  0655               	decf	i2printf@len+1,f,c
 15637  001820  2854               	incf	i2printf@len,w,c
 15638  001822  E1F2               	bnz	i2l6536
 15639  001824  2855               	incf	i2printf@len+1,w,c
 15640  001826  B4D8               	btfsc	status,2,c
 15641  001828  EF94  F010         	goto	i2l6808
 15642  00182C  D7ED               	goto	i2l6536
 15643  00182E                     i2l6542:
 15644                           
 15645                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15646  00182E  C056  FFD9         	movff	i2printf@ap,fsr2l
 15647  001832  C057  FFDA         	movff	i2printf@ap+1,fsr2h
 15648  001836  50DF               	movf	indf2,w,c
 15649  001838  6E6B               	movwf	i2printf@c,c
 15650  00183A  0E02               	movlw	2
 15651  00183C  2656               	addwf	i2printf@ap,f,c
 15652  00183E  0E00               	movlw	0
 15653  001840  2257               	addwfc	i2printf@ap+1,f,c
 15654  001842                     i2l6546:
 15655                           
 15656                           ;doprnt.c: 805: cp = (char *)&c;
 15657  001842  0E6B               	movlw	low i2printf@c
 15658  001844  6E52               	movwf	i2printf@cp,c
 15659  001846  0E00               	movlw	high i2printf@c
 15660  001848  6E53               	movwf	i2printf@cp+1,c
 15661                           
 15662                           ;doprnt.c: 806: len = 1;
 15663  00184A  0E00               	movlw	0
 15664  00184C  6E55               	movwf	i2printf@len+1,c
 15665  00184E  0E01               	movlw	1
 15666  001850  6E54               	movwf	i2printf@len,c
 15667                           
 15668                           ;doprnt.c: 807: goto dostring;
 15669  001852  D7BE               	goto	i2l6526
 15670  001854                     i2l6552:
 15671  001854  C040  FFF6         	movff	i2printf@f,tblptrl
 15672  001858  C041  FFF7         	movff	i2printf@f+1,tblptrh
 15673  00185C  4A40               	infsnz	i2printf@f,f,c
 15674  00185E  2A41               	incf	i2printf@f+1,f,c
 15675  001860                     	if	0	;tblptru may be non-zero
 15676  001860                     	endif
 15677  001860                     	if	0	;tblptru may be non-zero
 15678  001860                     	endif
 15679  001860  0008               	tblrd		*
 15680  001862  CFF5 F06B          	movff	tablat,i2printf@c
 15681  001866  506B               	movf	i2printf@c,w,c
 15682                           
 15683                           ; Switch size 1, requested type "space"
 15684                           ; Number of cases is 6, Range of values is 0 to 120
 15685                           ; switch strategies available:
 15686                           ; Name         Instructions Cycles
 15687                           ; simple_byte           19    10 (average)
 15688                           ;	Chosen strategy is simple_byte
 15689  001868  0A00               	xorlw	0	; case 0
 15690  00186A  B4D8               	btfsc	status,2,c
 15691  00186C  0012               	return	
 15692  00186E  0A63               	xorlw	99	; case 99
 15693  001870  B4D8               	btfsc	status,2,c
 15694  001872  D7DD               	goto	i2l6542
 15695  001874  0A07               	xorlw	7	; case 100
 15696  001876  B4D8               	btfsc	status,2,c
 15697  001878  D00A               	goto	i2l6554
 15698  00187A  0A02               	xorlw	2	; case 102
 15699  00187C  B4D8               	btfsc	status,2,c
 15700  00187E  D7A4               	goto	i2l6522
 15701  001880  0A0F               	xorlw	15	; case 105
 15702  001882  B4D8               	btfsc	status,2,c
 15703  001884  D004               	goto	i2l6554
 15704  001886  0A11               	xorlw	17	; case 120
 15705  001888  B4D8               	btfsc	status,2,c
 15706  00188A  D7A0               	goto	i2l6524
 15707  00188C  D7DA               	goto	i2l6546
 15708  00188E                     i2l6554:
 15709                           
 15710                           ;doprnt.c: 825: if(flag & (0x700)) {
 15711  00188E  0E07               	movlw	7
 15712  001890  1465               	andwf	i2printf@flag+1,w,c
 15713  001892  B4D8               	btfsc	status,2,c
 15714  001894  D2EC               	goto	i2l595
 15715                           
 15716                           ;doprnt.c: 829: prec = 6;
 15717  001896  0E00               	movlw	0
 15718  001898  6E59               	movwf	i2printf@prec+1,c
 15719  00189A  0E06               	movlw	6
 15720  00189C  6E58               	movwf	i2printf@prec,c
 15721                           
 15722                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 15723  00189E  C056  FFD9         	movff	i2printf@ap,fsr2l
 15724  0018A2  C057  FFDA         	movff	i2printf@ap+1,fsr2h
 15725  0018A6  CFDE F066          	movff	postinc2,i2printf@fval
 15726  0018AA  CFDE F067          	movff	postinc2,i2printf@fval+1
 15727  0018AE  CFDD F068          	movff	postdec2,i2printf@fval+2
 15728  0018B2  0E03               	movlw	3
 15729  0018B4  2656               	addwf	i2printf@ap,f,c
 15730  0018B6  0E00               	movlw	0
 15731  0018B8  2257               	addwfc	i2printf@ap+1,f,c
 15732                           
 15733                           ;doprnt.c: 831: if(fval < 0.0) {
 15734  0018BA  AE68               	btfss	i2printf@fval+2,7,c
 15735  0018BC  D010               	goto	i2l6568
 15736                           
 15737                           ;doprnt.c: 832: fval = -fval;
 15738  0018BE  C066  F001         	movff	i2printf@fval,i2___ftneg@f1
 15739  0018C2  C067  F002         	movff	i2printf@fval+1,i2___ftneg@f1+1
 15740  0018C6  C068  F003         	movff	i2printf@fval+2,i2___ftneg@f1+2
 15741  0018CA  ECB1  F02E         	call	i2___ftneg	;wreg free
 15742  0018CE  C001  F066         	movff	?i2___ftneg,i2printf@fval
 15743  0018D2  C002  F067         	movff	?i2___ftneg+1,i2printf@fval+1
 15744  0018D6  C003  F068         	movff	?i2___ftneg+2,i2printf@fval+2
 15745                           
 15746                           ;doprnt.c: 833: flag |= 0x03;
 15747  0018DA  0E03               	movlw	3
 15748  0018DC  1264               	iorwf	i2printf@flag,f,c
 15749  0018DE                     i2l6568:
 15750                           
 15751                           ;doprnt.c: 834: }
 15752                           ;doprnt.c: 835: exp = 0;
 15753  0018DE  0E00               	movlw	0
 15754  0018E0  6E5F               	movwf	i2printf@exp+1,c
 15755  0018E2  0E00               	movlw	0
 15756  0018E4  6E5E               	movwf	i2printf@exp,c
 15757                           
 15758                           ;doprnt.c: 836: if( fval!=0) {
 15759  0018E6  5066               	movf	i2printf@fval,w,c
 15760  0018E8  1067               	iorwf	i2printf@fval+1,w,c
 15761  0018EA  1068               	iorwf	i2printf@fval+2,w,c
 15762  0018EC  B4D8               	btfsc	status,2,c
 15763  0018EE  D083               	goto	i2l6596
 15764                           
 15765                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 15766  0018F0  0E82               	movlw	130
 15767  0018F2  6E48               	movwf	??i2_printf& (0+255),c
 15768  0018F4  0EFF               	movlw	255
 15769  0018F6  6E49               	movwf	(??i2_printf+1)& (0+255),c
 15770  0018F8  C066  F04A         	movff	i2printf@fval,??i2_printf+2
 15771  0018FC  C067  F04B         	movff	i2printf@fval+1,??i2_printf+3
 15772  001900  C068  F04C         	movff	i2printf@fval+2,??i2_printf+4
 15773  001904  C069  F04D         	movff	i2printf@fval+3,??i2_printf+5
 15774  001908  0E10               	movlw	16
 15775  00190A  D005               	goto	i2u821_40
 15776  00190C                     i2u821_45:
 15777  00190C  90D8               	bcf	status,0,c
 15778  00190E  324D               	rrcf	??i2_printf+5,f,c
 15779  001910  324C               	rrcf	??i2_printf+4,f,c
 15780  001912  324B               	rrcf	??i2_printf+3,f,c
 15781  001914  324A               	rrcf	??i2_printf+2,f,c
 15782  001916                     i2u821_40:
 15783  001916  2EE8               	decfsz	wreg,f,c
 15784  001918  D7F9               	goto	i2u821_45
 15785  00191A  504A               	movf	??i2_printf+2,w,c
 15786  00191C  2448               	addwf	??i2_printf,w,c
 15787  00191E  6E5E               	movwf	i2printf@exp,c
 15788  001920  0E00               	movlw	0
 15789  001922  2049               	addwfc	??i2_printf+1,w,c
 15790  001924  6E5F               	movwf	i2printf@exp+1,c
 15791                           
 15792                           ;doprnt.c: 838: exp--;
 15793  001926  065E               	decf	i2printf@exp,f,c
 15794  001928  A0D8               	btfss	status,0,c
 15795  00192A  065F               	decf	i2printf@exp+1,f,c
 15796                           
 15797                           ;doprnt.c: 839: exp *= 3;
 15798  00192C  C05E  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 15799  001930  C05F  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 15800  001934  0E00               	movlw	0
 15801  001936  6E12               	movwf	i2___wmul@multiplicand+1,c
 15802  001938  0E03               	movlw	3
 15803  00193A  6E11               	movwf	i2___wmul@multiplicand,c
 15804  00193C  EC7A  F02E         	call	i2___wmul	;wreg free
 15805  001940  C00F  F05E         	movff	?i2___wmul,i2printf@exp
 15806  001944  C010  F05F         	movff	?i2___wmul+1,i2printf@exp+1
 15807                           
 15808                           ;doprnt.c: 840: exp /= 10;
 15809  001948  C05E  F007         	movff	i2printf@exp,i2___awdiv@dividend
 15810  00194C  C05F  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 15811  001950  0E00               	movlw	0
 15812  001952  6E0A               	movwf	i2___awdiv@divisor+1,c
 15813  001954  0E0A               	movlw	10
 15814  001956  6E09               	movwf	i2___awdiv@divisor,c
 15815  001958  ECC6  F029         	call	i2___awdiv	;wreg free
 15816  00195C  C007  F05E         	movff	?i2___awdiv,i2printf@exp
 15817  001960  C008  F05F         	movff	?i2___awdiv+1,i2printf@exp+1
 15818                           
 15819                           ;doprnt.c: 841: if(exp < 0)
 15820  001964  AE5F               	btfss	i2printf@exp+1,7,c
 15821  001966  D003               	goto	i2l6584
 15822                           
 15823                           ;doprnt.c: 842: exp--;
 15824  001968  065E               	decf	i2printf@exp,f,c
 15825  00196A  A0D8               	btfss	status,0,c
 15826  00196C  065F               	decf	i2printf@exp+1,f,c
 15827  00196E                     i2l6584:
 15828                           
 15829                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 15830  00196E  505E               	movf	i2printf@exp,w,c
 15831  001970  0800               	sublw	0
 15832  001972  ECEA  F017         	call	i2_scale
 15833  001976  C024  F05A         	movff	?i2_scale,i2printf@tmpval
 15834  00197A  C025  F05B         	movff	?i2_scale+1,i2printf@tmpval+1
 15835  00197E  C026  F05C         	movff	?i2_scale+2,i2printf@tmpval+2
 15836                           
 15837                           ;doprnt.c: 847: tmpval.integ *= fval;
 15838  001982  C05A  F015         	movff	i2printf@tmpval,i2___ftmul@f1
 15839  001986  C05B  F016         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 15840  00198A  C05C  F017         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 15841  00198E  C066  F018         	movff	i2printf@fval,i2___ftmul@f2
 15842  001992  C067  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 15843  001996  C068  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 15844  00199A  EC3B  F025         	call	i2___ftmul	;wreg free
 15845  00199E  C015  F05A         	movff	?i2___ftmul,i2printf@tmpval
 15846  0019A2  C016  F05B         	movff	?i2___ftmul+1,i2printf@tmpval+1
 15847  0019A6  C017  F05C         	movff	?i2___ftmul+2,i2printf@tmpval+2
 15848                           
 15849                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 15850  0019AA  C05A  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 15851  0019AE  C05B  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 15852  0019B2  C05C  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 15853  0019B6  0E00               	movlw	0
 15854  0019B8  6E04               	movwf	i2___ftge@ff2,c
 15855  0019BA  0E80               	movlw	128
 15856  0019BC  6E05               	movwf	i2___ftge@ff2+1,c
 15857  0019BE  0E3F               	movlw	63
 15858  0019C0  6E06               	movwf	i2___ftge@ff2+2,c
 15859  0019C2  EC7E  F029         	call	i2___ftge	;wreg free
 15860  0019C6  B0D8               	btfsc	status,0,c
 15861  0019C8  D004               	goto	i2l6592
 15862                           
 15863                           ;doprnt.c: 849: exp--;
 15864  0019CA  065E               	decf	i2printf@exp,f,c
 15865  0019CC  A0D8               	btfss	status,0,c
 15866  0019CE  065F               	decf	i2printf@exp+1,f,c
 15867  0019D0  D012               	goto	i2l6596
 15868  0019D2                     i2l6592:
 15869                           
 15870                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 15871  0019D2  C05A  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 15872  0019D6  C05B  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 15873  0019DA  C05C  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 15874  0019DE  0E00               	movlw	0
 15875  0019E0  6E04               	movwf	i2___ftge@ff2,c
 15876  0019E2  0E20               	movlw	32
 15877  0019E4  6E05               	movwf	i2___ftge@ff2+1,c
 15878  0019E6  0E41               	movlw	65
 15879  0019E8  6E06               	movwf	i2___ftge@ff2+2,c
 15880  0019EA  EC7E  F029         	call	i2___ftge	;wreg free
 15881  0019EE  A0D8               	btfss	status,0,c
 15882  0019F0  D002               	goto	i2l6596
 15883                           
 15884                           ;doprnt.c: 851: exp++;
 15885  0019F2  4A5E               	infsnz	i2printf@exp,f,c
 15886  0019F4  2A5F               	incf	i2printf@exp+1,f,c
 15887  0019F6                     i2l6596:
 15888                           
 15889                           ;doprnt.c: 852: }
 15890                           ;doprnt.c: 1112: if(prec <= 12)
 15891  0019F6  BE59               	btfsc	i2printf@prec+1,7,c
 15892  0019F8  D006               	goto	i2l6598
 15893  0019FA  5059               	movf	i2printf@prec+1,w,c
 15894  0019FC  E11B               	bnz	i2l6600
 15895  0019FE  0E0D               	movlw	13
 15896  001A00  5C58               	subwf	i2printf@prec,w,c
 15897  001A02  B0D8               	btfsc	status,0,c
 15898  001A04  D017               	goto	i2l6600
 15899  001A06                     i2l6598:
 15900                           
 15901                           ;doprnt.c: 1113: fval += fround(prec);
 15902  001A06  C066  F02E         	movff	i2printf@fval,i2___ftadd@f1
 15903  001A0A  C067  F02F         	movff	i2printf@fval+1,i2___ftadd@f1+1
 15904  001A0E  C068  F030         	movff	i2printf@fval+2,i2___ftadd@f1+2
 15905  001A12  5058               	movf	i2printf@prec,w,c
 15906  001A14  EC6C  F01C         	call	i2_fround
 15907  001A18  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 15908  001A1C  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 15909  001A20  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 15910  001A24  EC8F  F01D         	call	i2___ftadd	;wreg free
 15911  001A28  C02E  F066         	movff	?i2___ftadd,i2printf@fval
 15912  001A2C  C02F  F067         	movff	?i2___ftadd+1,i2printf@fval+1
 15913  001A30  C030  F068         	movff	?i2___ftadd+2,i2printf@fval+2
 15914  001A34                     i2l6600:
 15915                           
 15916                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 15917  001A34  BE5F               	btfsc	i2printf@exp+1,7,c
 15918  001A36  D006               	goto	i2l6602
 15919  001A38  505F               	movf	i2printf@exp+1,w,c
 15920  001A3A  E11E               	bnz	i2l6608
 15921  001A3C  0E0A               	movlw	10
 15922  001A3E  5C5E               	subwf	i2printf@exp,w,c
 15923  001A40  B0D8               	btfsc	status,0,c
 15924  001A42  D01A               	goto	i2l6608
 15925  001A44                     i2l6602:
 15926  001A44  5066               	movf	i2printf@fval,w,c
 15927  001A46  1067               	iorwf	i2printf@fval+1,w,c
 15928  001A48  1068               	iorwf	i2printf@fval+2,w,c
 15929  001A4A  B4D8               	btfsc	status,2,c
 15930  001A4C  D051               	goto	i2l6622
 15931  001A4E  C066  F024         	movff	i2printf@fval,i2___fttol@f1
 15932  001A52  C067  F025         	movff	i2printf@fval+1,i2___fttol@f1+1
 15933  001A56  C068  F026         	movff	i2printf@fval+2,i2___fttol@f1+2
 15934  001A5A  ECB5  F025         	call	i2___fttol	;wreg free
 15935  001A5E  5024               	movf	?i2___fttol,w,c
 15936  001A60  1025               	iorwf	?i2___fttol+1,w,c
 15937  001A62  1026               	iorwf	?i2___fttol+2,w,c
 15938  001A64  1027               	iorwf	?i2___fttol+3,w,c
 15939  001A66  B4D8               	btfsc	status,2,c
 15940  001A68  BE5F               	btfsc	i2printf@exp+1,7,c
 15941  001A6A  D042               	goto	i2l6622
 15942  001A6C  505F               	movf	i2printf@exp+1,w,c
 15943  001A6E  E104               	bnz	i2l6608
 15944  001A70  0E02               	movlw	2
 15945  001A72  5C5E               	subwf	i2printf@exp,w,c
 15946  001A74  A0D8               	btfss	status,0,c
 15947  001A76  D03C               	goto	i2l6622
 15948  001A78                     i2l6608:
 15949                           
 15950                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 15951  001A78  C05A  F001         	movff	i2printf@tmpval,i2___ftge@ff1
 15952  001A7C  C05B  F002         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 15953  001A80  C05C  F003         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 15954  001A84  0E70               	movlw	112
 15955  001A86  6E04               	movwf	i2___ftge@ff2,c
 15956  001A88  0E89               	movlw	137
 15957  001A8A  6E05               	movwf	i2___ftge@ff2+1,c
 15958  001A8C  0E40               	movlw	64
 15959  001A8E  6E06               	movwf	i2___ftge@ff2+2,c
 15960  001A90  EC7E  F029         	call	i2___ftge	;wreg free
 15961  001A94  B0D8               	btfsc	status,0,c
 15962  001A96  D002               	goto	i2l6612
 15963                           
 15964                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 15965  001A98  0EF7               	movlw	247
 15966  001A9A  D001               	goto	L13
 15967  001A9C                     i2l6612:
 15968                           
 15969                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 15970  001A9C  0EF8               	movlw	248
 15971  001A9E                     L13:
 15972  001A9E  265E               	addwf	i2printf@exp,f,c
 15973  001AA0  0EFF               	movlw	255
 15974  001AA2  225F               	addwfc	i2printf@exp+1,f,c
 15975                           
 15976                           ;doprnt.c: 1124: }
 15977                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 15978  001AA4  505E               	movf	i2printf@exp,w,c
 15979  001AA6  ECEA  F017         	call	i2_scale
 15980  001AAA  C024  F05A         	movff	?i2_scale,i2printf@tmpval
 15981  001AAE  C025  F05B         	movff	?i2_scale+1,i2printf@tmpval+1
 15982  001AB2  C026  F05C         	movff	?i2_scale+2,i2printf@tmpval+2
 15983                           
 15984                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 15985  001AB6  C066  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 15986  001ABA  C067  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 15987  001ABE  C068  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 15988  001AC2  C05A  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 15989  001AC6  C05B  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 15990  001ACA  C05C  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 15991  001ACE  EC8D  F022         	call	i2__tdiv_to_l_	;wreg free
 15992  001AD2  C001  F060         	movff	?i2__tdiv_to_l_,i2printf@val
 15993  001AD6  C002  F061         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 15994  001ADA  C003  F062         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 15995  001ADE  C004  F063         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 15996                           
 15997                           ;doprnt.c: 1129: fval = 0.0;
 15998  001AE2  0E00               	movlw	0
 15999  001AE4  6E66               	movwf	i2printf@fval,c
 16000  001AE6  0E00               	movlw	0
 16001  001AE8  6E67               	movwf	i2printf@fval+1,c
 16002  001AEA  0E00               	movlw	0
 16003  001AEC  6E68               	movwf	i2printf@fval+2,c
 16004                           
 16005                           ;doprnt.c: 1130: } else {
 16006  001AEE  D032               	goto	i2l6626
 16007  001AF0                     i2l6622:
 16008                           
 16009                           ;doprnt.c: 1131: val = (unsigned long)fval;
 16010  001AF0  C066  F024         	movff	i2printf@fval,i2___fttol@f1
 16011  001AF4  C067  F025         	movff	i2printf@fval+1,i2___fttol@f1+1
 16012  001AF8  C068  F026         	movff	i2printf@fval+2,i2___fttol@f1+2
 16013  001AFC  ECB5  F025         	call	i2___fttol	;wreg free
 16014  001B00  C024  F060         	movff	?i2___fttol,i2printf@val
 16015  001B04  C025  F061         	movff	?i2___fttol+1,i2printf@val+1
 16016  001B08  C026  F062         	movff	?i2___fttol+2,i2printf@val+2
 16017  001B0C  C027  F063         	movff	?i2___fttol+3,i2printf@val+3
 16018                           
 16019                           ;doprnt.c: 1132: fval -= (double)val;
 16020  001B10  C066  F03A         	movff	i2printf@fval,i2___ftsub@f1
 16021  001B14  C067  F03B         	movff	i2printf@fval+1,i2___ftsub@f1+1
 16022  001B18  C068  F03C         	movff	i2printf@fval+2,i2___ftsub@f1+2
 16023  001B1C  C060  F009         	movff	i2printf@val,i2___lltoft@c
 16024  001B20  C061  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 16025  001B24  C062  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 16026  001B28  C063  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 16027  001B2C  EC56  F02B         	call	i2___lltoft	;wreg free
 16028  001B30  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 16029  001B34  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 16030  001B38  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 16031  001B3C  EC1D  F02D         	call	i2___ftsub	;wreg free
 16032  001B40  C03A  F066         	movff	?i2___ftsub,i2printf@fval
 16033  001B44  C03B  F067         	movff	?i2___ftsub+1,i2printf@fval+1
 16034  001B48  C03C  F068         	movff	?i2___ftsub+2,i2printf@fval+2
 16035                           
 16036                           ;doprnt.c: 1133: exp = 0;
 16037  001B4C  0E00               	movlw	0
 16038  001B4E  6E5F               	movwf	i2printf@exp+1,c
 16039  001B50  0E00               	movlw	0
 16040  001B52  6E5E               	movwf	i2printf@exp,c
 16041  001B54                     i2l6626:
 16042                           
 16043                           ;doprnt.c: 1134: }
 16044                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16045  001B54  0E01               	movlw	1
 16046  001B56  6E6B               	movwf	i2printf@c,c
 16047  001B58                     i2l6628:
 16048  001B58  0E0A               	movlw	10
 16049  001B5A  186B               	xorwf	i2printf@c,w,c
 16050  001B5C  B4D8               	btfsc	status,2,c
 16051  001B5E  D018               	goto	i2l6640
 16052                           
 16053                           ;doprnt.c: 1137: if(val < dpowers[c])
 16054  001B60  506B               	movf	i2printf@c,w,c
 16055  001B62  0D04               	mullw	4
 16056  001B64  0E7D               	movlw	low _dpowers
 16057  001B66  24F3               	addwf	prodl,w,c
 16058  001B68  6EF6               	movwf	tblptrl,c
 16059  001B6A  0EFE               	movlw	high _dpowers
 16060  001B6C  20F4               	addwfc	prodh,w,c
 16061  001B6E  6EF7               	movwf	tblptrh,c
 16062  001B70                     	if	0	;There are less than 3 active tblptr bytes
 16063  001B70                     	endif
 16064  001B70  0009               	tblrd		*+
 16065  001B72  50F5               	movf	tablat,w,c
 16066  001B74  5C60               	subwf	i2printf@val,w,c
 16067  001B76  0009               	tblrd		*+
 16068  001B78  50F5               	movf	tablat,w,c
 16069  001B7A  5861               	subwfb	i2printf@val+1,w,c
 16070  001B7C  0009               	tblrd		*+
 16071  001B7E  50F5               	movf	tablat,w,c
 16072  001B80  5862               	subwfb	i2printf@val+2,w,c
 16073  001B82  0009               	tblrd		*+
 16074  001B84  50F5               	movf	tablat,w,c
 16075  001B86  5863               	subwfb	i2printf@val+3,w,c
 16076  001B88  A0D8               	btfss	status,0,c
 16077  001B8A  D002               	goto	i2l6640
 16078                           
 16079                           ;doprnt.c: 1138: break;
 16080  001B8C  2A6B               	incf	i2printf@c,f,c
 16081  001B8E  D7E4               	goto	i2l6628
 16082  001B90                     i2l6640:
 16083                           
 16084                           ;doprnt.c: 1142: width -= prec + c + exp;
 16085  001B90  C06B  F048         	movff	i2printf@c,??i2_printf
 16086  001B94  6A49               	clrf	(??i2_printf+1)& (0+255),c
 16087  001B96  BE48               	btfsc	??i2_printf& (0+255),7,c
 16088  001B98  0649               	decf	(??i2_printf+1)& (0+255),f,c
 16089  001B9A  5058               	movf	i2printf@prec,w,c
 16090  001B9C  2648               	addwf	??i2_printf,f,c
 16091  001B9E  5059               	movf	i2printf@prec+1,w,c
 16092  001BA0  2249               	addwfc	??i2_printf+1,f,c
 16093  001BA2  505E               	movf	i2printf@exp,w,c
 16094  001BA4  2648               	addwf	??i2_printf,f,c
 16095  001BA6  505F               	movf	i2printf@exp+1,w,c
 16096  001BA8  2249               	addwfc	??i2_printf+1,f,c
 16097  001BAA  5048               	movf	??i2_printf,w,c
 16098  001BAC  5E69               	subwf	i2printf@width,f,c
 16099  001BAE  5049               	movf	??i2_printf+1,w,c
 16100  001BB0  5A6A               	subwfb	i2printf@width+1,f,c
 16101                           
 16102                           ;doprnt.c: 1143: if(
 16103                           ;doprnt.c: 1147: prec)
 16104  001BB2  5058               	movf	i2printf@prec,w,c
 16105  001BB4  1059               	iorwf	i2printf@prec+1,w,c
 16106  001BB6  B4D8               	btfsc	status,2,c
 16107  001BB8  D003               	goto	i2l6644
 16108                           
 16109                           ;doprnt.c: 1148: width--;
 16110  001BBA  0669               	decf	i2printf@width,f,c
 16111  001BBC  A0D8               	btfss	status,0,c
 16112  001BBE  066A               	decf	i2printf@width+1,f,c
 16113  001BC0                     i2l6644:
 16114                           
 16115                           ;doprnt.c: 1149: if(flag & 0x03)
 16116  001BC0  0E03               	movlw	3
 16117  001BC2  1464               	andwf	i2printf@flag,w,c
 16118  001BC4  6E48               	movwf	??i2_printf& (0+255),c
 16119  001BC6  0E00               	movlw	0
 16120  001BC8  1465               	andwf	i2printf@flag+1,w,c
 16121  001BCA  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16122  001BCC  5048               	movf	??i2_printf,w,c
 16123  001BCE  1049               	iorwf	??i2_printf+1,w,c
 16124  001BD0  B4D8               	btfsc	status,2,c
 16125  001BD2  D003               	goto	i2l6648
 16126                           
 16127                           ;doprnt.c: 1150: width--;
 16128  001BD4  0669               	decf	i2printf@width,f,c
 16129  001BD6  A0D8               	btfss	status,0,c
 16130  001BD8  066A               	decf	i2printf@width+1,f,c
 16131  001BDA                     i2l6648:
 16132                           
 16133                           ;doprnt.c: 1153: if(flag & 0x04) {
 16134  001BDA  A464               	btfss	i2printf@flag,2,c
 16135  001BDC  D022               	goto	i2l6664
 16136                           
 16137                           ;doprnt.c: 1157: if(flag & 0x03)
 16138  001BDE  0E03               	movlw	3
 16139  001BE0  1464               	andwf	i2printf@flag,w,c
 16140  001BE2  6E48               	movwf	??i2_printf& (0+255),c
 16141  001BE4  0E00               	movlw	0
 16142  001BE6  1465               	andwf	i2printf@flag+1,w,c
 16143  001BE8  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16144  001BEA  5048               	movf	??i2_printf,w,c
 16145  001BEC  1049               	iorwf	??i2_printf+1,w,c
 16146  001BEE  B4D8               	btfsc	status,2,c
 16147  001BF0  D00A               	goto	i2l6658
 16148                           
 16149                           ;doprnt.c: 1159: (putch('-') );
 16150  001BF2  0E2D               	movlw	45
 16151  001BF4  ECFB  F02E         	call	i2_putch
 16152                           
 16153                           ;doprnt.c: 1168: while(width > 0) {
 16154  001BF8  D006               	goto	i2l6658
 16155  001BFA                     i2l6654:
 16156                           
 16157                           ;doprnt.c: 1169: (putch('0') );
 16158  001BFA  0E30               	movlw	48
 16159  001BFC  ECFB  F02E         	call	i2_putch
 16160                           
 16161                           ;doprnt.c: 1170: width--;
 16162  001C00  0669               	decf	i2printf@width,f,c
 16163  001C02  A0D8               	btfss	status,0,c
 16164  001C04  066A               	decf	i2printf@width+1,f,c
 16165  001C06                     i2l6658:
 16166  001C06  BE6A               	btfsc	i2printf@width+1,7,c
 16167  001C08  D065               	goto	i2l6676
 16168  001C0A  506A               	movf	i2printf@width+1,w,c
 16169  001C0C  E1F6               	bnz	i2l6654
 16170  001C0E  0469               	decf	i2printf@width,w,c
 16171  001C10  A0D8               	btfss	status,0,c
 16172  001C12  D060               	goto	i2l6676
 16173  001C14  D7F2               	goto	i2l6654
 16174  001C16                     i2l6660:
 16175                           
 16176                           ;doprnt.c: 1181: (putch(' ') );
 16177  001C16  0E20               	movlw	32
 16178  001C18  ECFB  F02E         	call	i2_putch
 16179                           
 16180                           ;doprnt.c: 1182: width--;
 16181  001C1C  0669               	decf	i2printf@width,f,c
 16182  001C1E  A0D8               	btfss	status,0,c
 16183  001C20  066A               	decf	i2printf@width+1,f,c
 16184  001C22                     i2l6664:
 16185  001C22  BE6A               	btfsc	i2printf@width+1,7,c
 16186  001C24  D005               	goto	i2l6666
 16187  001C26  506A               	movf	i2printf@width+1,w,c
 16188  001C28  E1F6               	bnz	i2l6660
 16189  001C2A  0469               	decf	i2printf@width,w,c
 16190  001C2C  B0D8               	btfsc	status,0,c
 16191  001C2E  D7F3               	goto	i2l6660
 16192  001C30                     i2l6666:
 16193                           
 16194                           ;doprnt.c: 1183: }
 16195                           ;doprnt.c: 1188: if(flag & 0x03)
 16196  001C30  0E03               	movlw	3
 16197  001C32  1464               	andwf	i2printf@flag,w,c
 16198  001C34  6E48               	movwf	??i2_printf& (0+255),c
 16199  001C36  0E00               	movlw	0
 16200  001C38  1465               	andwf	i2printf@flag+1,w,c
 16201  001C3A  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16202  001C3C  5048               	movf	??i2_printf,w,c
 16203  001C3E  1049               	iorwf	??i2_printf+1,w,c
 16204  001C40  B4D8               	btfsc	status,2,c
 16205  001C42  D048               	goto	i2l6676
 16206                           
 16207                           ;doprnt.c: 1190: (putch('-') );
 16208  001C44  0E2D               	movlw	45
 16209  001C46  ECFB  F02E         	call	i2_putch
 16210                           
 16211                           ;doprnt.c: 1195: }
 16212                           ;doprnt.c: 1196: while(c--) {
 16213  001C4A  D044               	goto	i2l6676
 16214  001C4C                     i2l6670:
 16215                           
 16216                           ;doprnt.c: 1200: {
 16217                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 16218  001C4C  C060  F001         	movff	i2printf@val,i2___lldiv@dividend
 16219  001C50  C061  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 16220  001C54  C062  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 16221  001C58  C063  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 16222  001C5C  506B               	movf	i2printf@c,w,c
 16223  001C5E  0D04               	mullw	4
 16224  001C60  0E7D               	movlw	low _dpowers
 16225  001C62  24F3               	addwf	prodl,w,c
 16226  001C64  6EF6               	movwf	tblptrl,c
 16227  001C66  0EFE               	movlw	high _dpowers
 16228  001C68  20F4               	addwfc	prodh,w,c
 16229  001C6A  6EF7               	movwf	tblptrh,c
 16230  001C6C                     	if	0	;There are less than 3 active tblptr bytes
 16231  001C6C                     	endif
 16232  001C6C  0009               	tblrd		*+
 16233  001C6E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16234  001C72  0009               	tblrd		*+
 16235  001C74  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16236  001C78  0009               	tblrd		*+
 16237  001C7A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16238  001C7E  000A               	tblrd		*-
 16239  001C80  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16240  001C84  EC08  F02A         	call	i2___lldiv	;wreg free
 16241  001C88  C001  F05A         	movff	?i2___lldiv,i2printf@tmpval
 16242  001C8C  C002  F05B         	movff	?i2___lldiv+1,i2printf@tmpval+1
 16243  001C90  C003  F05C         	movff	?i2___lldiv+2,i2printf@tmpval+2
 16244  001C94  C004  F05D         	movff	?i2___lldiv+3,i2printf@tmpval+3
 16245                           
 16246                           ;doprnt.c: 1202: tmpval.vd %= 10;
 16247  001C98  C05A  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 16248  001C9C  C05B  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 16249  001CA0  C05C  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 16250  001CA4  C05D  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 16251  001CA8  0E0A               	movlw	10
 16252  001CAA  6E12               	movwf	i2___llmod@divisor,c
 16253  001CAC  0E00               	movlw	0
 16254  001CAE  6E13               	movwf	i2___llmod@divisor+1,c
 16255  001CB0  0E00               	movlw	0
 16256  001CB2  6E14               	movwf	i2___llmod@divisor+2,c
 16257  001CB4  0E00               	movlw	0
 16258  001CB6  6E15               	movwf	i2___llmod@divisor+3,c
 16259  001CB8  ECF3  F02A         	call	i2___llmod	;wreg free
 16260  001CBC  C00E  F05A         	movff	?i2___llmod,i2printf@tmpval
 16261  001CC0  C00F  F05B         	movff	?i2___llmod+1,i2printf@tmpval+1
 16262  001CC4  C010  F05C         	movff	?i2___llmod+2,i2printf@tmpval+2
 16263  001CC8  C011  F05D         	movff	?i2___llmod+3,i2printf@tmpval+3
 16264                           
 16265                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 16266  001CCC  505A               	movf	i2printf@tmpval,w,c
 16267  001CCE  0F30               	addlw	48
 16268  001CD0  ECFB  F02E         	call	i2_putch
 16269  001CD4                     i2l6676:
 16270  001CD4  066B               	decf	i2printf@c,f,c
 16271  001CD6  286B               	incf	i2printf@c,w,c
 16272  001CD8  B4D8               	btfsc	status,2,c
 16273  001CDA  D007               	goto	i2l6682
 16274  001CDC  D7B7               	goto	i2l6670
 16275  001CDE                     i2l6678:
 16276                           
 16277                           ;doprnt.c: 1208: (putch('0') );
 16278  001CDE  0E30               	movlw	48
 16279  001CE0  ECFB  F02E         	call	i2_putch
 16280                           
 16281                           ;doprnt.c: 1209: exp--;
 16282  001CE4  065E               	decf	i2printf@exp,f,c
 16283  001CE6  A0D8               	btfss	status,0,c
 16284  001CE8  065F               	decf	i2printf@exp+1,f,c
 16285  001CEA                     i2l6682:
 16286  001CEA  BE5F               	btfsc	i2printf@exp+1,7,c
 16287  001CEC  D005               	goto	i2l6684
 16288  001CEE  505F               	movf	i2printf@exp+1,w,c
 16289  001CF0  E1F6               	bnz	i2l6678
 16290  001CF2  045E               	decf	i2printf@exp,w,c
 16291  001CF4  B0D8               	btfsc	status,0,c
 16292  001CF6  D7F3               	goto	i2l6678
 16293  001CF8                     i2l6684:
 16294                           
 16295                           ;doprnt.c: 1210: }
 16296                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 16297  001CF8  BE59               	btfsc	i2printf@prec+1,7,c
 16298  001CFA  D009               	goto	i2l634
 16299  001CFC  5059               	movf	i2printf@prec+1,w,c
 16300  001CFE  E104               	bnz	i2u843_40
 16301  001D00  0E09               	movlw	9
 16302  001D02  5C58               	subwf	i2printf@prec,w,c
 16303  001D04  A0D8               	btfss	status,0,c
 16304  001D06  D003               	goto	i2l634
 16305  001D08                     i2u843_40:
 16306                           
 16307                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 16308  001D08  0E08               	movlw	8
 16309  001D0A  6E6B               	movwf	i2printf@c,c
 16310  001D0C  D002               	goto	i2l6688
 16311  001D0E                     i2l634:
 16312                           
 16313                           ;doprnt.c: 1213: else
 16314                           ;doprnt.c: 1214: c = prec;
 16315  001D0E  C058  F06B         	movff	i2printf@prec,i2printf@c
 16316  001D12                     i2l6688:
 16317                           
 16318                           ;doprnt.c: 1215: prec -= c;
 16319  001D12  506B               	movf	i2printf@c,w,c
 16320  001D14  5E58               	subwf	i2printf@prec,f,c
 16321  001D16  0E00               	movlw	0
 16322  001D18  BE6B               	btfsc	i2printf@c,7,c
 16323  001D1A  0EFF               	movlw	255
 16324  001D1C  5A59               	subwfb	i2printf@prec+1,f,c
 16325                           
 16326                           ;doprnt.c: 1219: if(c)
 16327  001D1E  506B               	movf	i2printf@c,w,c
 16328  001D20  B4D8               	btfsc	status,2,c
 16329  001D22  D003               	goto	i2l6694
 16330                           
 16331                           ;doprnt.c: 1221: (putch('.') );
 16332  001D24  0E2E               	movlw	46
 16333  001D26  ECFB  F02E         	call	i2_putch
 16334  001D2A                     i2l6694:
 16335                           
 16336                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16337  001D2A  506B               	movf	i2printf@c,w,c
 16338  001D2C  ECEA  F017         	call	i2_scale
 16339  001D30  C024  F04E         	movff	?i2_scale,i2_printf$1728
 16340  001D34  C025  F04F         	movff	?i2_scale+1,i2_printf$1728+1
 16341  001D38  C026  F050         	movff	?i2_scale+2,i2_printf$1728+2
 16342                           
 16343                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 16344  001D3C  C066  F018         	movff	i2printf@fval,i2___ftmul@f2
 16345  001D40  C067  F019         	movff	i2printf@fval+1,i2___ftmul@f2+1
 16346  001D44  C068  F01A         	movff	i2printf@fval+2,i2___ftmul@f2+2
 16347  001D48  C04E  F015         	movff	i2_printf$1728,i2___ftmul@f1
 16348  001D4C  C04F  F016         	movff	i2_printf$1728+1,i2___ftmul@f1+1
 16349  001D50  C050  F017         	movff	i2_printf$1728+2,i2___ftmul@f1+2
 16350  001D54  EC3B  F025         	call	i2___ftmul	;wreg free
 16351  001D58  C015  F024         	movff	?i2___ftmul,i2___fttol@f1
 16352  001D5C  C016  F025         	movff	?i2___ftmul+1,i2___fttol@f1+1
 16353  001D60  C017  F026         	movff	?i2___ftmul+2,i2___fttol@f1+2
 16354  001D64  ECB5  F025         	call	i2___fttol	;wreg free
 16355  001D68  C024  F060         	movff	?i2___fttol,i2printf@val
 16356  001D6C  C025  F061         	movff	?i2___fttol+1,i2printf@val+1
 16357  001D70  C026  F062         	movff	?i2___fttol+2,i2printf@val+2
 16358  001D74  C027  F063         	movff	?i2___fttol+3,i2printf@val+3
 16359                           
 16360                           ;doprnt.c: 1228: while(c--) {
 16361  001D78  D06A               	goto	i2l6704
 16362  001D7A                     i2l6698:
 16363                           
 16364                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 16365  001D7A  C060  F001         	movff	i2printf@val,i2___lldiv@dividend
 16366  001D7E  C061  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 16367  001D82  C062  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 16368  001D86  C063  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 16369  001D8A  506B               	movf	i2printf@c,w,c
 16370  001D8C  0D04               	mullw	4
 16371  001D8E  0E7D               	movlw	low _dpowers
 16372  001D90  24F3               	addwf	prodl,w,c
 16373  001D92  6EF6               	movwf	tblptrl,c
 16374  001D94  0EFE               	movlw	high _dpowers
 16375  001D96  20F4               	addwfc	prodh,w,c
 16376  001D98  6EF7               	movwf	tblptrh,c
 16377  001D9A                     	if	0	;There are less than 3 active tblptr bytes
 16378  001D9A                     	endif
 16379  001D9A  0009               	tblrd		*+
 16380  001D9C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16381  001DA0  0009               	tblrd		*+
 16382  001DA2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16383  001DA6  0009               	tblrd		*+
 16384  001DA8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16385  001DAC  000A               	tblrd		*-
 16386  001DAE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16387  001DB2  EC08  F02A         	call	i2___lldiv	;wreg free
 16388  001DB6  C001  F05A         	movff	?i2___lldiv,i2printf@tmpval
 16389  001DBA  C002  F05B         	movff	?i2___lldiv+1,i2printf@tmpval+1
 16390  001DBE  C003  F05C         	movff	?i2___lldiv+2,i2printf@tmpval+2
 16391  001DC2  C004  F05D         	movff	?i2___lldiv+3,i2printf@tmpval+3
 16392                           
 16393                           ;doprnt.c: 1230: tmpval.vd %= 10;
 16394  001DC6  C05A  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 16395  001DCA  C05B  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 16396  001DCE  C05C  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 16397  001DD2  C05D  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 16398  001DD6  0E0A               	movlw	10
 16399  001DD8  6E12               	movwf	i2___llmod@divisor,c
 16400  001DDA  0E00               	movlw	0
 16401  001DDC  6E13               	movwf	i2___llmod@divisor+1,c
 16402  001DDE  0E00               	movlw	0
 16403  001DE0  6E14               	movwf	i2___llmod@divisor+2,c
 16404  001DE2  0E00               	movlw	0
 16405  001DE4  6E15               	movwf	i2___llmod@divisor+3,c
 16406  001DE6  ECF3  F02A         	call	i2___llmod	;wreg free
 16407  001DEA  C00E  F05A         	movff	?i2___llmod,i2printf@tmpval
 16408  001DEE  C00F  F05B         	movff	?i2___llmod+1,i2printf@tmpval+1
 16409  001DF2  C010  F05C         	movff	?i2___llmod+2,i2printf@tmpval+2
 16410  001DF6  C011  F05D         	movff	?i2___llmod+3,i2printf@tmpval+3
 16411                           
 16412                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 16413  001DFA  505A               	movf	i2printf@tmpval,w,c
 16414  001DFC  0F30               	addlw	48
 16415  001DFE  ECFB  F02E         	call	i2_putch
 16416                           
 16417                           ;doprnt.c: 1232: val %= dpowers[c];
 16418  001E02  C060  F00E         	movff	i2printf@val,i2___llmod@dividend
 16419  001E06  C061  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 16420  001E0A  C062  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 16421  001E0E  C063  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 16422  001E12  506B               	movf	i2printf@c,w,c
 16423  001E14  0D04               	mullw	4
 16424  001E16  0E7D               	movlw	low _dpowers
 16425  001E18  24F3               	addwf	prodl,w,c
 16426  001E1A  6EF6               	movwf	tblptrl,c
 16427  001E1C  0EFE               	movlw	high _dpowers
 16428  001E1E  20F4               	addwfc	prodh,w,c
 16429  001E20  6EF7               	movwf	tblptrh,c
 16430  001E22                     	if	0	;There are less than 3 active tblptr bytes
 16431  001E22                     	endif
 16432  001E22  0009               	tblrd		*+
 16433  001E24  CFF5 F012          	movff	tablat,i2___llmod@divisor
 16434  001E28  0009               	tblrd		*+
 16435  001E2A  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 16436  001E2E  0009               	tblrd		*+
 16437  001E30  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 16438  001E34  000A               	tblrd		*-
 16439  001E36  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 16440  001E3A  ECF3  F02A         	call	i2___llmod	;wreg free
 16441  001E3E  C00E  F060         	movff	?i2___llmod,i2printf@val
 16442  001E42  C00F  F061         	movff	?i2___llmod+1,i2printf@val+1
 16443  001E46  C010  F062         	movff	?i2___llmod+2,i2printf@val+2
 16444  001E4A  C011  F063         	movff	?i2___llmod+3,i2printf@val+3
 16445  001E4E                     i2l6704:
 16446  001E4E  066B               	decf	i2printf@c,f,c
 16447  001E50  286B               	incf	i2printf@c,w,c
 16448  001E52  B4D8               	btfsc	status,2,c
 16449  001E54  D007               	goto	i2l6710
 16450  001E56  D791               	goto	i2l6698
 16451  001E58                     i2l6706:
 16452                           
 16453                           ;doprnt.c: 1236: (putch('0') );
 16454  001E58  0E30               	movlw	48
 16455  001E5A  ECFB  F02E         	call	i2_putch
 16456                           
 16457                           ;doprnt.c: 1237: prec--;
 16458  001E5E  0658               	decf	i2printf@prec,f,c
 16459  001E60  A0D8               	btfss	status,0,c
 16460  001E62  0659               	decf	i2printf@prec+1,f,c
 16461  001E64                     i2l6710:
 16462  001E64  5058               	movf	i2printf@prec,w,c
 16463  001E66  1059               	iorwf	i2printf@prec+1,w,c
 16464  001E68  B4D8               	btfsc	status,2,c
 16465  001E6A  D15E               	goto	i2l6808
 16466  001E6C  D7F5               	goto	i2l6706
 16467  001E6E                     i2l595:
 16468                           
 16469                           ;doprnt.c: 1246: }
 16470                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 16471  001E6E  BE64               	btfsc	i2printf@flag,7,c
 16472  001E70  D01E               	goto	i2l6722
 16473                           
 16474                           ;doprnt.c: 1253: {
 16475                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 16476  001E72  C056  FFD9         	movff	i2printf@ap,fsr2l
 16477  001E76  C057  FFDA         	movff	i2printf@ap+1,fsr2h
 16478  001E7A  CFDE F060          	movff	postinc2,i2printf@val
 16479  001E7E  CFDD F061          	movff	postdec2,i2printf@val+1
 16480  001E82  0E00               	movlw	0
 16481  001E84  BE61               	btfsc	i2printf@val+1,7,c
 16482  001E86  0EFF               	movlw	-1
 16483  001E88  6E62               	movwf	i2printf@val+2,c
 16484  001E8A  6E63               	movwf	i2printf@val+3,c
 16485  001E8C  0E02               	movlw	2
 16486  001E8E  2656               	addwf	i2printf@ap,f,c
 16487  001E90  0E00               	movlw	0
 16488  001E92  2257               	addwfc	i2printf@ap+1,f,c
 16489                           
 16490                           ;doprnt.c: 1261: if((long)val < 0) {
 16491  001E94  AE63               	btfss	i2printf@val+3,7,c
 16492  001E96  D05A               	goto	i2l6756
 16493                           
 16494                           ;doprnt.c: 1262: flag |= 0x03;
 16495  001E98  0E03               	movlw	3
 16496  001E9A  1264               	iorwf	i2printf@flag,f,c
 16497                           
 16498                           ;doprnt.c: 1263: val = -val;
 16499  001E9C  1E63               	comf	i2printf@val+3,f,c
 16500  001E9E  1E62               	comf	i2printf@val+2,f,c
 16501  001EA0  1E61               	comf	i2printf@val+1,f,c
 16502  001EA2  6C60               	negf	i2printf@val,c
 16503  001EA4  0E00               	movlw	0
 16504  001EA6  2261               	addwfc	i2printf@val+1,f,c
 16505  001EA8  2262               	addwfc	i2printf@val+2,f,c
 16506  001EAA  2263               	addwfc	i2printf@val+3,f,c
 16507                           
 16508                           ;doprnt.c: 1264: }
 16509                           ;doprnt.c: 1266: }
 16510  001EAC  D04F               	goto	i2l6756
 16511  001EAE                     i2l6722:
 16512                           
 16513                           ;doprnt.c: 1268: else
 16514                           ;doprnt.c: 1273: {
 16515                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16516  001EAE  C056  FFD9         	movff	i2printf@ap,fsr2l
 16517  001EB2  C057  FFDA         	movff	i2printf@ap+1,fsr2h
 16518  001EB6  CFDE F048          	movff	postinc2,??i2_printf
 16519  001EBA  CFDD F049          	movff	postdec2,??i2_printf+1
 16520  001EBE  C048  F060         	movff	??i2_printf,i2printf@val
 16521  001EC2  C049  F061         	movff	??i2_printf+1,i2printf@val+1
 16522  001EC6  6A62               	clrf	i2printf@val+2,c
 16523  001EC8  6A63               	clrf	i2printf@val+3,c
 16524  001ECA  0E02               	movlw	2
 16525  001ECC  2656               	addwf	i2printf@ap,f,c
 16526  001ECE  0E00               	movlw	0
 16527  001ED0  2257               	addwfc	i2printf@ap+1,f,c
 16528                           
 16529                           ;doprnt.c: 1287: }
 16530                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
 16531  001ED2  D03C               	goto	i2l6756
 16532  001ED4                     i2l6726:
 16533                           
 16534                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16535  001ED4  0E01               	movlw	1
 16536  001ED6  6E6B               	movwf	i2printf@c,c
 16537  001ED8                     i2l6728:
 16538  001ED8  0E0A               	movlw	10
 16539  001EDA  186B               	xorwf	i2printf@c,w,c
 16540  001EDC  B4D8               	btfsc	status,2,c
 16541  001EDE  D03E               	goto	i2l6758
 16542                           
 16543                           ;doprnt.c: 1306: if(val < dpowers[c])
 16544  001EE0  506B               	movf	i2printf@c,w,c
 16545  001EE2  0D04               	mullw	4
 16546  001EE4  0E7D               	movlw	low _dpowers
 16547  001EE6  24F3               	addwf	prodl,w,c
 16548  001EE8  6EF6               	movwf	tblptrl,c
 16549  001EEA  0EFE               	movlw	high _dpowers
 16550  001EEC  20F4               	addwfc	prodh,w,c
 16551  001EEE  6EF7               	movwf	tblptrh,c
 16552  001EF0                     	if	0	;There are less than 3 active tblptr bytes
 16553  001EF0                     	endif
 16554  001EF0  0009               	tblrd		*+
 16555  001EF2  50F5               	movf	tablat,w,c
 16556  001EF4  5C60               	subwf	i2printf@val,w,c
 16557  001EF6  0009               	tblrd		*+
 16558  001EF8  50F5               	movf	tablat,w,c
 16559  001EFA  5861               	subwfb	i2printf@val+1,w,c
 16560  001EFC  0009               	tblrd		*+
 16561  001EFE  50F5               	movf	tablat,w,c
 16562  001F00  5862               	subwfb	i2printf@val+2,w,c
 16563  001F02  0009               	tblrd		*+
 16564  001F04  50F5               	movf	tablat,w,c
 16565  001F06  5863               	subwfb	i2printf@val+3,w,c
 16566  001F08  A0D8               	btfss	status,0,c
 16567  001F0A  D028               	goto	i2l6758
 16568                           
 16569                           ;doprnt.c: 1307: break;
 16570  001F0C  2A6B               	incf	i2printf@c,f,c
 16571  001F0E  D7E4               	goto	i2l6728
 16572  001F10                     i2l6740:
 16573                           
 16574                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16575  001F10  0E01               	movlw	1
 16576  001F12  6E6B               	movwf	i2printf@c,c
 16577  001F14                     i2l6742:
 16578  001F14  0E08               	movlw	8
 16579  001F16  186B               	xorwf	i2printf@c,w,c
 16580  001F18  B4D8               	btfsc	status,2,c
 16581  001F1A  D020               	goto	i2l6758
 16582                           
 16583                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16584  001F1C  506B               	movf	i2printf@c,w,c
 16585  001F1E  0D04               	mullw	4
 16586  001F20  0EF3               	movlw	low _hexpowers
 16587  001F22  24F3               	addwf	prodl,w,c
 16588  001F24  6EF6               	movwf	tblptrl,c
 16589  001F26  0EFE               	movlw	high _hexpowers
 16590  001F28  20F4               	addwfc	prodh,w,c
 16591  001F2A  6EF7               	movwf	tblptrh,c
 16592  001F2C                     	if	0	;There are less than 3 active tblptr bytes
 16593  001F2C                     	endif
 16594  001F2C  0009               	tblrd		*+
 16595  001F2E  50F5               	movf	tablat,w,c
 16596  001F30  5C60               	subwf	i2printf@val,w,c
 16597  001F32  0009               	tblrd		*+
 16598  001F34  50F5               	movf	tablat,w,c
 16599  001F36  5861               	subwfb	i2printf@val+1,w,c
 16600  001F38  0009               	tblrd		*+
 16601  001F3A  50F5               	movf	tablat,w,c
 16602  001F3C  5862               	subwfb	i2printf@val+2,w,c
 16603  001F3E  0009               	tblrd		*+
 16604  001F40  50F5               	movf	tablat,w,c
 16605  001F42  5863               	subwfb	i2printf@val+3,w,c
 16606  001F44  A0D8               	btfss	status,0,c
 16607  001F46  D00A               	goto	i2l6758
 16608                           
 16609                           ;doprnt.c: 1318: break;
 16610  001F48  2A6B               	incf	i2printf@c,f,c
 16611  001F4A  D7E4               	goto	i2l6742
 16612  001F4C                     i2l6756:
 16613  001F4C  5064               	movf	i2printf@flag,w,c
 16614  001F4E  0B80               	andlw	128
 16615                           
 16616                           ; Switch size 1, requested type "space"
 16617                           ; Number of cases is 2, Range of values is 0 to 128
 16618                           ; switch strategies available:
 16619                           ; Name         Instructions Cycles
 16620                           ; simple_byte            7     4 (average)
 16621                           ;	Chosen strategy is simple_byte
 16622  001F50  0A00               	xorlw	0	; case 0
 16623  001F52  B4D8               	btfsc	status,2,c
 16624  001F54  D7BF               	goto	i2l6726
 16625  001F56  0A80               	xorlw	128	; case 128
 16626  001F58  B4D8               	btfsc	status,2,c
 16627  001F5A  D7DA               	goto	i2l6740
 16628  001F5C                     i2l6758:
 16629                           
 16630                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16631  001F5C  5069               	movf	i2printf@width,w,c
 16632  001F5E  106A               	iorwf	i2printf@width+1,w,c
 16633  001F60  B4D8               	btfsc	status,2,c
 16634  001F62  D00D               	goto	i2l6764
 16635  001F64  0E03               	movlw	3
 16636  001F66  1464               	andwf	i2printf@flag,w,c
 16637  001F68  6E48               	movwf	??i2_printf& (0+255),c
 16638  001F6A  0E00               	movlw	0
 16639  001F6C  1465               	andwf	i2printf@flag+1,w,c
 16640  001F6E  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16641  001F70  5048               	movf	??i2_printf,w,c
 16642  001F72  1049               	iorwf	??i2_printf+1,w,c
 16643  001F74  B4D8               	btfsc	status,2,c
 16644  001F76  D003               	goto	i2l6764
 16645                           
 16646                           ;doprnt.c: 1346: width--;
 16647  001F78  0669               	decf	i2printf@width,f,c
 16648  001F7A  A0D8               	btfss	status,0,c
 16649  001F7C  066A               	decf	i2printf@width+1,f,c
 16650  001F7E                     i2l6764:
 16651                           
 16652                           ;doprnt.c: 1381: if(width > c)
 16653  001F7E  0E80               	movlw	128
 16654  001F80  BE6B               	btfsc	i2printf@c,7,c
 16655  001F82  0E7F               	movlw	127
 16656  001F84  6E48               	movwf	??i2_printf& (0+255),c
 16657  001F86  5069               	movf	i2printf@width,w,c
 16658  001F88  5C6B               	subwf	i2printf@c,w,c
 16659  001F8A  506A               	movf	i2printf@width+1,w,c
 16660  001F8C  0A80               	xorlw	128
 16661  001F8E  5848               	subwfb	??i2_printf& (0+255),w,c
 16662  001F90  B0D8               	btfsc	status,0,c
 16663  001F92  D007               	goto	i2l6768
 16664                           
 16665                           ;doprnt.c: 1382: width -= c;
 16666  001F94  506B               	movf	i2printf@c,w,c
 16667  001F96  5E69               	subwf	i2printf@width,f,c
 16668  001F98  0E00               	movlw	0
 16669  001F9A  BE6B               	btfsc	i2printf@c,7,c
 16670  001F9C  0EFF               	movlw	255
 16671  001F9E  5A6A               	subwfb	i2printf@width+1,f,c
 16672  001FA0  D004               	goto	i2l6770
 16673  001FA2                     i2l6768:
 16674                           
 16675                           ;doprnt.c: 1383: else
 16676                           ;doprnt.c: 1384: width = 0;
 16677  001FA2  0E00               	movlw	0
 16678  001FA4  6E6A               	movwf	i2printf@width+1,c
 16679  001FA6  0E00               	movlw	0
 16680  001FA8  6E69               	movwf	i2printf@width,c
 16681  001FAA                     i2l6770:
 16682                           
 16683                           ;doprnt.c: 1387: if(flag & 0x04) {
 16684  001FAA  A464               	btfss	i2printf@flag,2,c
 16685  001FAC  D018               	goto	i2l6782
 16686                           
 16687                           ;doprnt.c: 1392: if(flag & 0x03)
 16688  001FAE  0E03               	movlw	3
 16689  001FB0  1464               	andwf	i2printf@flag,w,c
 16690  001FB2  6E48               	movwf	??i2_printf& (0+255),c
 16691  001FB4  0E00               	movlw	0
 16692  001FB6  1465               	andwf	i2printf@flag+1,w,c
 16693  001FB8  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16694  001FBA  5048               	movf	??i2_printf,w,c
 16695  001FBC  1049               	iorwf	??i2_printf+1,w,c
 16696  001FBE  B4D8               	btfsc	status,2,c
 16697  001FC0  D003               	goto	i2l6776
 16698                           
 16699                           ;doprnt.c: 1393: (putch('-') );
 16700  001FC2  0E2D               	movlw	45
 16701  001FC4  ECFB  F02E         	call	i2_putch
 16702  001FC8                     i2l6776:
 16703                           
 16704                           ;doprnt.c: 1415: if(width)
 16705  001FC8  5069               	movf	i2printf@width,w,c
 16706  001FCA  106A               	iorwf	i2printf@width+1,w,c
 16707  001FCC  B4D8               	btfsc	status,2,c
 16708  001FCE  D022               	goto	i2l6792
 16709                           
 16710                           ;doprnt.c: 1417: (putch('0') );
 16711                           
 16712                           ;doprnt.c: 1416: do
 16713  001FD0  0E30               	movlw	48
 16714  001FD2  ECFB  F02E         	call	i2_putch
 16715                           
 16716                           ;doprnt.c: 1418: while(--width);
 16717  001FD6  0669               	decf	i2printf@width,f,c
 16718  001FD8  A0D8               	btfss	status,0,c
 16719  001FDA  066A               	decf	i2printf@width+1,f,c
 16720  001FDC  D7F5               	goto	i2l6776
 16721  001FDE                     i2l6782:
 16722                           
 16723                           ;doprnt.c: 1422: {
 16724                           ;doprnt.c: 1424: if(width
 16725                           ;doprnt.c: 1428: )
 16726  001FDE  5069               	movf	i2printf@width,w,c
 16727  001FE0  106A               	iorwf	i2printf@width+1,w,c
 16728  001FE2  B4D8               	btfsc	status,2,c
 16729  001FE4  D00A               	goto	i2l6788
 16730  001FE6                     i2l6784:
 16731                           
 16732                           ;doprnt.c: 1430: (putch(' ') );
 16733  001FE6  0E20               	movlw	32
 16734  001FE8  ECFB  F02E         	call	i2_putch
 16735                           
 16736                           ;doprnt.c: 1431: while(--width);
 16737  001FEC  0669               	decf	i2printf@width,f,c
 16738  001FEE  A0D8               	btfss	status,0,c
 16739  001FF0  066A               	decf	i2printf@width+1,f,c
 16740  001FF2  5069               	movf	i2printf@width,w,c
 16741  001FF4  106A               	iorwf	i2printf@width+1,w,c
 16742  001FF6  A4D8               	btfss	status,2,c
 16743  001FF8  D7F6               	goto	i2l6784
 16744  001FFA                     i2l6788:
 16745                           
 16746                           ;doprnt.c: 1438: if(flag & 0x03)
 16747  001FFA  0E03               	movlw	3
 16748  001FFC  1464               	andwf	i2printf@flag,w,c
 16749  001FFE  6E48               	movwf	??i2_printf& (0+255),c
 16750  002000  0E00               	movlw	0
 16751  002002  1465               	andwf	i2printf@flag+1,w,c
 16752  002004  6E49               	movwf	(??i2_printf+1)& (0+255),c
 16753  002006  5048               	movf	??i2_printf,w,c
 16754  002008  1049               	iorwf	??i2_printf+1,w,c
 16755  00200A  B4D8               	btfsc	status,2,c
 16756  00200C  D003               	goto	i2l6792
 16757                           
 16758                           ;doprnt.c: 1439: (putch('-') );
 16759  00200E  0E2D               	movlw	45
 16760  002010  ECFB  F02E         	call	i2_putch
 16761  002014                     i2l6792:
 16762                           
 16763                           ;doprnt.c: 1469: }
 16764                           ;doprnt.c: 1472: prec = c;
 16765  002014  506B               	movf	i2printf@c,w,c
 16766  002016  6E58               	movwf	i2printf@prec,c
 16767  002018  6A59               	clrf	i2printf@prec+1,c
 16768  00201A  BE58               	btfsc	i2printf@prec,7,c
 16769  00201C  0659               	decf	i2printf@prec+1,f,c
 16770                           
 16771                           ;doprnt.c: 1474: while(prec--) {
 16772  00201E  D07C               	goto	i2l6806
 16773  002020                     i2l6794:
 16774                           
 16775                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16776  002020  C058  F048         	movff	i2printf@prec,??i2_printf
 16777  002024  C059  F049         	movff	i2printf@prec+1,??i2_printf+1
 16778  002028  90D8               	bcf	status,0,c
 16779  00202A  3648               	rlcf	??i2_printf,f,c
 16780  00202C  3649               	rlcf	??i2_printf+1,f,c
 16781  00202E  90D8               	bcf	status,0,c
 16782  002030  3648               	rlcf	??i2_printf,f,c
 16783  002032  3649               	rlcf	??i2_printf+1,f,c
 16784  002034  0E7D               	movlw	low _dpowers
 16785  002036  2448               	addwf	??i2_printf,w,c
 16786  002038  6EF6               	movwf	tblptrl,c
 16787  00203A  0EFE               	movlw	high _dpowers
 16788  00203C  2049               	addwfc	??i2_printf+1,w,c
 16789  00203E  6EF7               	movwf	tblptrh,c
 16790  002040                     	if	0	;There are less than 3 active tblptr bytes
 16791  002040                     	endif
 16792  002040  0009               	tblrd		*+
 16793  002042  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16794  002046  0009               	tblrd		*+
 16795  002048  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16796  00204C  0009               	tblrd		*+
 16797  00204E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16798  002052  000A               	tblrd		*-
 16799  002054  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16800  002058  C060  F001         	movff	i2printf@val,i2___lldiv@dividend
 16801  00205C  C061  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 16802  002060  C062  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 16803  002064  C063  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 16804  002068  EC08  F02A         	call	i2___lldiv	;wreg free
 16805  00206C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 16806  002070  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 16807  002074  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 16808  002078  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 16809  00207C  0E0A               	movlw	10
 16810  00207E  6E12               	movwf	i2___llmod@divisor,c
 16811  002080  0E00               	movlw	0
 16812  002082  6E13               	movwf	i2___llmod@divisor+1,c
 16813  002084  0E00               	movlw	0
 16814  002086  6E14               	movwf	i2___llmod@divisor+2,c
 16815  002088  0E00               	movlw	0
 16816  00208A  6E15               	movwf	i2___llmod@divisor+3,c
 16817  00208C  ECF3  F02A         	call	i2___llmod	;wreg free
 16818  002090  500E               	movf	?i2___llmod,w,c
 16819  002092  0F30               	addlw	48
 16820  002094  6E6B               	movwf	i2printf@c,c
 16821                           
 16822                           ;doprnt.c: 1491: break;
 16823  002096  D03D               	goto	i2l6804
 16824  002098                     i2l6796:
 16825                           
 16826                           ;doprnt.c: 1499: {
 16827                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16828  002098  C060  F001         	movff	i2printf@val,i2___lldiv@dividend
 16829  00209C  C061  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 16830  0020A0  C062  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 16831  0020A4  C063  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 16832  0020A8  C058  F048         	movff	i2printf@prec,??i2_printf
 16833  0020AC  C059  F049         	movff	i2printf@prec+1,??i2_printf+1
 16834  0020B0  90D8               	bcf	status,0,c
 16835  0020B2  3648               	rlcf	??i2_printf,f,c
 16836  0020B4  3649               	rlcf	??i2_printf+1,f,c
 16837  0020B6  90D8               	bcf	status,0,c
 16838  0020B8  3648               	rlcf	??i2_printf,f,c
 16839  0020BA  3649               	rlcf	??i2_printf+1,f,c
 16840  0020BC  0EF3               	movlw	low _hexpowers
 16841  0020BE  2448               	addwf	??i2_printf,w,c
 16842  0020C0  6EF6               	movwf	tblptrl,c
 16843  0020C2  0EFE               	movlw	high _hexpowers
 16844  0020C4  2049               	addwfc	??i2_printf+1,w,c
 16845  0020C6  6EF7               	movwf	tblptrh,c
 16846  0020C8                     	if	0	;There are less than 3 active tblptr bytes
 16847  0020C8                     	endif
 16848  0020C8  0009               	tblrd		*+
 16849  0020CA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 16850  0020CE  0009               	tblrd		*+
 16851  0020D0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 16852  0020D4  0009               	tblrd		*+
 16853  0020D6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 16854  0020DA  000A               	tblrd		*-
 16855  0020DC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 16856  0020E0  EC08  F02A         	call	i2___lldiv	;wreg free
 16857  0020E4  5001               	movf	?i2___lldiv,w,c
 16858  0020E6  0B0F               	andlw	15
 16859  0020E8  6E51               	movwf	i2printf@idx,c
 16860                           
 16861                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 16862  0020EA  5051               	movf	i2printf@idx,w,c
 16863  0020EC  0D01               	mullw	1
 16864  0020EE  0E46               	movlw	low STR_23
 16865  0020F0  24F3               	addwf	prodl,w,c
 16866  0020F2  6EF6               	movwf	tblptrl,c
 16867  0020F4  0EFF               	movlw	high STR_23
 16868  0020F6  20F4               	addwfc	prodh,w,c
 16869  0020F8  6EF7               	movwf	tblptrh,c
 16870  0020FA                     	if	0	;There are less than 3 active tblptr bytes
 16871  0020FA                     	endif
 16872  0020FA  0008               	tblrd		*
 16873  0020FC  CFF5 F06B          	movff	tablat,i2printf@c
 16874                           
 16875                           ;doprnt.c: 1523: }
 16876                           
 16877                           ;doprnt.c: 1508: }
 16878                           ;doprnt.c: 1510: break;
 16879  002100  D008               	goto	i2l6804
 16880  002102                     i2l6802:
 16881  002102  5064               	movf	i2printf@flag,w,c
 16882  002104  0B80               	andlw	128
 16883                           
 16884                           ; Switch size 1, requested type "space"
 16885                           ; Number of cases is 2, Range of values is 0 to 128
 16886                           ; switch strategies available:
 16887                           ; Name         Instructions Cycles
 16888                           ; simple_byte            7     4 (average)
 16889                           ;	Chosen strategy is simple_byte
 16890  002106  0A00               	xorlw	0	; case 0
 16891  002108  B4D8               	btfsc	status,2,c
 16892  00210A  D78A               	goto	i2l6794
 16893  00210C  0A80               	xorlw	128	; case 128
 16894  00210E  B4D8               	btfsc	status,2,c
 16895  002110  D7C3               	goto	i2l6796
 16896  002112                     i2l6804:
 16897                           
 16898                           ;doprnt.c: 1524: (putch(c) );
 16899  002112  506B               	movf	i2printf@c,w,c
 16900  002114  ECFB  F02E         	call	i2_putch
 16901  002118                     i2l6806:
 16902  002118  0658               	decf	i2printf@prec,f,c
 16903  00211A  A0D8               	btfss	status,0,c
 16904  00211C  0659               	decf	i2printf@prec+1,f,c
 16905  00211E  2858               	incf	i2printf@prec,w,c
 16906  002120  E1F0               	bnz	i2l6802
 16907  002122  2859               	incf	i2printf@prec+1,w,c
 16908  002124  A4D8               	btfss	status,2,c
 16909  002126  D7ED               	goto	i2l6802
 16910  002128                     i2l6808:
 16911  002128  C040  FFF6         	movff	i2printf@f,tblptrl
 16912  00212C  C041  FFF7         	movff	i2printf@f+1,tblptrh
 16913  002130  4A40               	infsnz	i2printf@f,f,c
 16914  002132  2A41               	incf	i2printf@f+1,f,c
 16915  002134                     	if	0	;tblptru may be non-zero
 16916  002134                     	endif
 16917  002134                     	if	0	;tblptru may be non-zero
 16918  002134                     	endif
 16919  002134  0008               	tblrd		*
 16920  002136  CFF5 F06B          	movff	tablat,i2printf@c
 16921  00213A  506B               	movf	i2printf@c,w,c
 16922  00213C  B4D8               	btfsc	status,2,c
 16923  00213E  0012               	return	
 16924  002140  EF89  F00B         	goto	i2l6498
 16925  002144                     __end_ofi2_printf:
 16926                           	opt stack 0
 16927                           pclatu	equ	0xFFB
 16928                           pclath	equ	0xFFA
 16929                           tblptru	equ	0xFF8
 16930                           tblptrh	equ	0xFF7
 16931                           tblptrl	equ	0xFF6
 16932                           tablat	equ	0xFF5
 16933                           prodh	equ	0xFF4
 16934                           prodl	equ	0xFF3
 16935                           intcon	equ	0xFF2
 16936                           intcon3	equ	0xFF0
 16937                           postinc0	equ	0xFEE
 16938                           fsr0h	equ	0xFEA
 16939                           fsr0l	equ	0xFE9
 16940                           wreg	equ	0xFE8
 16941                           fsr1h	equ	0xFE2
 16942                           fsr1l	equ	0xFE1
 16943                           indf2	equ	0xFDF
 16944                           postinc2	equ	0xFDE
 16945                           postdec2	equ	0xFDD
 16946                           fsr2h	equ	0xFDA
 16947                           fsr2l	equ	0xFD9
 16948                           status	equ	0xFD8
 16949                           
 16950 ;; *************** function i2_scale *****************
 16951 ;; Defined at:
 16952 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;  scl             1    wreg     char 
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;  scl             1   41[COMRAM] char 
 16957 ;; Return value:  Size  Location     Type
 16958 ;;                  3   35[COMRAM] char 
 16959 ;; Registers used:
 16960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16961 ;; Tracked objects:
 16962 ;;		On entry : 0/0
 16963 ;;		On exit  : 0/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16966 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16969 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16970 ;;Total ram usage:        7 bytes
 16971 ;; Hardware stack levels used:    1
 16972 ;; Hardware stack levels required when called:    2
 16973 ;; This function calls:
 16974 ;;		i2___awdiv
 16975 ;;		i2___awmod
 16976 ;;		i2___ftmul
 16977 ;;		i2___wmul
 16978 ;; This function is called by:
 16979 ;;		i2_printf
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           	psect	text55
 16984  002FD4                     __ptext55:
 16985                           	opt stack 0
 16986  002FD4                     i2_scale:
 16987                           	opt stack 20
 16988                           
 16989                           ;incstack = 0
 16990                           ;i2scale@scl stored from wreg
 16991  002FD4  6E2A               	movwf	i2scale@scl,c
 16992                           
 16993                           ;doprnt.c: 428: if(scl < 0) {
 16994  002FD6  AE2A               	btfss	i2scale@scl,7,c
 16995  002FD8  D0FB               	goto	i2l5718
 16996                           
 16997                           ;doprnt.c: 429: scl = -scl;
 16998  002FDA  6C2A               	negf	i2scale@scl,c
 16999                           
 17000                           ;doprnt.c: 430: if(scl>=110)
 17001  002FDC  502A               	movf	i2scale@scl,w,c
 17002  002FDE  0A80               	xorlw	128
 17003  002FE0  0F12               	addlw	-238
 17004  002FE2  A0D8               	btfss	status,0,c
 17005  002FE4  D091               	goto	i2l5708
 17006                           
 17007                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17008  002FE6  0E00               	movlw	0
 17009  002FE8  6E12               	movwf	i2___wmul@multiplicand+1,c
 17010  002FEA  0E03               	movlw	3
 17011  002FEC  6E11               	movwf	i2___wmul@multiplicand,c
 17012  002FEE  0E00               	movlw	0
 17013  002FF0  6E0A               	movwf	i2___awdiv@divisor+1,c
 17014  002FF2  0E0A               	movlw	10
 17015  002FF4  6E09               	movwf	i2___awdiv@divisor,c
 17016  002FF6  0E00               	movlw	0
 17017  002FF8  6E04               	movwf	i2___awmod@divisor+1,c
 17018  002FFA  0E64               	movlw	100
 17019  002FFC  6E03               	movwf	i2___awmod@divisor,c
 17020  002FFE  502A               	movf	i2scale@scl,w,c
 17021  003000  6E01               	movwf	i2___awmod@dividend,c
 17022  003002  6A02               	clrf	i2___awmod@dividend+1,c
 17023  003004  BE01               	btfsc	i2___awmod@dividend,7,c
 17024  003006  0602               	decf	i2___awmod@dividend+1,f,c
 17025  003008  EC87  F02A         	call	i2___awmod	;wreg free
 17026  00300C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17027  003010  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17028  003014  ECC6  F029         	call	i2___awdiv	;wreg free
 17029  003018  0E09               	movlw	9
 17030  00301A  2407               	addwf	?i2___awdiv,w,c
 17031  00301C  6E0F               	movwf	i2___wmul@multiplier,c
 17032  00301E  0E00               	movlw	0
 17033  003020  2008               	addwfc	?i2___awdiv+1,w,c
 17034  003022  6E10               	movwf	i2___wmul@multiplier+1,c
 17035  003024  EC7A  F02E         	call	i2___wmul	;wreg free
 17036  003028  0EA5               	movlw	low __npowers_
 17037  00302A  240F               	addwf	?i2___wmul,w,c
 17038  00302C  6EF6               	movwf	tblptrl,c
 17039  00302E  0EFE               	movlw	high __npowers_
 17040  003030  2010               	addwfc	?i2___wmul+1,w,c
 17041  003032  6EF7               	movwf	tblptrh,c
 17042  003034                     	if	0	;There are less than 3 active tblptr bytes
 17043  003034                     	endif
 17044  003034  0009               	tblrd		*+
 17045  003036  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17046  00303A  0009               	tblrd		*+
 17047  00303C  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17048  003040  000A               	tblrd		*-
 17049  003042  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17050  003046  0E00               	movlw	0
 17051  003048  6E0A               	movwf	i2___awdiv@divisor+1,c
 17052  00304A  0E64               	movlw	100
 17053  00304C  6E09               	movwf	i2___awdiv@divisor,c
 17054  00304E  502A               	movf	i2scale@scl,w,c
 17055  003050  6E07               	movwf	i2___awdiv@dividend,c
 17056  003052  6A08               	clrf	i2___awdiv@dividend+1,c
 17057  003054  BE07               	btfsc	i2___awdiv@dividend,7,c
 17058  003056  0608               	decf	i2___awdiv@dividend+1,f,c
 17059  003058  ECC6  F029         	call	i2___awdiv	;wreg free
 17060  00305C  0E12               	movlw	18
 17061  00305E  2407               	addwf	?i2___awdiv,w,c
 17062  003060  6E0F               	movwf	i2___wmul@multiplier,c
 17063  003062  0E00               	movlw	0
 17064  003064  2008               	addwfc	?i2___awdiv+1,w,c
 17065  003066  6E10               	movwf	i2___wmul@multiplier+1,c
 17066  003068  0E00               	movlw	0
 17067  00306A  6E12               	movwf	i2___wmul@multiplicand+1,c
 17068  00306C  0E03               	movlw	3
 17069  00306E  6E11               	movwf	i2___wmul@multiplicand,c
 17070  003070  EC7A  F02E         	call	i2___wmul	;wreg free
 17071  003074  0EA5               	movlw	low __npowers_
 17072  003076  240F               	addwf	?i2___wmul,w,c
 17073  003078  6EF6               	movwf	tblptrl,c
 17074  00307A  0EFE               	movlw	high __npowers_
 17075  00307C  2010               	addwfc	?i2___wmul+1,w,c
 17076  00307E  6EF7               	movwf	tblptrh,c
 17077  003080                     	if	0	;There are less than 3 active tblptr bytes
 17078  003080                     	endif
 17079  003080  0009               	tblrd		*+
 17080  003082  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17081  003086  0009               	tblrd		*+
 17082  003088  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17083  00308C  000A               	tblrd		*-
 17084  00308E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17085  003092  EC3B  F025         	call	i2___ftmul	;wreg free
 17086  003096  C015  F027         	movff	?i2___ftmul,i2_scale$1727
 17087  00309A  C016  F028         	movff	?i2___ftmul+1,i2_scale$1727+1
 17088  00309E  C017  F029         	movff	?i2___ftmul+2,i2_scale$1727+2
 17089                           
 17090                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17091  0030A2  C027  F015         	movff	i2_scale$1727,i2___ftmul@f1
 17092  0030A6  C028  F016         	movff	i2_scale$1727+1,i2___ftmul@f1+1
 17093  0030AA  C029  F017         	movff	i2_scale$1727+2,i2___ftmul@f1+2
 17094  0030AE  0E00               	movlw	0
 17095  0030B0  6E12               	movwf	i2___wmul@multiplicand+1,c
 17096  0030B2  0E03               	movlw	3
 17097  0030B4  6E11               	movwf	i2___wmul@multiplicand,c
 17098  0030B6  0E00               	movlw	0
 17099  0030B8  6E04               	movwf	i2___awmod@divisor+1,c
 17100  0030BA  0E0A               	movlw	10
 17101  0030BC  6E03               	movwf	i2___awmod@divisor,c
 17102  0030BE  502A               	movf	i2scale@scl,w,c
 17103  0030C0  6E01               	movwf	i2___awmod@dividend,c
 17104  0030C2  6A02               	clrf	i2___awmod@dividend+1,c
 17105  0030C4  BE01               	btfsc	i2___awmod@dividend,7,c
 17106  0030C6  0602               	decf	i2___awmod@dividend+1,f,c
 17107  0030C8  EC87  F02A         	call	i2___awmod	;wreg free
 17108  0030CC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17109  0030D0  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17110  0030D4  EC7A  F02E         	call	i2___wmul	;wreg free
 17111  0030D8  0EA5               	movlw	low __npowers_
 17112  0030DA  240F               	addwf	?i2___wmul,w,c
 17113  0030DC  6EF6               	movwf	tblptrl,c
 17114  0030DE  0EFE               	movlw	high __npowers_
 17115  0030E0  2010               	addwfc	?i2___wmul+1,w,c
 17116  0030E2  6EF7               	movwf	tblptrh,c
 17117  0030E4                     	if	0	;There are less than 3 active tblptr bytes
 17118  0030E4                     	endif
 17119  0030E4  0009               	tblrd		*+
 17120  0030E6  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17121  0030EA  0009               	tblrd		*+
 17122  0030EC  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17123  0030F0  000A               	tblrd		*-
 17124  0030F2  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17125  0030F6  EC3B  F025         	call	i2___ftmul	;wreg free
 17126  0030FA  C015  F024         	movff	?i2___ftmul,?i2_scale
 17127  0030FE  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 17128  003102  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 17129  003106  0012               	return	
 17130  003108                     i2l5708:
 17131                           
 17132                           ;doprnt.c: 432: else if(scl > 10)
 17133  003108  502A               	movf	i2scale@scl,w,c
 17134  00310A  0A80               	xorlw	128
 17135  00310C  0F75               	addlw	-139
 17136  00310E  A0D8               	btfss	status,0,c
 17137  003110  D04D               	goto	i2l5714
 17138                           
 17139                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 17140  003112  0E00               	movlw	0
 17141  003114  6E0A               	movwf	i2___awdiv@divisor+1,c
 17142  003116  0E0A               	movlw	10
 17143  003118  6E09               	movwf	i2___awdiv@divisor,c
 17144  00311A  502A               	movf	i2scale@scl,w,c
 17145  00311C  6E07               	movwf	i2___awdiv@dividend,c
 17146  00311E  6A08               	clrf	i2___awdiv@dividend+1,c
 17147  003120  BE07               	btfsc	i2___awdiv@dividend,7,c
 17148  003122  0608               	decf	i2___awdiv@dividend+1,f,c
 17149  003124  ECC6  F029         	call	i2___awdiv	;wreg free
 17150  003128  0E09               	movlw	9
 17151  00312A  2407               	addwf	?i2___awdiv,w,c
 17152  00312C  6E0F               	movwf	i2___wmul@multiplier,c
 17153  00312E  0E00               	movlw	0
 17154  003130  2008               	addwfc	?i2___awdiv+1,w,c
 17155  003132  6E10               	movwf	i2___wmul@multiplier+1,c
 17156  003134  0E00               	movlw	0
 17157  003136  6E12               	movwf	i2___wmul@multiplicand+1,c
 17158  003138  0E03               	movlw	3
 17159  00313A  6E11               	movwf	i2___wmul@multiplicand,c
 17160  00313C  EC7A  F02E         	call	i2___wmul	;wreg free
 17161  003140  0EA5               	movlw	low __npowers_
 17162  003142  240F               	addwf	?i2___wmul,w,c
 17163  003144  6EF6               	movwf	tblptrl,c
 17164  003146  0EFE               	movlw	high __npowers_
 17165  003148  2010               	addwfc	?i2___wmul+1,w,c
 17166  00314A  6EF7               	movwf	tblptrh,c
 17167  00314C                     	if	0	;There are less than 3 active tblptr bytes
 17168  00314C                     	endif
 17169  00314C  0009               	tblrd		*+
 17170  00314E  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17171  003152  0009               	tblrd		*+
 17172  003154  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17173  003158  000A               	tblrd		*-
 17174  00315A  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17175  00315E  0E00               	movlw	0
 17176  003160  6E12               	movwf	i2___wmul@multiplicand+1,c
 17177  003162  0E03               	movlw	3
 17178  003164  6E11               	movwf	i2___wmul@multiplicand,c
 17179  003166  0E00               	movlw	0
 17180  003168  6E04               	movwf	i2___awmod@divisor+1,c
 17181  00316A  0E0A               	movlw	10
 17182  00316C  6E03               	movwf	i2___awmod@divisor,c
 17183  00316E  502A               	movf	i2scale@scl,w,c
 17184  003170  6E01               	movwf	i2___awmod@dividend,c
 17185  003172  6A02               	clrf	i2___awmod@dividend+1,c
 17186  003174  BE01               	btfsc	i2___awmod@dividend,7,c
 17187  003176  0602               	decf	i2___awmod@dividend+1,f,c
 17188  003178  EC87  F02A         	call	i2___awmod	;wreg free
 17189  00317C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17190  003180  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17191  003184  EC7A  F02E         	call	i2___wmul	;wreg free
 17192  003188  0EA5               	movlw	low __npowers_
 17193  00318A  240F               	addwf	?i2___wmul,w,c
 17194  00318C  6EF6               	movwf	tblptrl,c
 17195  00318E  0EFE               	movlw	high __npowers_
 17196  003190  2010               	addwfc	?i2___wmul+1,w,c
 17197  003192  6EF7               	movwf	tblptrh,c
 17198  003194                     	if	0	;There are less than 3 active tblptr bytes
 17199  003194                     	endif
 17200  003194  0009               	tblrd		*+
 17201  003196  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17202  00319A  0009               	tblrd		*+
 17203  00319C  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17204  0031A0  000A               	tblrd		*-
 17205  0031A2  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17206  0031A6  EC3B  F025         	call	i2___ftmul	;wreg free
 17207  0031AA  D7A7               	goto	L14
 17208  0031AC                     i2l5714:
 17209                           
 17210                           ;doprnt.c: 434: return _npowers_[scl];
 17211  0031AC  502A               	movf	i2scale@scl,w,c
 17212  0031AE  0D03               	mullw	3
 17213  0031B0  0EA5               	movlw	low __npowers_
 17214  0031B2  24F3               	addwf	prodl,w,c
 17215  0031B4  6EF6               	movwf	tblptrl,c
 17216  0031B6  0EFE               	movlw	high __npowers_
 17217  0031B8  20F4               	addwfc	prodh,w,c
 17218  0031BA  6EF7               	movwf	tblptrh,c
 17219  0031BC                     	if	0	;There are less than 3 active tblptr bytes
 17220  0031BC                     	endif
 17221  0031BC  0009               	tblrd		*+
 17222  0031BE  CFF5 F024          	movff	tablat,?i2_scale
 17223  0031C2  0009               	tblrd		*+
 17224  0031C4  CFF5 F025          	movff	tablat,?i2_scale+1
 17225  0031C8  000A               	tblrd		*-
 17226  0031CA  CFF5 F026          	movff	tablat,?i2_scale+2
 17227  0031CE  0012               	return	
 17228  0031D0                     i2l5718:
 17229                           
 17230                           ;doprnt.c: 435: }
 17231                           ;doprnt.c: 436: if(scl>=110)
 17232  0031D0  502A               	movf	i2scale@scl,w,c
 17233  0031D2  0A80               	xorlw	128
 17234  0031D4  0F12               	addlw	-238
 17235  0031D6  A0D8               	btfss	status,0,c
 17236  0031D8  D091               	goto	i2l5726
 17237                           
 17238                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17239  0031DA  0E00               	movlw	0
 17240  0031DC  6E12               	movwf	i2___wmul@multiplicand+1,c
 17241  0031DE  0E03               	movlw	3
 17242  0031E0  6E11               	movwf	i2___wmul@multiplicand,c
 17243  0031E2  0E00               	movlw	0
 17244  0031E4  6E0A               	movwf	i2___awdiv@divisor+1,c
 17245  0031E6  0E0A               	movlw	10
 17246  0031E8  6E09               	movwf	i2___awdiv@divisor,c
 17247  0031EA  0E00               	movlw	0
 17248  0031EC  6E04               	movwf	i2___awmod@divisor+1,c
 17249  0031EE  0E64               	movlw	100
 17250  0031F0  6E03               	movwf	i2___awmod@divisor,c
 17251  0031F2  502A               	movf	i2scale@scl,w,c
 17252  0031F4  6E01               	movwf	i2___awmod@dividend,c
 17253  0031F6  6A02               	clrf	i2___awmod@dividend+1,c
 17254  0031F8  BE01               	btfsc	i2___awmod@dividend,7,c
 17255  0031FA  0602               	decf	i2___awmod@dividend+1,f,c
 17256  0031FC  EC87  F02A         	call	i2___awmod	;wreg free
 17257  003200  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17258  003204  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17259  003208  ECC6  F029         	call	i2___awdiv	;wreg free
 17260  00320C  0E09               	movlw	9
 17261  00320E  2407               	addwf	?i2___awdiv,w,c
 17262  003210  6E0F               	movwf	i2___wmul@multiplier,c
 17263  003212  0E00               	movlw	0
 17264  003214  2008               	addwfc	?i2___awdiv+1,w,c
 17265  003216  6E10               	movwf	i2___wmul@multiplier+1,c
 17266  003218  EC7A  F02E         	call	i2___wmul	;wreg free
 17267  00321C  0ECC               	movlw	low __powers_
 17268  00321E  240F               	addwf	?i2___wmul,w,c
 17269  003220  6EF6               	movwf	tblptrl,c
 17270  003222  0EFE               	movlw	high __powers_
 17271  003224  2010               	addwfc	?i2___wmul+1,w,c
 17272  003226  6EF7               	movwf	tblptrh,c
 17273  003228                     	if	0	;There are less than 3 active tblptr bytes
 17274  003228                     	endif
 17275  003228  0009               	tblrd		*+
 17276  00322A  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17277  00322E  0009               	tblrd		*+
 17278  003230  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17279  003234  000A               	tblrd		*-
 17280  003236  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17281  00323A  0E00               	movlw	0
 17282  00323C  6E0A               	movwf	i2___awdiv@divisor+1,c
 17283  00323E  0E64               	movlw	100
 17284  003240  6E09               	movwf	i2___awdiv@divisor,c
 17285  003242  502A               	movf	i2scale@scl,w,c
 17286  003244  6E07               	movwf	i2___awdiv@dividend,c
 17287  003246  6A08               	clrf	i2___awdiv@dividend+1,c
 17288  003248  BE07               	btfsc	i2___awdiv@dividend,7,c
 17289  00324A  0608               	decf	i2___awdiv@dividend+1,f,c
 17290  00324C  ECC6  F029         	call	i2___awdiv	;wreg free
 17291  003250  0E12               	movlw	18
 17292  003252  2407               	addwf	?i2___awdiv,w,c
 17293  003254  6E0F               	movwf	i2___wmul@multiplier,c
 17294  003256  0E00               	movlw	0
 17295  003258  2008               	addwfc	?i2___awdiv+1,w,c
 17296  00325A  6E10               	movwf	i2___wmul@multiplier+1,c
 17297  00325C  0E00               	movlw	0
 17298  00325E  6E12               	movwf	i2___wmul@multiplicand+1,c
 17299  003260  0E03               	movlw	3
 17300  003262  6E11               	movwf	i2___wmul@multiplicand,c
 17301  003264  EC7A  F02E         	call	i2___wmul	;wreg free
 17302  003268  0ECC               	movlw	low __powers_
 17303  00326A  240F               	addwf	?i2___wmul,w,c
 17304  00326C  6EF6               	movwf	tblptrl,c
 17305  00326E  0EFE               	movlw	high __powers_
 17306  003270  2010               	addwfc	?i2___wmul+1,w,c
 17307  003272  6EF7               	movwf	tblptrh,c
 17308  003274                     	if	0	;There are less than 3 active tblptr bytes
 17309  003274                     	endif
 17310  003274  0009               	tblrd		*+
 17311  003276  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17312  00327A  0009               	tblrd		*+
 17313  00327C  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17314  003280  000A               	tblrd		*-
 17315  003282  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17316  003286  EC3B  F025         	call	i2___ftmul	;wreg free
 17317  00328A  C015  F027         	movff	?i2___ftmul,i2_scale$1727
 17318  00328E  C016  F028         	movff	?i2___ftmul+1,i2_scale$1727+1
 17319  003292  C017  F029         	movff	?i2___ftmul+2,i2_scale$1727+2
 17320                           
 17321                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 17322  003296  C027  F015         	movff	i2_scale$1727,i2___ftmul@f1
 17323  00329A  C028  F016         	movff	i2_scale$1727+1,i2___ftmul@f1+1
 17324  00329E  C029  F017         	movff	i2_scale$1727+2,i2___ftmul@f1+2
 17325  0032A2  0E00               	movlw	0
 17326  0032A4  6E12               	movwf	i2___wmul@multiplicand+1,c
 17327  0032A6  0E03               	movlw	3
 17328  0032A8  6E11               	movwf	i2___wmul@multiplicand,c
 17329  0032AA  0E00               	movlw	0
 17330  0032AC  6E04               	movwf	i2___awmod@divisor+1,c
 17331  0032AE  0E0A               	movlw	10
 17332  0032B0  6E03               	movwf	i2___awmod@divisor,c
 17333  0032B2  502A               	movf	i2scale@scl,w,c
 17334  0032B4  6E01               	movwf	i2___awmod@dividend,c
 17335  0032B6  6A02               	clrf	i2___awmod@dividend+1,c
 17336  0032B8  BE01               	btfsc	i2___awmod@dividend,7,c
 17337  0032BA  0602               	decf	i2___awmod@dividend+1,f,c
 17338  0032BC  EC87  F02A         	call	i2___awmod	;wreg free
 17339  0032C0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17340  0032C4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17341  0032C8  EC7A  F02E         	call	i2___wmul	;wreg free
 17342  0032CC  0ECC               	movlw	low __powers_
 17343  0032CE  240F               	addwf	?i2___wmul,w,c
 17344  0032D0  6EF6               	movwf	tblptrl,c
 17345  0032D2  0EFE               	movlw	high __powers_
 17346  0032D4  2010               	addwfc	?i2___wmul+1,w,c
 17347  0032D6  6EF7               	movwf	tblptrh,c
 17348  0032D8                     	if	0	;There are less than 3 active tblptr bytes
 17349  0032D8                     	endif
 17350  0032D8  0009               	tblrd		*+
 17351  0032DA  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17352  0032DE  0009               	tblrd		*+
 17353  0032E0  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17354  0032E4  000A               	tblrd		*-
 17355  0032E6  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17356  0032EA  EC3B  F025         	call	i2___ftmul	;wreg free
 17357  0032EE  C015  F024         	movff	?i2___ftmul,?i2_scale
 17358  0032F2  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 17359  0032F6  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 17360  0032FA  0012               	return	
 17361  0032FC                     i2l5726:
 17362                           
 17363                           ;doprnt.c: 438: else if(scl > 10)
 17364  0032FC  502A               	movf	i2scale@scl,w,c
 17365  0032FE  0A80               	xorlw	128
 17366  003300  0F75               	addlw	-139
 17367  003302  A0D8               	btfss	status,0,c
 17368  003304  D04D               	goto	i2l5732
 17369                           
 17370                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 17371  003306  0E00               	movlw	0
 17372  003308  6E0A               	movwf	i2___awdiv@divisor+1,c
 17373  00330A  0E0A               	movlw	10
 17374  00330C  6E09               	movwf	i2___awdiv@divisor,c
 17375  00330E  502A               	movf	i2scale@scl,w,c
 17376  003310  6E07               	movwf	i2___awdiv@dividend,c
 17377  003312  6A08               	clrf	i2___awdiv@dividend+1,c
 17378  003314  BE07               	btfsc	i2___awdiv@dividend,7,c
 17379  003316  0608               	decf	i2___awdiv@dividend+1,f,c
 17380  003318  ECC6  F029         	call	i2___awdiv	;wreg free
 17381  00331C  0E09               	movlw	9
 17382  00331E  2407               	addwf	?i2___awdiv,w,c
 17383  003320  6E0F               	movwf	i2___wmul@multiplier,c
 17384  003322  0E00               	movlw	0
 17385  003324  2008               	addwfc	?i2___awdiv+1,w,c
 17386  003326  6E10               	movwf	i2___wmul@multiplier+1,c
 17387  003328  0E00               	movlw	0
 17388  00332A  6E12               	movwf	i2___wmul@multiplicand+1,c
 17389  00332C  0E03               	movlw	3
 17390  00332E  6E11               	movwf	i2___wmul@multiplicand,c
 17391  003330  EC7A  F02E         	call	i2___wmul	;wreg free
 17392  003334  0ECC               	movlw	low __powers_
 17393  003336  240F               	addwf	?i2___wmul,w,c
 17394  003338  6EF6               	movwf	tblptrl,c
 17395  00333A  0EFE               	movlw	high __powers_
 17396  00333C  2010               	addwfc	?i2___wmul+1,w,c
 17397  00333E  6EF7               	movwf	tblptrh,c
 17398  003340                     	if	0	;There are less than 3 active tblptr bytes
 17399  003340                     	endif
 17400  003340  0009               	tblrd		*+
 17401  003342  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17402  003346  0009               	tblrd		*+
 17403  003348  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17404  00334C  000A               	tblrd		*-
 17405  00334E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17406  003352  0E00               	movlw	0
 17407  003354  6E12               	movwf	i2___wmul@multiplicand+1,c
 17408  003356  0E03               	movlw	3
 17409  003358  6E11               	movwf	i2___wmul@multiplicand,c
 17410  00335A  0E00               	movlw	0
 17411  00335C  6E04               	movwf	i2___awmod@divisor+1,c
 17412  00335E  0E0A               	movlw	10
 17413  003360  6E03               	movwf	i2___awmod@divisor,c
 17414  003362  502A               	movf	i2scale@scl,w,c
 17415  003364  6E01               	movwf	i2___awmod@dividend,c
 17416  003366  6A02               	clrf	i2___awmod@dividend+1,c
 17417  003368  BE01               	btfsc	i2___awmod@dividend,7,c
 17418  00336A  0602               	decf	i2___awmod@dividend+1,f,c
 17419  00336C  EC87  F02A         	call	i2___awmod	;wreg free
 17420  003370  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17421  003374  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17422  003378  EC7A  F02E         	call	i2___wmul	;wreg free
 17423  00337C  0ECC               	movlw	low __powers_
 17424  00337E  240F               	addwf	?i2___wmul,w,c
 17425  003380  6EF6               	movwf	tblptrl,c
 17426  003382  0EFE               	movlw	high __powers_
 17427  003384  2010               	addwfc	?i2___wmul+1,w,c
 17428  003386  6EF7               	movwf	tblptrh,c
 17429  003388                     	if	0	;There are less than 3 active tblptr bytes
 17430  003388                     	endif
 17431  003388  0009               	tblrd		*+
 17432  00338A  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17433  00338E  0009               	tblrd		*+
 17434  003390  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17435  003394  000A               	tblrd		*-
 17436  003396  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17437  00339A  EC3B  F025         	call	i2___ftmul	;wreg free
 17438  00339E  D7A7               	goto	L15
 17439  0033A0                     i2l5732:
 17440                           
 17441                           ;doprnt.c: 440: return _powers_[scl];
 17442  0033A0  502A               	movf	i2scale@scl,w,c
 17443  0033A2  0D03               	mullw	3
 17444  0033A4  0ECC               	movlw	low __powers_
 17445  0033A6  24F3               	addwf	prodl,w,c
 17446  0033A8  6EF6               	movwf	tblptrl,c
 17447  0033AA  0EFE               	movlw	high __powers_
 17448  0033AC  20F4               	addwfc	prodh,w,c
 17449  0033AE  6EF7               	movwf	tblptrh,c
 17450  0033B0                     	if	0	;There are less than 3 active tblptr bytes
 17451  0033B0                     	endif
 17452  0033B0  0009               	tblrd		*+
 17453  0033B2  CFF5 F024          	movff	tablat,?i2_scale
 17454  0033B6  0009               	tblrd		*+
 17455  0033B8  CFF5 F025          	movff	tablat,?i2_scale+1
 17456  0033BC  000A               	tblrd		*-
 17457  0033BE  CFF5 F026          	movff	tablat,?i2_scale+2
 17458  0033C2  0012               	return	
 17459  0033C4                     __end_ofi2_scale:
 17460                           	opt stack 0
 17461                           pclatu	equ	0xFFB
 17462                           pclath	equ	0xFFA
 17463                           tblptru	equ	0xFF8
 17464                           tblptrh	equ	0xFF7
 17465                           tblptrl	equ	0xFF6
 17466                           tablat	equ	0xFF5
 17467                           prodh	equ	0xFF4
 17468                           prodl	equ	0xFF3
 17469                           intcon	equ	0xFF2
 17470                           intcon3	equ	0xFF0
 17471                           postinc0	equ	0xFEE
 17472                           fsr0h	equ	0xFEA
 17473                           fsr0l	equ	0xFE9
 17474                           wreg	equ	0xFE8
 17475                           fsr1h	equ	0xFE2
 17476                           fsr1l	equ	0xFE1
 17477                           indf2	equ	0xFDF
 17478                           postinc2	equ	0xFDE
 17479                           postdec2	equ	0xFDD
 17480                           fsr2h	equ	0xFDA
 17481                           fsr2l	equ	0xFD9
 17482                           status	equ	0xFD8
 17483                           
 17484 ;; *************** function i2_putch *****************
 17485 ;; Defined at:
 17486 ;;		line 31 in file "lcd.c"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;  data            1    wreg     unsigned char 
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  data            1    2[COMRAM] unsigned char 
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      void 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0, cstack
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17504 ;;Total ram usage:        1 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    1
 17507 ;; This function calls:
 17508 ;;		i2_lcdNibble
 17509 ;; This function is called by:
 17510 ;;		i2_printf
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           	psect	text56
 17515  005DF6                     __ptext56:
 17516                           	opt stack 0
 17517  005DF6                     i2_putch:
 17518                           	opt stack 21
 17519                           
 17520                           ;incstack = 0
 17521                           ;i2putch@data stored from wreg
 17522  005DF6  6E03               	movwf	i2putch@data,c
 17523                           
 17524                           ;lcd.c: 32: LATDbits.LATD2 = 1;
 17525  005DF8  848C               	bsf	3980,2,c	;volatile
 17526                           
 17527                           ;lcd.c: 33: lcdNibble(data);
 17528  005DFA  5003               	movf	i2putch@data,w,c
 17529  005DFC  EC84  F02B         	call	i2_lcdNibble
 17530  005E00  0012               	return		;funcret
 17531  005E02                     __end_ofi2_putch:
 17532                           	opt stack 0
 17533                           pclatu	equ	0xFFB
 17534                           pclath	equ	0xFFA
 17535                           tblptru	equ	0xFF8
 17536                           tblptrh	equ	0xFF7
 17537                           tblptrl	equ	0xFF6
 17538                           tablat	equ	0xFF5
 17539                           prodh	equ	0xFF4
 17540                           prodl	equ	0xFF3
 17541                           intcon	equ	0xFF2
 17542                           intcon3	equ	0xFF0
 17543                           postinc0	equ	0xFEE
 17544                           fsr0h	equ	0xFEA
 17545                           fsr0l	equ	0xFE9
 17546                           wreg	equ	0xFE8
 17547                           fsr1h	equ	0xFE2
 17548                           fsr1l	equ	0xFE1
 17549                           indf2	equ	0xFDF
 17550                           postinc2	equ	0xFDE
 17551                           postdec2	equ	0xFDD
 17552                           fsr2h	equ	0xFDA
 17553                           fsr2l	equ	0xFD9
 17554                           status	equ	0xFD8
 17555                           
 17556 ;; *************** function i2_isdigit *****************
 17557 ;; Defined at:
 17558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
 17559 ;; Parameters:    Size  Location     Type
 17560 ;;  c               1    wreg     unsigned char 
 17561 ;; Auto vars:     Size  Location     Type
 17562 ;;  c               1    2[COMRAM] unsigned char 
 17563 ;; Return value:  Size  Location     Type
 17564 ;;		None               void
 17565 ;; Registers used:
 17566 ;;		wreg, status,2, status,0
 17567 ;; Tracked objects:
 17568 ;;		On entry : 0/0
 17569 ;;		On exit  : 0/0
 17570 ;;		Unchanged: 0/0
 17571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17575 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17576 ;;Total ram usage:        3 bytes
 17577 ;; Hardware stack levels used:    1
 17578 ;; This function calls:
 17579 ;;		Nothing
 17580 ;; This function is called by:
 17581 ;;		i2_printf
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585                           	psect	text57
 17586  005DA4                     __ptext57:
 17587                           	opt stack 0
 17588  005DA4                     i2_isdigit:
 17589                           	opt stack 22
 17590                           
 17591                           ;incstack = 0
 17592                           ;i2isdigit@c stored from wreg
 17593  005DA4  6E03               	movwf	i2isdigit@c,c
 17594  005DA6  0E00               	movlw	0
 17595  005DA8  6E02               	movwf	i2_isdigit$1152,c
 17596  005DAA  0E3A               	movlw	58
 17597  005DAC  6003               	cpfslt	i2isdigit@c,c
 17598  005DAE  D005               	goto	i2l5994
 17599  005DB0  0E2F               	movlw	47
 17600  005DB2  6403               	cpfsgt	i2isdigit@c,c
 17601  005DB4  D002               	goto	i2l5994
 17602  005DB6  0E01               	movlw	1
 17603  005DB8  6E02               	movwf	i2_isdigit$1152,c
 17604  005DBA                     i2l5994:
 17605  005DBA  C002  F001         	movff	i2_isdigit$1152,??i2_isdigit
 17606  005DBE  3001               	rrcf	??i2_isdigit,w,c
 17607  005DC0  0012               	return	
 17608  005DC2                     __end_ofi2_isdigit:
 17609                           	opt stack 0
 17610                           pclatu	equ	0xFFB
 17611                           pclath	equ	0xFFA
 17612                           tblptru	equ	0xFF8
 17613                           tblptrh	equ	0xFF7
 17614                           tblptrl	equ	0xFF6
 17615                           tablat	equ	0xFF5
 17616                           prodh	equ	0xFF4
 17617                           prodl	equ	0xFF3
 17618                           intcon	equ	0xFF2
 17619                           intcon3	equ	0xFF0
 17620                           postinc0	equ	0xFEE
 17621                           fsr0h	equ	0xFEA
 17622                           fsr0l	equ	0xFE9
 17623                           wreg	equ	0xFE8
 17624                           fsr1h	equ	0xFE2
 17625                           fsr1l	equ	0xFE1
 17626                           indf2	equ	0xFDF
 17627                           postinc2	equ	0xFDE
 17628                           postdec2	equ	0xFDD
 17629                           fsr2h	equ	0xFDA
 17630                           fsr2l	equ	0xFD9
 17631                           status	equ	0xFD8
 17632                           
 17633 ;; *************** function i2_fround *****************
 17634 ;; Defined at:
 17635 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
 17636 ;; Parameters:    Size  Location     Type
 17637 ;;  prec            1    wreg     unsigned char 
 17638 ;; Auto vars:     Size  Location     Type
 17639 ;;  prec            1   44[COMRAM] unsigned char 
 17640 ;; Return value:  Size  Location     Type
 17641 ;;                  3   35[COMRAM] unsigned char 
 17642 ;; Registers used:
 17643 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17644 ;; Tracked objects:
 17645 ;;		On entry : 0/0
 17646 ;;		On exit  : 0/0
 17647 ;;		Unchanged: 0/0
 17648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17650 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17652 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17653 ;;Total ram usage:       10 bytes
 17654 ;; Hardware stack levels used:    1
 17655 ;; Hardware stack levels required when called:    2
 17656 ;; This function calls:
 17657 ;;		i2___awdiv
 17658 ;;		i2___awmod
 17659 ;;		i2___ftmul
 17660 ;;		i2___wmul
 17661 ;; This function is called by:
 17662 ;;		i2_printf
 17663 ;; This function uses a non-reentrant model
 17664 ;;
 17665                           
 17666                           	psect	text58
 17667  0038D8                     __ptext58:
 17668                           	opt stack 0
 17669  0038D8                     i2_fround:
 17670                           	opt stack 20
 17671                           
 17672                           ;incstack = 0
 17673                           ;i2fround@prec stored from wreg
 17674  0038D8  6E2D               	movwf	i2fround@prec,c
 17675                           
 17676                           ;doprnt.c: 413: if(prec>=110)
 17677  0038DA  0E6D               	movlw	109
 17678  0038DC  642D               	cpfsgt	i2fround@prec,c
 17679  0038DE  D09F               	goto	i2l5686
 17680                           
 17681                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17682  0038E0  0E00               	movlw	0
 17683  0038E2  6E12               	movwf	i2___wmul@multiplicand+1,c
 17684  0038E4  0E03               	movlw	3
 17685  0038E6  6E11               	movwf	i2___wmul@multiplicand,c
 17686  0038E8  0E00               	movlw	0
 17687  0038EA  6E0A               	movwf	i2___awdiv@divisor+1,c
 17688  0038EC  0E0A               	movlw	10
 17689  0038EE  6E09               	movwf	i2___awdiv@divisor,c
 17690  0038F0  0E00               	movlw	0
 17691  0038F2  6E04               	movwf	i2___awmod@divisor+1,c
 17692  0038F4  0E64               	movlw	100
 17693  0038F6  6E03               	movwf	i2___awmod@divisor,c
 17694  0038F8  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 17695  0038FC  6A02               	clrf	i2___awmod@dividend+1,c
 17696  0038FE  EC87  F02A         	call	i2___awmod	;wreg free
 17697  003902  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 17698  003906  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 17699  00390A  ECC6  F029         	call	i2___awdiv	;wreg free
 17700  00390E  0E09               	movlw	9
 17701  003910  2407               	addwf	?i2___awdiv,w,c
 17702  003912  6E0F               	movwf	i2___wmul@multiplier,c
 17703  003914  0E00               	movlw	0
 17704  003916  2008               	addwfc	?i2___awdiv+1,w,c
 17705  003918  6E10               	movwf	i2___wmul@multiplier+1,c
 17706  00391A  EC7A  F02E         	call	i2___wmul	;wreg free
 17707  00391E  0EA5               	movlw	low __npowers_
 17708  003920  240F               	addwf	?i2___wmul,w,c
 17709  003922  6EF6               	movwf	tblptrl,c
 17710  003924  0EFE               	movlw	high __npowers_
 17711  003926  2010               	addwfc	?i2___wmul+1,w,c
 17712  003928  6EF7               	movwf	tblptrh,c
 17713  00392A                     	if	0	;There are less than 3 active tblptr bytes
 17714  00392A                     	endif
 17715  00392A  0009               	tblrd		*+
 17716  00392C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17717  003930  0009               	tblrd		*+
 17718  003932  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17719  003936  000A               	tblrd		*-
 17720  003938  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17721  00393C  0E00               	movlw	0
 17722  00393E  6E0A               	movwf	i2___awdiv@divisor+1,c
 17723  003940  0E64               	movlw	100
 17724  003942  6E09               	movwf	i2___awdiv@divisor,c
 17725  003944  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 17726  003948  6A08               	clrf	i2___awdiv@dividend+1,c
 17727  00394A  ECC6  F029         	call	i2___awdiv	;wreg free
 17728  00394E  0E12               	movlw	18
 17729  003950  2407               	addwf	?i2___awdiv,w,c
 17730  003952  6E0F               	movwf	i2___wmul@multiplier,c
 17731  003954  0E00               	movlw	0
 17732  003956  2008               	addwfc	?i2___awdiv+1,w,c
 17733  003958  6E10               	movwf	i2___wmul@multiplier+1,c
 17734  00395A  0E00               	movlw	0
 17735  00395C  6E12               	movwf	i2___wmul@multiplicand+1,c
 17736  00395E  0E03               	movlw	3
 17737  003960  6E11               	movwf	i2___wmul@multiplicand,c
 17738  003962  EC7A  F02E         	call	i2___wmul	;wreg free
 17739  003966  0EA5               	movlw	low __npowers_
 17740  003968  240F               	addwf	?i2___wmul,w,c
 17741  00396A  6EF6               	movwf	tblptrl,c
 17742  00396C  0EFE               	movlw	high __npowers_
 17743  00396E  2010               	addwfc	?i2___wmul+1,w,c
 17744  003970  6EF7               	movwf	tblptrh,c
 17745  003972                     	if	0	;There are less than 3 active tblptr bytes
 17746  003972                     	endif
 17747  003972  0009               	tblrd		*+
 17748  003974  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17749  003978  0009               	tblrd		*+
 17750  00397A  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17751  00397E  000A               	tblrd		*-
 17752  003980  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17753  003984  EC3B  F025         	call	i2___ftmul	;wreg free
 17754  003988  C015  F02A         	movff	?i2___ftmul,i2_fround$1725
 17755  00398C  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1725+1
 17756  003990  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1725+2
 17757                           
 17758                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17759  003994  0E00               	movlw	0
 17760  003996  6E12               	movwf	i2___wmul@multiplicand+1,c
 17761  003998  0E03               	movlw	3
 17762  00399A  6E11               	movwf	i2___wmul@multiplicand,c
 17763  00399C  0E00               	movlw	0
 17764  00399E  6E04               	movwf	i2___awmod@divisor+1,c
 17765  0039A0  0E0A               	movlw	10
 17766  0039A2  6E03               	movwf	i2___awmod@divisor,c
 17767  0039A4  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 17768  0039A8  6A02               	clrf	i2___awmod@dividend+1,c
 17769  0039AA  EC87  F02A         	call	i2___awmod	;wreg free
 17770  0039AE  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17771  0039B2  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17772  0039B6  EC7A  F02E         	call	i2___wmul	;wreg free
 17773  0039BA  0EA5               	movlw	low __npowers_
 17774  0039BC  240F               	addwf	?i2___wmul,w,c
 17775  0039BE  6EF6               	movwf	tblptrl,c
 17776  0039C0  0EFE               	movlw	high __npowers_
 17777  0039C2  2010               	addwfc	?i2___wmul+1,w,c
 17778  0039C4  6EF7               	movwf	tblptrh,c
 17779  0039C6                     	if	0	;There are less than 3 active tblptr bytes
 17780  0039C6                     	endif
 17781  0039C6  0009               	tblrd		*+
 17782  0039C8  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17783  0039CC  0009               	tblrd		*+
 17784  0039CE  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17785  0039D2  000A               	tblrd		*-
 17786  0039D4  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17787  0039D8  C02A  F015         	movff	i2_fround$1725,i2___ftmul@f1
 17788  0039DC  C02B  F016         	movff	i2_fround$1725+1,i2___ftmul@f1+1
 17789  0039E0  C02C  F017         	movff	i2_fround$1725+2,i2___ftmul@f1+2
 17790  0039E4  EC3B  F025         	call	i2___ftmul	;wreg free
 17791  0039E8  C015  F027         	movff	?i2___ftmul,i2_fround$1726
 17792  0039EC  C016  F028         	movff	?i2___ftmul+1,i2_fround$1726+1
 17793  0039F0  C017  F029         	movff	?i2___ftmul+2,i2_fround$1726+2
 17794                           
 17795                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17796  0039F4  C027  F015         	movff	i2_fround$1726,i2___ftmul@f1
 17797  0039F8  C028  F016         	movff	i2_fround$1726+1,i2___ftmul@f1+1
 17798  0039FC  C029  F017         	movff	i2_fround$1726+2,i2___ftmul@f1+2
 17799  003A00  0E00               	movlw	0
 17800  003A02  6E18               	movwf	i2___ftmul@f2,c
 17801  003A04  0E00               	movlw	0
 17802  003A06  6E19               	movwf	i2___ftmul@f2+1,c
 17803  003A08  0E3F               	movlw	63
 17804  003A0A  6E1A               	movwf	i2___ftmul@f2+2,c
 17805  003A0C  EC3B  F025         	call	i2___ftmul	;wreg free
 17806  003A10  C015  F024         	movff	?i2___ftmul,?i2_fround
 17807  003A14  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 17808  003A18  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 17809  003A1C  0012               	return	
 17810  003A1E                     i2l5686:
 17811                           
 17812                           ;doprnt.c: 415: else if(prec > 10)
 17813  003A1E  0E0A               	movlw	10
 17814  003A20  642D               	cpfsgt	i2fround@prec,c
 17815  003A22  D05D               	goto	i2l5694
 17816                           
 17817                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17818  003A24  0E00               	movlw	0
 17819  003A26  6E12               	movwf	i2___wmul@multiplicand+1,c
 17820  003A28  0E03               	movlw	3
 17821  003A2A  6E11               	movwf	i2___wmul@multiplicand,c
 17822  003A2C  0E00               	movlw	0
 17823  003A2E  6E04               	movwf	i2___awmod@divisor+1,c
 17824  003A30  0E0A               	movlw	10
 17825  003A32  6E03               	movwf	i2___awmod@divisor,c
 17826  003A34  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 17827  003A38  6A02               	clrf	i2___awmod@dividend+1,c
 17828  003A3A  EC87  F02A         	call	i2___awmod	;wreg free
 17829  003A3E  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 17830  003A42  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 17831  003A46  EC7A  F02E         	call	i2___wmul	;wreg free
 17832  003A4A  0EA5               	movlw	low __npowers_
 17833  003A4C  240F               	addwf	?i2___wmul,w,c
 17834  003A4E  6EF6               	movwf	tblptrl,c
 17835  003A50  0EFE               	movlw	high __npowers_
 17836  003A52  2010               	addwfc	?i2___wmul+1,w,c
 17837  003A54  6EF7               	movwf	tblptrh,c
 17838  003A56                     	if	0	;There are less than 3 active tblptr bytes
 17839  003A56                     	endif
 17840  003A56  0009               	tblrd		*+
 17841  003A58  CFF5 F018          	movff	tablat,i2___ftmul@f2
 17842  003A5C  0009               	tblrd		*+
 17843  003A5E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 17844  003A62  000A               	tblrd		*-
 17845  003A64  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 17846  003A68  0E00               	movlw	0
 17847  003A6A  6E0A               	movwf	i2___awdiv@divisor+1,c
 17848  003A6C  0E0A               	movlw	10
 17849  003A6E  6E09               	movwf	i2___awdiv@divisor,c
 17850  003A70  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 17851  003A74  6A08               	clrf	i2___awdiv@dividend+1,c
 17852  003A76  ECC6  F029         	call	i2___awdiv	;wreg free
 17853  003A7A  0E09               	movlw	9
 17854  003A7C  2407               	addwf	?i2___awdiv,w,c
 17855  003A7E  6E0F               	movwf	i2___wmul@multiplier,c
 17856  003A80  0E00               	movlw	0
 17857  003A82  2008               	addwfc	?i2___awdiv+1,w,c
 17858  003A84  6E10               	movwf	i2___wmul@multiplier+1,c
 17859  003A86  0E00               	movlw	0
 17860  003A88  6E12               	movwf	i2___wmul@multiplicand+1,c
 17861  003A8A  0E03               	movlw	3
 17862  003A8C  6E11               	movwf	i2___wmul@multiplicand,c
 17863  003A8E  EC7A  F02E         	call	i2___wmul	;wreg free
 17864  003A92  0EA5               	movlw	low __npowers_
 17865  003A94  240F               	addwf	?i2___wmul,w,c
 17866  003A96  6EF6               	movwf	tblptrl,c
 17867  003A98  0EFE               	movlw	high __npowers_
 17868  003A9A  2010               	addwfc	?i2___wmul+1,w,c
 17869  003A9C  6EF7               	movwf	tblptrh,c
 17870  003A9E                     	if	0	;There are less than 3 active tblptr bytes
 17871  003A9E                     	endif
 17872  003A9E  0009               	tblrd		*+
 17873  003AA0  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17874  003AA4  0009               	tblrd		*+
 17875  003AA6  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17876  003AAA  000A               	tblrd		*-
 17877  003AAC  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17878  003AB0  EC3B  F025         	call	i2___ftmul	;wreg free
 17879  003AB4  C015  F02A         	movff	?i2___ftmul,i2_fround$1725
 17880  003AB8  C016  F02B         	movff	?i2___ftmul+1,i2_fround$1725+1
 17881  003ABC  C017  F02C         	movff	?i2___ftmul+2,i2_fround$1725+2
 17882                           
 17883                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17884  003AC0  C02A  F015         	movff	i2_fround$1725,i2___ftmul@f1
 17885  003AC4  C02B  F016         	movff	i2_fround$1725+1,i2___ftmul@f1+1
 17886  003AC8  C02C  F017         	movff	i2_fround$1725+2,i2___ftmul@f1+2
 17887  003ACC  0E00               	movlw	0
 17888  003ACE  6E18               	movwf	i2___ftmul@f2,c
 17889  003AD0  0E00               	movlw	0
 17890  003AD2  6E19               	movwf	i2___ftmul@f2+1,c
 17891  003AD4  0E3F               	movlw	63
 17892  003AD6  6E1A               	movwf	i2___ftmul@f2+2,c
 17893  003AD8  EC3B  F025         	call	i2___ftmul	;wreg free
 17894  003ADC  D799               	goto	L16
 17895  003ADE                     i2l5694:
 17896                           
 17897                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17898  003ADE  502D               	movf	i2fround@prec,w,c
 17899  003AE0  0D03               	mullw	3
 17900  003AE2  0EA5               	movlw	low __npowers_
 17901  003AE4  24F3               	addwf	prodl,w,c
 17902  003AE6  6EF6               	movwf	tblptrl,c
 17903  003AE8  0EFE               	movlw	high __npowers_
 17904  003AEA  20F4               	addwfc	prodh,w,c
 17905  003AEC  6EF7               	movwf	tblptrh,c
 17906  003AEE                     	if	0	;There are less than 3 active tblptr bytes
 17907  003AEE                     	endif
 17908  003AEE  0009               	tblrd		*+
 17909  003AF0  CFF5 F015          	movff	tablat,i2___ftmul@f1
 17910  003AF4  0009               	tblrd		*+
 17911  003AF6  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 17912  003AFA  000A               	tblrd		*-
 17913  003AFC  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 17914  003B00  0E00               	movlw	0
 17915  003B02  6E18               	movwf	i2___ftmul@f2,c
 17916  003B04  0E00               	movlw	0
 17917  003B06  6E19               	movwf	i2___ftmul@f2+1,c
 17918  003B08  0E3F               	movlw	63
 17919  003B0A  6E1A               	movwf	i2___ftmul@f2+2,c
 17920  003B0C  EC3B  F025         	call	i2___ftmul	;wreg free
 17921  003B10  C015  F024         	movff	?i2___ftmul,?i2_fround
 17922  003B14  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 17923  003B18  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 17924  003B1C  0012               	return	
 17925  003B1E                     __end_ofi2_fround:
 17926                           	opt stack 0
 17927                           pclatu	equ	0xFFB
 17928                           pclath	equ	0xFFA
 17929                           tblptru	equ	0xFF8
 17930                           tblptrh	equ	0xFF7
 17931                           tblptrl	equ	0xFF6
 17932                           tablat	equ	0xFF5
 17933                           prodh	equ	0xFF4
 17934                           prodl	equ	0xFF3
 17935                           intcon	equ	0xFF2
 17936                           intcon3	equ	0xFF0
 17937                           postinc0	equ	0xFEE
 17938                           fsr0h	equ	0xFEA
 17939                           fsr0l	equ	0xFE9
 17940                           wreg	equ	0xFE8
 17941                           fsr1h	equ	0xFE2
 17942                           fsr1l	equ	0xFE1
 17943                           indf2	equ	0xFDF
 17944                           postinc2	equ	0xFDE
 17945                           postdec2	equ	0xFDD
 17946                           fsr2h	equ	0xFDA
 17947                           fsr2l	equ	0xFD9
 17948                           status	equ	0xFD8
 17949                           
 17950 ;; *************** function i2___wmul *****************
 17951 ;; Defined at:
 17952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
 17953 ;; Parameters:    Size  Location     Type
 17954 ;;  multiplier      2   14[COMRAM] unsigned int 
 17955 ;;  multiplicand    2   16[COMRAM] unsigned int 
 17956 ;; Auto vars:     Size  Location     Type
 17957 ;;  __wmul          2   18[COMRAM] unsigned int 
 17958 ;; Return value:  Size  Location     Type
 17959 ;;                  2   14[COMRAM] unsigned int 
 17960 ;; Registers used:
 17961 ;;		wreg, status,2, status,0, prodl, prodh
 17962 ;; Tracked objects:
 17963 ;;		On entry : 0/0
 17964 ;;		On exit  : 0/0
 17965 ;;		Unchanged: 0/0
 17966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17971 ;;Total ram usage:        6 bytes
 17972 ;; Hardware stack levels used:    1
 17973 ;; This function calls:
 17974 ;;		Nothing
 17975 ;; This function is called by:
 17976 ;;		i2_fround
 17977 ;;		i2_scale
 17978 ;;		i2_printf
 17979 ;; This function uses a non-reentrant model
 17980 ;;
 17981                           
 17982                           	psect	text59
 17983  005CF4                     __ptext59:
 17984                           	opt stack 0
 17985  005CF4                     i2___wmul:
 17986                           	opt stack 21
 17987                           
 17988                           ;incstack = 0
 17989  005CF4  500F               	movf	i2___wmul@multiplier,w,c
 17990  005CF6  0211               	mulwf	i2___wmul@multiplicand,c
 17991  005CF8  CFF3 F013          	movff	prodl,i2___wmul@product
 17992  005CFC  CFF4 F014          	movff	prodh,i2___wmul@product+1
 17993  005D00  500F               	movf	i2___wmul@multiplier,w,c
 17994  005D02  0212               	mulwf	i2___wmul@multiplicand+1,c
 17995  005D04  50F3               	movf	prodl,w,c
 17996  005D06  2614               	addwf	i2___wmul@product+1,f,c
 17997  005D08  5010               	movf	i2___wmul@multiplier+1,w,c
 17998  005D0A  0211               	mulwf	i2___wmul@multiplicand,c
 17999  005D0C  50F3               	movf	prodl,w,c
 18000  005D0E  2614               	addwf	i2___wmul@product+1,f,c
 18001  005D10  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 18002  005D14  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 18003  005D18  0012               	return	
 18004  005D1A                     __end_ofi2___wmul:
 18005                           	opt stack 0
 18006                           pclatu	equ	0xFFB
 18007                           pclath	equ	0xFFA
 18008                           tblptru	equ	0xFF8
 18009                           tblptrh	equ	0xFF7
 18010                           tblptrl	equ	0xFF6
 18011                           tablat	equ	0xFF5
 18012                           prodh	equ	0xFF4
 18013                           prodl	equ	0xFF3
 18014                           intcon	equ	0xFF2
 18015                           intcon3	equ	0xFF0
 18016                           postinc0	equ	0xFEE
 18017                           fsr0h	equ	0xFEA
 18018                           fsr0l	equ	0xFE9
 18019                           wreg	equ	0xFE8
 18020                           fsr1h	equ	0xFE2
 18021                           fsr1l	equ	0xFE1
 18022                           indf2	equ	0xFDF
 18023                           postinc2	equ	0xFDE
 18024                           postdec2	equ	0xFDD
 18025                           fsr2h	equ	0xFDA
 18026                           fsr2l	equ	0xFD9
 18027                           status	equ	0xFD8
 18028                           
 18029 ;; *************** function i2___ftmul *****************
 18030 ;; Defined at:
 18031 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
 18032 ;; Parameters:    Size  Location     Type
 18033 ;;  f1              3   20[COMRAM] float 
 18034 ;;  f2              3   23[COMRAM] float 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;  __ftmul         3   30[COMRAM] unsigned um
 18037 ;;  __ftmul         1   34[COMRAM] unsigned char 
 18038 ;;  __ftmul         1   33[COMRAM] unsigned char 
 18039 ;;  __ftmul         1   29[COMRAM] unsigned char 
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  3   20[COMRAM] float 
 18042 ;; Registers used:
 18043 ;;		wreg, status,2, status,0, cstack
 18044 ;; Tracked objects:
 18045 ;;		On entry : 0/0
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18049 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18050 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18052 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18053 ;;Total ram usage:       15 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; Hardware stack levels required when called:    1
 18056 ;; This function calls:
 18057 ;;		i2___ftpack
 18058 ;; This function is called by:
 18059 ;;		_keypressed
 18060 ;;		i2_fround
 18061 ;;		i2_scale
 18062 ;;		i2_printf
 18063 ;; This function uses a non-reentrant model
 18064 ;;
 18065                           
 18066                           	psect	text60
 18067  004A76                     __ptext60:
 18068                           	opt stack 0
 18069  004A76                     i2___ftmul:
 18070                           	opt stack 20
 18071                           
 18072                           ;incstack = 0
 18073  004A76  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 18074  004A7A  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 18075  004A7C  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 18076  004A7E  3416               	rlcf	i2___ftmul@f1+1,w,c
 18077  004A80  361B               	rlcf	??i2___ftmul& (0+255),f,c
 18078  004A82  E301               	bnc	u662_41
 18079  004A84  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18080  004A86                     u662_41:
 18081  004A86  501B               	movf	??i2___ftmul,w,c
 18082  004A88  6E1E               	movwf	i2___ftmul@exp,c
 18083  004A8A  501E               	movf	i2___ftmul@exp,w,c
 18084  004A8C  A4D8               	btfss	status,2,c
 18085  004A8E  D007               	goto	i2l5444
 18086  004A90  0E00               	movlw	0
 18087  004A92  6E15               	movwf	?i2___ftmul,c
 18088  004A94  0E00               	movlw	0
 18089  004A96  6E16               	movwf	?i2___ftmul+1,c
 18090  004A98  0E00               	movlw	0
 18091  004A9A  6E17               	movwf	?i2___ftmul+2,c
 18092  004A9C  0012               	return	
 18093  004A9E                     i2l5444:
 18094  004A9E  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 18095  004AA2  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 18096  004AA4  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 18097  004AA6  3419               	rlcf	i2___ftmul@f2+1,w,c
 18098  004AA8  361B               	rlcf	??i2___ftmul& (0+255),f,c
 18099  004AAA  E301               	bnc	u664_41
 18100  004AAC  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 18101  004AAE                     u664_41:
 18102  004AAE  501B               	movf	??i2___ftmul,w,c
 18103  004AB0  6E23               	movwf	i2___ftmul@sign,c
 18104  004AB2  5023               	movf	i2___ftmul@sign,w,c
 18105  004AB4  A4D8               	btfss	status,2,c
 18106  004AB6  D007               	goto	i2l5450
 18107  004AB8  0E00               	movlw	0
 18108  004ABA  6E15               	movwf	?i2___ftmul,c
 18109  004ABC  0E00               	movlw	0
 18110  004ABE  6E16               	movwf	?i2___ftmul+1,c
 18111  004AC0  0E00               	movlw	0
 18112  004AC2  6E17               	movwf	?i2___ftmul+2,c
 18113  004AC4  0012               	return	
 18114  004AC6                     i2l5450:
 18115  004AC6  5023               	movf	i2___ftmul@sign,w,c
 18116  004AC8  0F7B               	addlw	123
 18117  004ACA  261E               	addwf	i2___ftmul@exp,f,c
 18118  004ACC  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 18119  004AD0  501A               	movf	i2___ftmul@f2+2,w,c
 18120  004AD2  1A23               	xorwf	i2___ftmul@sign,f,c
 18121  004AD4  0E80               	movlw	128
 18122  004AD6  1623               	andwf	i2___ftmul@sign,f,c
 18123  004AD8  8E16               	bsf	i2___ftmul@f1+1,7,c
 18124  004ADA  8E19               	bsf	i2___ftmul@f2+1,7,c
 18125  004ADC  0EFF               	movlw	255
 18126  004ADE  1618               	andwf	i2___ftmul@f2,f,c
 18127  004AE0  0EFF               	movlw	255
 18128  004AE2  1619               	andwf	i2___ftmul@f2+1,f,c
 18129  004AE4  0E00               	movlw	0
 18130  004AE6  161A               	andwf	i2___ftmul@f2+2,f,c
 18131  004AE8  0E00               	movlw	0
 18132  004AEA  6E1F               	movwf	i2___ftmul@f3_as_product,c
 18133  004AEC  0E00               	movlw	0
 18134  004AEE  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 18135  004AF0  0E00               	movlw	0
 18136  004AF2  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 18137  004AF4  0E07               	movlw	7
 18138  004AF6  6E22               	movwf	i2___ftmul@cntr,c
 18139  004AF8                     i2l5464:
 18140  004AF8  A015               	btfss	i2___ftmul@f1,0,c
 18141  004AFA  D006               	goto	i2l5468
 18142  004AFC  5018               	movf	i2___ftmul@f2,w,c
 18143  004AFE  261F               	addwf	i2___ftmul@f3_as_product,f,c
 18144  004B00  5019               	movf	i2___ftmul@f2+1,w,c
 18145  004B02  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18146  004B04  501A               	movf	i2___ftmul@f2+2,w,c
 18147  004B06  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18148  004B08                     i2l5468:
 18149  004B08  90D8               	bcf	status,0,c
 18150  004B0A  3217               	rrcf	i2___ftmul@f1+2,f,c
 18151  004B0C  3216               	rrcf	i2___ftmul@f1+1,f,c
 18152  004B0E  3215               	rrcf	i2___ftmul@f1,f,c
 18153  004B10  90D8               	bcf	status,0,c
 18154  004B12  3618               	rlcf	i2___ftmul@f2,f,c
 18155  004B14  3619               	rlcf	i2___ftmul@f2+1,f,c
 18156  004B16  361A               	rlcf	i2___ftmul@f2+2,f,c
 18157  004B18  2E22               	decfsz	i2___ftmul@cntr,f,c
 18158  004B1A  D7EE               	goto	i2l5464
 18159  004B1C  0E09               	movlw	9
 18160  004B1E  6E22               	movwf	i2___ftmul@cntr,c
 18161  004B20                     i2l5474:
 18162  004B20  A015               	btfss	i2___ftmul@f1,0,c
 18163  004B22  D006               	goto	i2l5478
 18164  004B24  5018               	movf	i2___ftmul@f2,w,c
 18165  004B26  261F               	addwf	i2___ftmul@f3_as_product,f,c
 18166  004B28  5019               	movf	i2___ftmul@f2+1,w,c
 18167  004B2A  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 18168  004B2C  501A               	movf	i2___ftmul@f2+2,w,c
 18169  004B2E  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 18170  004B30                     i2l5478:
 18171  004B30  90D8               	bcf	status,0,c
 18172  004B32  3217               	rrcf	i2___ftmul@f1+2,f,c
 18173  004B34  3216               	rrcf	i2___ftmul@f1+1,f,c
 18174  004B36  3215               	rrcf	i2___ftmul@f1,f,c
 18175  004B38  90D8               	bcf	status,0,c
 18176  004B3A  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 18177  004B3C  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 18178  004B3E  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 18179  004B40  2E22               	decfsz	i2___ftmul@cntr,f,c
 18180  004B42  D7EE               	goto	i2l5474
 18181  004B44  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 18182  004B48  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 18183  004B4C  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 18184  004B50  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 18185  004B54  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 18186  004B58  EC89  F028         	call	i2___ftpack	;wreg free
 18187  004B5C  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 18188  004B60  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 18189  004B64  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 18190  004B68  0012               	return	
 18191  004B6A                     __end_ofi2___ftmul:
 18192                           	opt stack 0
 18193                           pclatu	equ	0xFFB
 18194                           pclath	equ	0xFFA
 18195                           tblptru	equ	0xFF8
 18196                           tblptrh	equ	0xFF7
 18197                           tblptrl	equ	0xFF6
 18198                           tablat	equ	0xFF5
 18199                           prodh	equ	0xFF4
 18200                           prodl	equ	0xFF3
 18201                           intcon	equ	0xFF2
 18202                           intcon3	equ	0xFF0
 18203                           postinc0	equ	0xFEE
 18204                           fsr0h	equ	0xFEA
 18205                           fsr0l	equ	0xFE9
 18206                           wreg	equ	0xFE8
 18207                           fsr1h	equ	0xFE2
 18208                           fsr1l	equ	0xFE1
 18209                           indf2	equ	0xFDF
 18210                           postinc2	equ	0xFDE
 18211                           postdec2	equ	0xFDD
 18212                           fsr2h	equ	0xFDA
 18213                           fsr2l	equ	0xFD9
 18214                           status	equ	0xFD8
 18215                           
 18216 ;; *************** function i2___awmod *****************
 18217 ;; Defined at:
 18218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awmod.c"
 18219 ;; Parameters:    Size  Location     Type
 18220 ;;  dividend        2    0[COMRAM] int 
 18221 ;;  divisor         2    2[COMRAM] int 
 18222 ;; Auto vars:     Size  Location     Type
 18223 ;;  __awmod         1    5[COMRAM] unsigned char 
 18224 ;;  __awmod         1    4[COMRAM] unsigned char 
 18225 ;; Return value:  Size  Location     Type
 18226 ;;                  2    0[COMRAM] int 
 18227 ;; Registers used:
 18228 ;;		wreg, status,2, status,0
 18229 ;; Tracked objects:
 18230 ;;		On entry : 0/0
 18231 ;;		On exit  : 0/0
 18232 ;;		Unchanged: 0/0
 18233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18238 ;;Total ram usage:        6 bytes
 18239 ;; Hardware stack levels used:    1
 18240 ;; This function calls:
 18241 ;;		Nothing
 18242 ;; This function is called by:
 18243 ;;		i2_fround
 18244 ;;		i2_scale
 18245 ;; This function uses a non-reentrant model
 18246 ;;
 18247                           
 18248                           	psect	text61
 18249  00550E                     __ptext61:
 18250                           	opt stack 0
 18251  00550E                     i2___awmod:
 18252                           	opt stack 21
 18253                           
 18254                           ;incstack = 0
 18255  00550E  0E00               	movlw	0
 18256  005510  6E06               	movwf	i2___awmod@sign,c
 18257  005512  AE02               	btfss	i2___awmod@dividend+1,7,c
 18258  005514  D006               	goto	i2l5340
 18259  005516  6C01               	negf	i2___awmod@dividend,c
 18260  005518  1E02               	comf	i2___awmod@dividend+1,f,c
 18261  00551A  B0D8               	btfsc	status,0,c
 18262  00551C  2A02               	incf	i2___awmod@dividend+1,f,c
 18263  00551E  0E01               	movlw	1
 18264  005520  6E06               	movwf	i2___awmod@sign,c
 18265  005522                     i2l5340:
 18266  005522  AE04               	btfss	i2___awmod@divisor+1,7,c
 18267  005524  D004               	goto	i2l5344
 18268  005526  6C03               	negf	i2___awmod@divisor,c
 18269  005528  1E04               	comf	i2___awmod@divisor+1,f,c
 18270  00552A  B0D8               	btfsc	status,0,c
 18271  00552C  2A04               	incf	i2___awmod@divisor+1,f,c
 18272  00552E                     i2l5344:
 18273  00552E  5003               	movf	i2___awmod@divisor,w,c
 18274  005530  1004               	iorwf	i2___awmod@divisor+1,w,c
 18275  005532  B4D8               	btfsc	status,2,c
 18276  005534  D018               	goto	i2l5360
 18277  005536  0E01               	movlw	1
 18278  005538  6E05               	movwf	i2___awmod@counter,c
 18279  00553A  D004               	goto	i2l5350
 18280  00553C                     i2l5348:
 18281  00553C  90D8               	bcf	status,0,c
 18282  00553E  3603               	rlcf	i2___awmod@divisor,f,c
 18283  005540  3604               	rlcf	i2___awmod@divisor+1,f,c
 18284  005542  2A05               	incf	i2___awmod@counter,f,c
 18285  005544                     i2l5350:
 18286  005544  AE04               	btfss	i2___awmod@divisor+1,7,c
 18287  005546  D7FA               	goto	i2l5348
 18288  005548                     i2l5352:
 18289  005548  5003               	movf	i2___awmod@divisor,w,c
 18290  00554A  5C01               	subwf	i2___awmod@dividend,w,c
 18291  00554C  5004               	movf	i2___awmod@divisor+1,w,c
 18292  00554E  5802               	subwfb	i2___awmod@dividend+1,w,c
 18293  005550  A0D8               	btfss	status,0,c
 18294  005552  D004               	goto	i2l5356
 18295  005554  5003               	movf	i2___awmod@divisor,w,c
 18296  005556  5E01               	subwf	i2___awmod@dividend,f,c
 18297  005558  5004               	movf	i2___awmod@divisor+1,w,c
 18298  00555A  5A02               	subwfb	i2___awmod@dividend+1,f,c
 18299  00555C                     i2l5356:
 18300  00555C  90D8               	bcf	status,0,c
 18301  00555E  3204               	rrcf	i2___awmod@divisor+1,f,c
 18302  005560  3203               	rrcf	i2___awmod@divisor,f,c
 18303  005562  2E05               	decfsz	i2___awmod@counter,f,c
 18304  005564  D7F1               	goto	i2l5352
 18305  005566                     i2l5360:
 18306  005566  5006               	movf	i2___awmod@sign,w,c
 18307  005568  B4D8               	btfsc	status,2,c
 18308  00556A  D004               	goto	i2l5364
 18309  00556C  6C01               	negf	i2___awmod@dividend,c
 18310  00556E  1E02               	comf	i2___awmod@dividend+1,f,c
 18311  005570  B0D8               	btfsc	status,0,c
 18312  005572  2A02               	incf	i2___awmod@dividend+1,f,c
 18313  005574                     i2l5364:
 18314  005574  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 18315  005578  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 18316  00557C  0012               	return	
 18317  00557E                     __end_ofi2___awmod:
 18318                           	opt stack 0
 18319                           pclatu	equ	0xFFB
 18320                           pclath	equ	0xFFA
 18321                           tblptru	equ	0xFF8
 18322                           tblptrh	equ	0xFF7
 18323                           tblptrl	equ	0xFF6
 18324                           tablat	equ	0xFF5
 18325                           prodh	equ	0xFF4
 18326                           prodl	equ	0xFF3
 18327                           intcon	equ	0xFF2
 18328                           intcon3	equ	0xFF0
 18329                           postinc0	equ	0xFEE
 18330                           fsr0h	equ	0xFEA
 18331                           fsr0l	equ	0xFE9
 18332                           wreg	equ	0xFE8
 18333                           fsr1h	equ	0xFE2
 18334                           fsr1l	equ	0xFE1
 18335                           indf2	equ	0xFDF
 18336                           postinc2	equ	0xFDE
 18337                           postdec2	equ	0xFDD
 18338                           fsr2h	equ	0xFDA
 18339                           fsr2l	equ	0xFD9
 18340                           status	equ	0xFD8
 18341                           
 18342 ;; *************** function i2___awdiv *****************
 18343 ;; Defined at:
 18344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awdiv.c"
 18345 ;; Parameters:    Size  Location     Type
 18346 ;;  dividend        2    6[COMRAM] int 
 18347 ;;  divisor         2    8[COMRAM] int 
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;  __awdiv         2   12[COMRAM] int 
 18350 ;;  __awdiv         1   11[COMRAM] unsigned char 
 18351 ;;  __awdiv         1   10[COMRAM] unsigned char 
 18352 ;; Return value:  Size  Location     Type
 18353 ;;                  2    6[COMRAM] int 
 18354 ;; Registers used:
 18355 ;;		wreg, status,2, status,0
 18356 ;; Tracked objects:
 18357 ;;		On entry : 0/0
 18358 ;;		On exit  : 0/0
 18359 ;;		Unchanged: 0/0
 18360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18361 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18362 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18364 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18365 ;;Total ram usage:        8 bytes
 18366 ;; Hardware stack levels used:    1
 18367 ;; This function calls:
 18368 ;;		Nothing
 18369 ;; This function is called by:
 18370 ;;		_keypressed
 18371 ;;		i2_fround
 18372 ;;		i2_scale
 18373 ;;		i2_printf
 18374 ;; This function uses a non-reentrant model
 18375 ;;
 18376                           
 18377                           	psect	text62
 18378  00538C                     __ptext62:
 18379                           	opt stack 0
 18380  00538C                     i2___awdiv:
 18381                           	opt stack 21
 18382                           
 18383                           ;incstack = 0
 18384  00538C  0E00               	movlw	0
 18385  00538E  6E0C               	movwf	i2___awdiv@sign,c
 18386  005390  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 18387  005392  D006               	goto	i2l5296
 18388  005394  6C09               	negf	i2___awdiv@divisor,c
 18389  005396  1E0A               	comf	i2___awdiv@divisor+1,f,c
 18390  005398  B0D8               	btfsc	status,0,c
 18391  00539A  2A0A               	incf	i2___awdiv@divisor+1,f,c
 18392  00539C  0E01               	movlw	1
 18393  00539E  6E0C               	movwf	i2___awdiv@sign,c
 18394  0053A0                     i2l5296:
 18395  0053A0  AE08               	btfss	i2___awdiv@dividend+1,7,c
 18396  0053A2  D006               	goto	i2l5302
 18397  0053A4  6C07               	negf	i2___awdiv@dividend,c
 18398  0053A6  1E08               	comf	i2___awdiv@dividend+1,f,c
 18399  0053A8  B0D8               	btfsc	status,0,c
 18400  0053AA  2A08               	incf	i2___awdiv@dividend+1,f,c
 18401  0053AC  0E01               	movlw	1
 18402  0053AE  1A0C               	xorwf	i2___awdiv@sign,f,c
 18403  0053B0                     i2l5302:
 18404  0053B0  0E00               	movlw	0
 18405  0053B2  6E0E               	movwf	i2___awdiv@quotient+1,c
 18406  0053B4  0E00               	movlw	0
 18407  0053B6  6E0D               	movwf	i2___awdiv@quotient,c
 18408  0053B8  5009               	movf	i2___awdiv@divisor,w,c
 18409  0053BA  100A               	iorwf	i2___awdiv@divisor+1,w,c
 18410  0053BC  B4D8               	btfsc	status,2,c
 18411  0053BE  D01C               	goto	i2l5324
 18412  0053C0  0E01               	movlw	1
 18413  0053C2  6E0B               	movwf	i2___awdiv@counter,c
 18414  0053C4  D004               	goto	i2l5310
 18415  0053C6                     i2l5308:
 18416  0053C6  90D8               	bcf	status,0,c
 18417  0053C8  3609               	rlcf	i2___awdiv@divisor,f,c
 18418  0053CA  360A               	rlcf	i2___awdiv@divisor+1,f,c
 18419  0053CC  2A0B               	incf	i2___awdiv@counter,f,c
 18420  0053CE                     i2l5310:
 18421  0053CE  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 18422  0053D0  D7FA               	goto	i2l5308
 18423  0053D2                     i2l5312:
 18424  0053D2  90D8               	bcf	status,0,c
 18425  0053D4  360D               	rlcf	i2___awdiv@quotient,f,c
 18426  0053D6  360E               	rlcf	i2___awdiv@quotient+1,f,c
 18427  0053D8  5009               	movf	i2___awdiv@divisor,w,c
 18428  0053DA  5C07               	subwf	i2___awdiv@dividend,w,c
 18429  0053DC  500A               	movf	i2___awdiv@divisor+1,w,c
 18430  0053DE  5808               	subwfb	i2___awdiv@dividend+1,w,c
 18431  0053E0  A0D8               	btfss	status,0,c
 18432  0053E2  D005               	goto	i2l5320
 18433  0053E4  5009               	movf	i2___awdiv@divisor,w,c
 18434  0053E6  5E07               	subwf	i2___awdiv@dividend,f,c
 18435  0053E8  500A               	movf	i2___awdiv@divisor+1,w,c
 18436  0053EA  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 18437  0053EC  800D               	bsf	i2___awdiv@quotient,0,c
 18438  0053EE                     i2l5320:
 18439  0053EE  90D8               	bcf	status,0,c
 18440  0053F0  320A               	rrcf	i2___awdiv@divisor+1,f,c
 18441  0053F2  3209               	rrcf	i2___awdiv@divisor,f,c
 18442  0053F4  2E0B               	decfsz	i2___awdiv@counter,f,c
 18443  0053F6  D7ED               	goto	i2l5312
 18444  0053F8                     i2l5324:
 18445  0053F8  500C               	movf	i2___awdiv@sign,w,c
 18446  0053FA  B4D8               	btfsc	status,2,c
 18447  0053FC  D004               	goto	i2l5328
 18448  0053FE  6C0D               	negf	i2___awdiv@quotient,c
 18449  005400  1E0E               	comf	i2___awdiv@quotient+1,f,c
 18450  005402  B0D8               	btfsc	status,0,c
 18451  005404  2A0E               	incf	i2___awdiv@quotient+1,f,c
 18452  005406                     i2l5328:
 18453  005406  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 18454  00540A  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 18455  00540E  0012               	return	
 18456  005410                     __end_ofi2___awdiv:
 18457                           	opt stack 0
 18458                           pclatu	equ	0xFFB
 18459                           pclath	equ	0xFFA
 18460                           tblptru	equ	0xFF8
 18461                           tblptrh	equ	0xFF7
 18462                           tblptrl	equ	0xFF6
 18463                           tablat	equ	0xFF5
 18464                           prodh	equ	0xFF4
 18465                           prodl	equ	0xFF3
 18466                           intcon	equ	0xFF2
 18467                           intcon3	equ	0xFF0
 18468                           postinc0	equ	0xFEE
 18469                           fsr0h	equ	0xFEA
 18470                           fsr0l	equ	0xFE9
 18471                           wreg	equ	0xFE8
 18472                           fsr1h	equ	0xFE2
 18473                           fsr1l	equ	0xFE1
 18474                           indf2	equ	0xFDF
 18475                           postinc2	equ	0xFDE
 18476                           postdec2	equ	0xFDD
 18477                           fsr2h	equ	0xFDA
 18478                           fsr2l	equ	0xFD9
 18479                           status	equ	0xFD8
 18480                           
 18481 ;; *************** function i2__tdiv_to_l_ *****************
 18482 ;; Defined at:
 18483 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdivl.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;  f1              3    0[COMRAM] float 
 18486 ;;  f2              3    3[COMRAM] float 
 18487 ;; Auto vars:     Size  Location     Type
 18488 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 18489 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 18490 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  4    0[COMRAM] unsigned long 
 18493 ;; Registers used:
 18494 ;;		wreg, status,2, status,0
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18500 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18502 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18503 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18504 ;;Total ram usage:       15 bytes
 18505 ;; Hardware stack levels used:    1
 18506 ;; This function calls:
 18507 ;;		Nothing
 18508 ;; This function is called by:
 18509 ;;		i2_printf
 18510 ;; This function uses a non-reentrant model
 18511 ;;
 18512                           
 18513                           	psect	text63
 18514  00451A                     __ptext63:
 18515                           	opt stack 0
 18516  00451A                     i2__tdiv_to_l_:
 18517                           	opt stack 22
 18518                           
 18519                           ;incstack = 0
 18520  00451A  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 18521  00451E  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 18522  004520  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 18523  004522  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 18524  004524  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 18525  004526  E301               	bnc	u710_41
 18526  004528  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 18527  00452A                     u710_41:
 18528  00452A  5007               	movf	??i2__tdiv_to_l_,w,c
 18529  00452C  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 18530  00452E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 18531  004530  A4D8               	btfss	status,2,c
 18532  004532  D009               	goto	i2l5860
 18533  004534  0E00               	movlw	0
 18534  004536  6E01               	movwf	?i2__tdiv_to_l_,c
 18535  004538  0E00               	movlw	0
 18536  00453A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 18537  00453C  0E00               	movlw	0
 18538  00453E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 18539  004540  0E00               	movlw	0
 18540  004542  6E04               	movwf	?i2__tdiv_to_l_+3,c
 18541  004544  0012               	return	
 18542  004546                     i2l5860:
 18543  004546  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 18544  00454A  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 18545  00454C  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 18546  00454E  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 18547  004550  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 18548  004552  E301               	bnc	u712_41
 18549  004554  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 18550  004556                     u712_41:
 18551  004556  5007               	movf	??i2__tdiv_to_l_,w,c
 18552  004558  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 18553  00455A  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 18554  00455C  A4D8               	btfss	status,2,c
 18555  00455E  D009               	goto	i2l5866
 18556  004560  0E00               	movlw	0
 18557  004562  6E01               	movwf	?i2__tdiv_to_l_,c
 18558  004564  0E00               	movlw	0
 18559  004566  6E02               	movwf	?i2__tdiv_to_l_+1,c
 18560  004568  0E00               	movlw	0
 18561  00456A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 18562  00456C  0E00               	movlw	0
 18563  00456E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 18564  004570  0012               	return	
 18565  004572                     i2l5866:
 18566  004572  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 18567  004574  0EFF               	movlw	255
 18568  004576  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 18569  004578  0EFF               	movlw	255
 18570  00457A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 18571  00457C  0E00               	movlw	0
 18572  00457E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 18573  004580  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 18574  004582  0EFF               	movlw	255
 18575  004584  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 18576  004586  0EFF               	movlw	255
 18577  004588  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 18578  00458A  0E00               	movlw	0
 18579  00458C  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 18580  00458E  0E00               	movlw	0
 18581  004590  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 18582  004592  0E00               	movlw	0
 18583  004594  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 18584  004596  0E00               	movlw	0
 18585  004598  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 18586  00459A  0E00               	movlw	0
 18587  00459C  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 18588  00459E  0E7F               	movlw	127
 18589  0045A0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 18590  0045A2  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 18591  0045A4  0F98               	addlw	152
 18592  0045A6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 18593  0045A8  0E18               	movlw	24
 18594  0045AA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 18595  0045AC                     i2l984:
 18596  0045AC  90D8               	bcf	status,0,c
 18597  0045AE  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 18598  0045B0  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 18599  0045B2  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 18600  0045B4  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 18601  0045B6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 18602  0045B8  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 18603  0045BA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 18604  0045BC  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 18605  0045BE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 18606  0045C0  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 18607  0045C2  A0D8               	btfss	status,0,c
 18608  0045C4  D007               	goto	i2l985
 18609  0045C6  5004               	movf	i2__tdiv_to_l_@f2,w,c
 18610  0045C8  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 18611  0045CA  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 18612  0045CC  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 18613  0045CE  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 18614  0045D0  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 18615  0045D2  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 18616  0045D4                     i2l985:
 18617  0045D4  90D8               	bcf	status,0,c
 18618  0045D6  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 18619  0045D8  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 18620  0045DA  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 18621  0045DC  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 18622  0045DE  D7E6               	goto	i2l984
 18623  0045E0  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 18624  0045E2  D016               	goto	i2l5900
 18625  0045E4  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 18626  0045E6  0A80               	xorlw	128
 18627  0045E8  0F97               	addlw	151
 18628  0045EA  B0D8               	btfsc	status,0,c
 18629  0045EC  D009               	goto	i2l5896
 18630  0045EE  0E00               	movlw	0
 18631  0045F0  6E01               	movwf	?i2__tdiv_to_l_,c
 18632  0045F2  0E00               	movlw	0
 18633  0045F4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 18634  0045F6  0E00               	movlw	0
 18635  0045F8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 18636  0045FA  0E00               	movlw	0
 18637  0045FC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 18638  0045FE  0012               	return	
 18639  004600                     i2l5896:
 18640  004600  90D8               	bcf	status,0,c
 18641  004602  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 18642  004604  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 18643  004606  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 18644  004608  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 18645  00460A  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 18646  00460C  D7F9               	goto	i2l5896
 18647  00460E  D015               	goto	i2l991
 18648  004610                     i2l5900:
 18649  004610  0E17               	movlw	23
 18650  004612  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 18651  004614  D00F               	goto	i2l5908
 18652  004616  0E00               	movlw	0
 18653  004618  6E01               	movwf	?i2__tdiv_to_l_,c
 18654  00461A  0E00               	movlw	0
 18655  00461C  6E02               	movwf	?i2__tdiv_to_l_+1,c
 18656  00461E  0E00               	movlw	0
 18657  004620  6E03               	movwf	?i2__tdiv_to_l_+2,c
 18658  004622  0E00               	movlw	0
 18659  004624  6E04               	movwf	?i2__tdiv_to_l_+3,c
 18660  004626  0012               	return	
 18661  004628                     i2l5906:
 18662  004628  90D8               	bcf	status,0,c
 18663  00462A  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 18664  00462C  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 18665  00462E  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 18666  004630  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 18667  004632  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 18668  004634                     i2l5908:
 18669  004634  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 18670  004636  A4D8               	btfss	status,2,c
 18671  004638  D7F7               	goto	i2l5906
 18672  00463A                     i2l991:
 18673  00463A  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 18674  00463E  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 18675  004642  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 18676  004646  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 18677  00464A  0012               	return		;funcret
 18678  00464C                     __end_ofi2__tdiv_to_l_:
 18679                           	opt stack 0
 18680                           pclatu	equ	0xFFB
 18681                           pclath	equ	0xFFA
 18682                           tblptru	equ	0xFF8
 18683                           tblptrh	equ	0xFF7
 18684                           tblptrl	equ	0xFF6
 18685                           tablat	equ	0xFF5
 18686                           prodh	equ	0xFF4
 18687                           prodl	equ	0xFF3
 18688                           intcon	equ	0xFF2
 18689                           intcon3	equ	0xFF0
 18690                           postinc0	equ	0xFEE
 18691                           fsr0h	equ	0xFEA
 18692                           fsr0l	equ	0xFE9
 18693                           wreg	equ	0xFE8
 18694                           fsr1h	equ	0xFE2
 18695                           fsr1l	equ	0xFE1
 18696                           indf2	equ	0xFDF
 18697                           postinc2	equ	0xFDE
 18698                           postdec2	equ	0xFDD
 18699                           fsr2h	equ	0xFDA
 18700                           fsr2l	equ	0xFD9
 18701                           status	equ	0xFD8
 18702                           
 18703 ;; *************** function i2__div_to_l_ *****************
 18704 ;; Defined at:
 18705 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fldivl.c"
 18706 ;; Parameters:    Size  Location     Type
 18707 ;;  f1              3    0[COMRAM] unsigned long 
 18708 ;;  f2              3    3[COMRAM] unsigned long 
 18709 ;; Auto vars:     Size  Location     Type
 18710 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 18711 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 18712 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 18713 ;; Return value:  Size  Location     Type
 18714 ;;                  4    0[COMRAM] unsigned long 
 18715 ;; Registers used:
 18716 ;;		wreg, status,2, status,0
 18717 ;; Tracked objects:
 18718 ;;		On entry : 0/0
 18719 ;;		On exit  : 0/0
 18720 ;;		Unchanged: 0/0
 18721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18722 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18723 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18725 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18726 ;;Total ram usage:       12 bytes
 18727 ;; Hardware stack levels used:    1
 18728 ;; This function calls:
 18729 ;;		Nothing
 18730 ;; This function is called by:
 18731 ;;		i2_printf
 18732 ;; This function uses a non-reentrant model
 18733 ;;
 18734                           
 18735                           	psect	text64
 18736  00464C                     __ptext64:
 18737                           	opt stack 0
 18738  00464C                     i2__div_to_l_:
 18739                           	opt stack 22
 18740                           
 18741                           ;incstack = 0
 18742  00464C  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 18743  00464E  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 18744  004650  6E0C               	movwf	i2__div_to_l_@exp1,c
 18745  004652  500C               	movf	i2__div_to_l_@exp1,w,c
 18746  004654  A4D8               	btfss	status,2,c
 18747  004656  D009               	goto	i2l5754
 18748  004658  0E00               	movlw	0
 18749  00465A  6E01               	movwf	?i2__div_to_l_,c
 18750  00465C  0E00               	movlw	0
 18751  00465E  6E02               	movwf	?i2__div_to_l_+1,c
 18752  004660  0E00               	movlw	0
 18753  004662  6E03               	movwf	?i2__div_to_l_+2,c
 18754  004664  0E00               	movlw	0
 18755  004666  6E04               	movwf	?i2__div_to_l_+3,c
 18756  004668  0012               	return	
 18757  00466A                     i2l5754:
 18758  00466A  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 18759  00466C  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 18760  00466E  6E0B               	movwf	i2__div_to_l_@cntr,c
 18761  004670  500B               	movf	i2__div_to_l_@cntr,w,c
 18762  004672  A4D8               	btfss	status,2,c
 18763  004674  D009               	goto	i2l5760
 18764  004676  0E00               	movlw	0
 18765  004678  6E01               	movwf	?i2__div_to_l_,c
 18766  00467A  0E00               	movlw	0
 18767  00467C  6E02               	movwf	?i2__div_to_l_+1,c
 18768  00467E  0E00               	movlw	0
 18769  004680  6E03               	movwf	?i2__div_to_l_+2,c
 18770  004682  0E00               	movlw	0
 18771  004684  6E04               	movwf	?i2__div_to_l_+3,c
 18772  004686  0012               	return	
 18773  004688                     i2l5760:
 18774  004688  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 18775  00468A  0EFF               	movlw	255
 18776  00468C  1601               	andwf	i2__div_to_l_@f1,f,c
 18777  00468E  0EFF               	movlw	255
 18778  004690  1602               	andwf	i2__div_to_l_@f1+1,f,c
 18779  004692  0EFF               	movlw	255
 18780  004694  1603               	andwf	i2__div_to_l_@f1+2,f,c
 18781  004696  0E00               	movlw	0
 18782  004698  1604               	andwf	i2__div_to_l_@f1+3,f,c
 18783  00469A  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 18784  00469C  0EFF               	movlw	255
 18785  00469E  1604               	andwf	i2__div_to_l_@f2,f,c
 18786  0046A0  0EFF               	movlw	255
 18787  0046A2  1605               	andwf	i2__div_to_l_@f2+1,f,c
 18788  0046A4  0EFF               	movlw	255
 18789  0046A6  1606               	andwf	i2__div_to_l_@f2+2,f,c
 18790  0046A8  0E00               	movlw	0
 18791  0046AA  1607               	andwf	i2__div_to_l_@f2+3,f,c
 18792  0046AC  0E00               	movlw	0
 18793  0046AE  6E07               	movwf	i2__div_to_l_@quot,c
 18794  0046B0  0E00               	movlw	0
 18795  0046B2  6E08               	movwf	i2__div_to_l_@quot+1,c
 18796  0046B4  0E00               	movlw	0
 18797  0046B6  6E09               	movwf	i2__div_to_l_@quot+2,c
 18798  0046B8  0E00               	movlw	0
 18799  0046BA  6E0A               	movwf	i2__div_to_l_@quot+3,c
 18800  0046BC  0E7F               	movlw	127
 18801  0046BE  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 18802  0046C0  500B               	movf	i2__div_to_l_@cntr,w,c
 18803  0046C2  0FA0               	addlw	160
 18804  0046C4  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 18805  0046C6  0E20               	movlw	32
 18806  0046C8  6E0B               	movwf	i2__div_to_l_@cntr,c
 18807  0046CA                     i2l5774:
 18808  0046CA  90D8               	bcf	status,0,c
 18809  0046CC  3607               	rlcf	i2__div_to_l_@quot,f,c
 18810  0046CE  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 18811  0046D0  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 18812  0046D2  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 18813  0046D4  5004               	movf	i2__div_to_l_@f2,w,c
 18814  0046D6  5C01               	subwf	i2__div_to_l_@f1,w,c
 18815  0046D8  5005               	movf	i2__div_to_l_@f2+1,w,c
 18816  0046DA  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 18817  0046DC  5006               	movf	i2__div_to_l_@f2+2,w,c
 18818  0046DE  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 18819  0046E0  5007               	movf	i2__div_to_l_@f2+3,w,c
 18820  0046E2  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 18821  0046E4  A0D8               	btfss	status,0,c
 18822  0046E6  D009               	goto	i2l5782
 18823  0046E8  5004               	movf	i2__div_to_l_@f2,w,c
 18824  0046EA  5E01               	subwf	i2__div_to_l_@f1,f,c
 18825  0046EC  5005               	movf	i2__div_to_l_@f2+1,w,c
 18826  0046EE  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 18827  0046F0  5006               	movf	i2__div_to_l_@f2+2,w,c
 18828  0046F2  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 18829  0046F4  5007               	movf	i2__div_to_l_@f2+3,w,c
 18830  0046F6  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 18831  0046F8  8007               	bsf	i2__div_to_l_@quot,0,c
 18832  0046FA                     i2l5782:
 18833  0046FA  90D8               	bcf	status,0,c
 18834  0046FC  3601               	rlcf	i2__div_to_l_@f1,f,c
 18835  0046FE  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 18836  004700  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 18837  004702  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 18838  004704  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 18839  004706  D7E1               	goto	i2l5774
 18840  004708  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 18841  00470A  D016               	goto	i2l5798
 18842  00470C  500C               	movf	i2__div_to_l_@exp1,w,c
 18843  00470E  0A80               	xorlw	128
 18844  004710  0F9F               	addlw	159
 18845  004712  B0D8               	btfsc	status,0,c
 18846  004714  D009               	goto	i2l5794
 18847  004716  0E00               	movlw	0
 18848  004718  6E01               	movwf	?i2__div_to_l_,c
 18849  00471A  0E00               	movlw	0
 18850  00471C  6E02               	movwf	?i2__div_to_l_+1,c
 18851  00471E  0E00               	movlw	0
 18852  004720  6E03               	movwf	?i2__div_to_l_+2,c
 18853  004722  0E00               	movlw	0
 18854  004724  6E04               	movwf	?i2__div_to_l_+3,c
 18855  004726  0012               	return	
 18856  004728                     i2l5794:
 18857  004728  90D8               	bcf	status,0,c
 18858  00472A  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 18859  00472C  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 18860  00472E  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 18861  004730  3207               	rrcf	i2__div_to_l_@quot,f,c
 18862  004732  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 18863  004734  D7F9               	goto	i2l5794
 18864  004736  D015               	goto	i2l887
 18865  004738                     i2l5798:
 18866  004738  0E1F               	movlw	31
 18867  00473A  640C               	cpfsgt	i2__div_to_l_@exp1,c
 18868  00473C  D00F               	goto	i2l5806
 18869  00473E  0E00               	movlw	0
 18870  004740  6E01               	movwf	?i2__div_to_l_,c
 18871  004742  0E00               	movlw	0
 18872  004744  6E02               	movwf	?i2__div_to_l_+1,c
 18873  004746  0E00               	movlw	0
 18874  004748  6E03               	movwf	?i2__div_to_l_+2,c
 18875  00474A  0E00               	movlw	0
 18876  00474C  6E04               	movwf	?i2__div_to_l_+3,c
 18877  00474E  0012               	return	
 18878  004750                     i2l5804:
 18879  004750  90D8               	bcf	status,0,c
 18880  004752  3607               	rlcf	i2__div_to_l_@quot,f,c
 18881  004754  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 18882  004756  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 18883  004758  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 18884  00475A  060C               	decf	i2__div_to_l_@exp1,f,c
 18885  00475C                     i2l5806:
 18886  00475C  500C               	movf	i2__div_to_l_@exp1,w,c
 18887  00475E  A4D8               	btfss	status,2,c
 18888  004760  D7F7               	goto	i2l5804
 18889  004762                     i2l887:
 18890  004762  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 18891  004766  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 18892  00476A  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 18893  00476E  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 18894  004772  0012               	return		;funcret
 18895  004774                     __end_ofi2__div_to_l_:
 18896                           	opt stack 0
 18897                           pclatu	equ	0xFFB
 18898                           pclath	equ	0xFFA
 18899                           tblptru	equ	0xFF8
 18900                           tblptrh	equ	0xFF7
 18901                           tblptrl	equ	0xFF6
 18902                           tablat	equ	0xFF5
 18903                           prodh	equ	0xFF4
 18904                           prodl	equ	0xFF3
 18905                           intcon	equ	0xFF2
 18906                           intcon3	equ	0xFF0
 18907                           postinc0	equ	0xFEE
 18908                           fsr0h	equ	0xFEA
 18909                           fsr0l	equ	0xFE9
 18910                           wreg	equ	0xFE8
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           indf2	equ	0xFDF
 18914                           postinc2	equ	0xFDE
 18915                           postdec2	equ	0xFDD
 18916                           fsr2h	equ	0xFDA
 18917                           fsr2l	equ	0xFD9
 18918                           status	equ	0xFD8
 18919                           
 18920 ;; *************** function i2___lltoft *****************
 18921 ;; Defined at:
 18922 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lltoft.c"
 18923 ;; Parameters:    Size  Location     Type
 18924 ;;  c               4    8[COMRAM] unsigned long 
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;  __lltoft        1   16[COMRAM] unsigned char 
 18927 ;; Return value:  Size  Location     Type
 18928 ;;                  3    8[COMRAM] float 
 18929 ;; Registers used:
 18930 ;;		wreg, status,2, status,0, cstack
 18931 ;; Tracked objects:
 18932 ;;		On entry : 0/0
 18933 ;;		On exit  : 0/0
 18934 ;;		Unchanged: 0/0
 18935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18939 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18940 ;;Total ram usage:        9 bytes
 18941 ;; Hardware stack levels used:    1
 18942 ;; Hardware stack levels required when called:    1
 18943 ;; This function calls:
 18944 ;;		i2___ftpack
 18945 ;; This function is called by:
 18946 ;;		i2_printf
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           	psect	text65
 18951  0056AC                     __ptext65:
 18952                           	opt stack 0
 18953  0056AC                     i2___lltoft:
 18954                           	opt stack 21
 18955                           
 18956                           ;incstack = 0
 18957  0056AC  0E8E               	movlw	142
 18958  0056AE  6E11               	movwf	i2___lltoft@exp,c
 18959  0056B0  D006               	goto	i2l6040
 18960  0056B2                     i2l6038:
 18961  0056B2  90D8               	bcf	status,0,c
 18962  0056B4  320C               	rrcf	i2___lltoft@c+3,f,c
 18963  0056B6  320B               	rrcf	i2___lltoft@c+2,f,c
 18964  0056B8  320A               	rrcf	i2___lltoft@c+1,f,c
 18965  0056BA  3209               	rrcf	i2___lltoft@c,f,c
 18966  0056BC  2A11               	incf	i2___lltoft@exp,f,c
 18967  0056BE                     i2l6040:
 18968  0056BE  0E00               	movlw	0
 18969  0056C0  1409               	andwf	i2___lltoft@c,w,c
 18970  0056C2  6E0D               	movwf	??i2___lltoft& (0+255),c
 18971  0056C4  0E00               	movlw	0
 18972  0056C6  140A               	andwf	i2___lltoft@c+1,w,c
 18973  0056C8  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 18974  0056CA  0E00               	movlw	0
 18975  0056CC  140B               	andwf	i2___lltoft@c+2,w,c
 18976  0056CE  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 18977  0056D0  0EFF               	movlw	255
 18978  0056D2  140C               	andwf	i2___lltoft@c+3,w,c
 18979  0056D4  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 18980  0056D6  500D               	movf	??i2___lltoft,w,c
 18981  0056D8  100E               	iorwf	??i2___lltoft+1,w,c
 18982  0056DA  100F               	iorwf	??i2___lltoft+2,w,c
 18983  0056DC  1010               	iorwf	??i2___lltoft+3,w,c
 18984  0056DE  A4D8               	btfss	status,2,c
 18985  0056E0  D7E8               	goto	i2l6038
 18986  0056E2  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 18987  0056E6  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 18988  0056EA  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 18989  0056EE  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 18990  0056F2  0E00               	movlw	0
 18991  0056F4  6E05               	movwf	i2___ftpack@sign,c
 18992  0056F6  EC89  F028         	call	i2___ftpack	;wreg free
 18993  0056FA  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 18994  0056FE  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 18995  005702  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 18996  005706  0012               	return	
 18997  005708                     __end_ofi2___lltoft:
 18998                           	opt stack 0
 18999                           pclatu	equ	0xFFB
 19000                           pclath	equ	0xFFA
 19001                           tblptru	equ	0xFF8
 19002                           tblptrh	equ	0xFF7
 19003                           tblptrl	equ	0xFF6
 19004                           tablat	equ	0xFF5
 19005                           prodh	equ	0xFF4
 19006                           prodl	equ	0xFF3
 19007                           intcon	equ	0xFF2
 19008                           intcon3	equ	0xFF0
 19009                           postinc0	equ	0xFEE
 19010                           fsr0h	equ	0xFEA
 19011                           fsr0l	equ	0xFE9
 19012                           wreg	equ	0xFE8
 19013                           fsr1h	equ	0xFE2
 19014                           fsr1l	equ	0xFE1
 19015                           indf2	equ	0xFDF
 19016                           postinc2	equ	0xFDE
 19017                           postdec2	equ	0xFDD
 19018                           fsr2h	equ	0xFDA
 19019                           fsr2l	equ	0xFD9
 19020                           status	equ	0xFD8
 19021                           
 19022 ;; *************** function i2___llmod *****************
 19023 ;; Defined at:
 19024 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\llmod.c"
 19025 ;; Parameters:    Size  Location     Type
 19026 ;;  dividend        4   13[COMRAM] unsigned long 
 19027 ;;  divisor         4   17[COMRAM] unsigned long 
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;  __llmod         1   21[COMRAM] unsigned char 
 19030 ;; Return value:  Size  Location     Type
 19031 ;;                  4   13[COMRAM] unsigned long 
 19032 ;; Registers used:
 19033 ;;		wreg, status,2, status,0
 19034 ;; Tracked objects:
 19035 ;;		On entry : 0/0
 19036 ;;		On exit  : 0/0
 19037 ;;		Unchanged: 0/0
 19038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19042 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19043 ;;Total ram usage:        9 bytes
 19044 ;; Hardware stack levels used:    1
 19045 ;; This function calls:
 19046 ;;		Nothing
 19047 ;; This function is called by:
 19048 ;;		i2_printf
 19049 ;; This function uses a non-reentrant model
 19050 ;;
 19051                           
 19052                           	psect	text66
 19053  0055E6                     __ptext66:
 19054                           	opt stack 0
 19055  0055E6                     i2___llmod:
 19056                           	opt stack 22
 19057                           
 19058                           ;incstack = 0
 19059  0055E6  5012               	movf	i2___llmod@divisor,w,c
 19060  0055E8  1013               	iorwf	i2___llmod@divisor+1,w,c
 19061  0055EA  1014               	iorwf	i2___llmod@divisor+2,w,c
 19062  0055EC  1015               	iorwf	i2___llmod@divisor+3,w,c
 19063  0055EE  B4D8               	btfsc	status,2,c
 19064  0055F0  D024               	goto	i2l1076
 19065  0055F2  0E01               	movlw	1
 19066  0055F4  6E16               	movwf	i2___llmod@counter,c
 19067  0055F6  D006               	goto	i2l6026
 19068  0055F8                     i2l6024:
 19069  0055F8  90D8               	bcf	status,0,c
 19070  0055FA  3612               	rlcf	i2___llmod@divisor,f,c
 19071  0055FC  3613               	rlcf	i2___llmod@divisor+1,f,c
 19072  0055FE  3614               	rlcf	i2___llmod@divisor+2,f,c
 19073  005600  3615               	rlcf	i2___llmod@divisor+3,f,c
 19074  005602  2A16               	incf	i2___llmod@counter,f,c
 19075  005604                     i2l6026:
 19076  005604  AE15               	btfss	i2___llmod@divisor+3,7,c
 19077  005606  D7F8               	goto	i2l6024
 19078  005608                     i2l6028:
 19079  005608  5012               	movf	i2___llmod@divisor,w,c
 19080  00560A  5C0E               	subwf	i2___llmod@dividend,w,c
 19081  00560C  5013               	movf	i2___llmod@divisor+1,w,c
 19082  00560E  580F               	subwfb	i2___llmod@dividend+1,w,c
 19083  005610  5014               	movf	i2___llmod@divisor+2,w,c
 19084  005612  5810               	subwfb	i2___llmod@dividend+2,w,c
 19085  005614  5015               	movf	i2___llmod@divisor+3,w,c
 19086  005616  5811               	subwfb	i2___llmod@dividend+3,w,c
 19087  005618  A0D8               	btfss	status,0,c
 19088  00561A  D008               	goto	i2l6032
 19089  00561C  5012               	movf	i2___llmod@divisor,w,c
 19090  00561E  5E0E               	subwf	i2___llmod@dividend,f,c
 19091  005620  5013               	movf	i2___llmod@divisor+1,w,c
 19092  005622  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 19093  005624  5014               	movf	i2___llmod@divisor+2,w,c
 19094  005626  5A10               	subwfb	i2___llmod@dividend+2,f,c
 19095  005628  5015               	movf	i2___llmod@divisor+3,w,c
 19096  00562A  5A11               	subwfb	i2___llmod@dividend+3,f,c
 19097  00562C                     i2l6032:
 19098  00562C  90D8               	bcf	status,0,c
 19099  00562E  3215               	rrcf	i2___llmod@divisor+3,f,c
 19100  005630  3214               	rrcf	i2___llmod@divisor+2,f,c
 19101  005632  3213               	rrcf	i2___llmod@divisor+1,f,c
 19102  005634  3212               	rrcf	i2___llmod@divisor,f,c
 19103  005636  2E16               	decfsz	i2___llmod@counter,f,c
 19104  005638  D7E7               	goto	i2l6028
 19105  00563A                     i2l1076:
 19106  00563A  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 19107  00563E  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 19108  005642  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 19109  005646  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 19110  00564A  0012               	return		;funcret
 19111  00564C                     __end_ofi2___llmod:
 19112                           	opt stack 0
 19113                           pclatu	equ	0xFFB
 19114                           pclath	equ	0xFFA
 19115                           tblptru	equ	0xFF8
 19116                           tblptrh	equ	0xFF7
 19117                           tblptrl	equ	0xFF6
 19118                           tablat	equ	0xFF5
 19119                           prodh	equ	0xFF4
 19120                           prodl	equ	0xFF3
 19121                           intcon	equ	0xFF2
 19122                           intcon3	equ	0xFF0
 19123                           postinc0	equ	0xFEE
 19124                           fsr0h	equ	0xFEA
 19125                           fsr0l	equ	0xFE9
 19126                           wreg	equ	0xFE8
 19127                           fsr1h	equ	0xFE2
 19128                           fsr1l	equ	0xFE1
 19129                           indf2	equ	0xFDF
 19130                           postinc2	equ	0xFDE
 19131                           postdec2	equ	0xFDD
 19132                           fsr2h	equ	0xFDA
 19133                           fsr2l	equ	0xFD9
 19134                           status	equ	0xFD8
 19135                           
 19136 ;; *************** function i2___lldiv *****************
 19137 ;; Defined at:
 19138 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lldiv.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;  dividend        4    0[COMRAM] unsigned long 
 19141 ;;  divisor         4    4[COMRAM] unsigned long 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;  __lldiv         4    8[COMRAM] unsigned long 
 19144 ;;  __lldiv         1   12[COMRAM] unsigned char 
 19145 ;; Return value:  Size  Location     Type
 19146 ;;                  4    0[COMRAM] unsigned long 
 19147 ;; Registers used:
 19148 ;;		wreg, status,2, status,0
 19149 ;; Tracked objects:
 19150 ;;		On entry : 0/0
 19151 ;;		On exit  : 0/0
 19152 ;;		Unchanged: 0/0
 19153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19154 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19155 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19157 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19158 ;;Total ram usage:       13 bytes
 19159 ;; Hardware stack levels used:    1
 19160 ;; This function calls:
 19161 ;;		Nothing
 19162 ;; This function is called by:
 19163 ;;		i2_printf
 19164 ;; This function uses a non-reentrant model
 19165 ;;
 19166                           
 19167                           	psect	text67
 19168  005410                     __ptext67:
 19169                           	opt stack 0
 19170  005410                     i2___lldiv:
 19171                           	opt stack 22
 19172                           
 19173                           ;incstack = 0
 19174  005410  0E00               	movlw	0
 19175  005412  6E09               	movwf	i2___lldiv@quotient,c
 19176  005414  0E00               	movlw	0
 19177  005416  6E0A               	movwf	i2___lldiv@quotient+1,c
 19178  005418  0E00               	movlw	0
 19179  00541A  6E0B               	movwf	i2___lldiv@quotient+2,c
 19180  00541C  0E00               	movlw	0
 19181  00541E  6E0C               	movwf	i2___lldiv@quotient+3,c
 19182  005420  5005               	movf	i2___lldiv@divisor,w,c
 19183  005422  1006               	iorwf	i2___lldiv@divisor+1,w,c
 19184  005424  1007               	iorwf	i2___lldiv@divisor+2,w,c
 19185  005426  1008               	iorwf	i2___lldiv@divisor+3,w,c
 19186  005428  B4D8               	btfsc	status,2,c
 19187  00542A  D02A               	goto	i2l1066
 19188  00542C  0E01               	movlw	1
 19189  00542E  6E0D               	movwf	i2___lldiv@counter,c
 19190  005430  D006               	goto	i2l6006
 19191  005432                     i2l6004:
 19192  005432  90D8               	bcf	status,0,c
 19193  005434  3605               	rlcf	i2___lldiv@divisor,f,c
 19194  005436  3606               	rlcf	i2___lldiv@divisor+1,f,c
 19195  005438  3607               	rlcf	i2___lldiv@divisor+2,f,c
 19196  00543A  3608               	rlcf	i2___lldiv@divisor+3,f,c
 19197  00543C  2A0D               	incf	i2___lldiv@counter,f,c
 19198  00543E                     i2l6006:
 19199  00543E  AE08               	btfss	i2___lldiv@divisor+3,7,c
 19200  005440  D7F8               	goto	i2l6004
 19201  005442                     i2l6008:
 19202  005442  90D8               	bcf	status,0,c
 19203  005444  3609               	rlcf	i2___lldiv@quotient,f,c
 19204  005446  360A               	rlcf	i2___lldiv@quotient+1,f,c
 19205  005448  360B               	rlcf	i2___lldiv@quotient+2,f,c
 19206  00544A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 19207  00544C  5005               	movf	i2___lldiv@divisor,w,c
 19208  00544E  5C01               	subwf	i2___lldiv@dividend,w,c
 19209  005450  5006               	movf	i2___lldiv@divisor+1,w,c
 19210  005452  5802               	subwfb	i2___lldiv@dividend+1,w,c
 19211  005454  5007               	movf	i2___lldiv@divisor+2,w,c
 19212  005456  5803               	subwfb	i2___lldiv@dividend+2,w,c
 19213  005458  5008               	movf	i2___lldiv@divisor+3,w,c
 19214  00545A  5804               	subwfb	i2___lldiv@dividend+3,w,c
 19215  00545C  A0D8               	btfss	status,0,c
 19216  00545E  D009               	goto	i2l6016
 19217  005460  5005               	movf	i2___lldiv@divisor,w,c
 19218  005462  5E01               	subwf	i2___lldiv@dividend,f,c
 19219  005464  5006               	movf	i2___lldiv@divisor+1,w,c
 19220  005466  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 19221  005468  5007               	movf	i2___lldiv@divisor+2,w,c
 19222  00546A  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 19223  00546C  5008               	movf	i2___lldiv@divisor+3,w,c
 19224  00546E  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 19225  005470  8009               	bsf	i2___lldiv@quotient,0,c
 19226  005472                     i2l6016:
 19227  005472  90D8               	bcf	status,0,c
 19228  005474  3208               	rrcf	i2___lldiv@divisor+3,f,c
 19229  005476  3207               	rrcf	i2___lldiv@divisor+2,f,c
 19230  005478  3206               	rrcf	i2___lldiv@divisor+1,f,c
 19231  00547A  3205               	rrcf	i2___lldiv@divisor,f,c
 19232  00547C  2E0D               	decfsz	i2___lldiv@counter,f,c
 19233  00547E  D7E1               	goto	i2l6008
 19234  005480                     i2l1066:
 19235  005480  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 19236  005484  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 19237  005488  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 19238  00548C  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 19239  005490  0012               	return		;funcret
 19240  005492                     __end_ofi2___lldiv:
 19241                           	opt stack 0
 19242                           pclatu	equ	0xFFB
 19243                           pclath	equ	0xFFA
 19244                           tblptru	equ	0xFF8
 19245                           tblptrh	equ	0xFF7
 19246                           tblptrl	equ	0xFF6
 19247                           tablat	equ	0xFF5
 19248                           prodh	equ	0xFF4
 19249                           prodl	equ	0xFF3
 19250                           intcon	equ	0xFF2
 19251                           intcon3	equ	0xFF0
 19252                           postinc0	equ	0xFEE
 19253                           fsr0h	equ	0xFEA
 19254                           fsr0l	equ	0xFE9
 19255                           wreg	equ	0xFE8
 19256                           fsr1h	equ	0xFE2
 19257                           fsr1l	equ	0xFE1
 19258                           indf2	equ	0xFDF
 19259                           postinc2	equ	0xFDE
 19260                           postdec2	equ	0xFDD
 19261                           fsr2h	equ	0xFDA
 19262                           fsr2l	equ	0xFD9
 19263                           status	equ	0xFD8
 19264                           
 19265 ;; *************** function i2___fttol *****************
 19266 ;; Defined at:
 19267 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  f1              3   35[COMRAM] float 
 19270 ;; Auto vars:     Size  Location     Type
 19271 ;;  __fttol         4   45[COMRAM] unsigned long 
 19272 ;;  __fttol         1   49[COMRAM] unsigned char 
 19273 ;;  __fttol         1   44[COMRAM] unsigned char 
 19274 ;; Return value:  Size  Location     Type
 19275 ;;                  4   35[COMRAM] long 
 19276 ;; Registers used:
 19277 ;;		wreg, status,2, status,0
 19278 ;; Tracked objects:
 19279 ;;		On entry : 0/0
 19280 ;;		On exit  : 0/0
 19281 ;;		Unchanged: 0/0
 19282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19284 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19285 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19286 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19287 ;;Total ram usage:       15 bytes
 19288 ;; Hardware stack levels used:    1
 19289 ;; This function calls:
 19290 ;;		Nothing
 19291 ;; This function is called by:
 19292 ;;		_keypressed
 19293 ;;		i2_ultrasonicFindBottle
 19294 ;;		i2_printf
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           	psect	text68
 19299  004B6A                     __ptext68:
 19300                           	opt stack 0
 19301  004B6A                     i2___fttol:
 19302                           	opt stack 22
 19303                           
 19304                           ;incstack = 0
 19305  004B6A  C026  F028         	movff	i2___fttol@f1+2,??i2___fttol
 19306  004B6E  6A29               	clrf	(??i2___fttol+1)& (0+255),c
 19307  004B70  6A2A               	clrf	(??i2___fttol+2)& (0+255),c
 19308  004B72  3425               	rlcf	i2___fttol@f1+1,w,c
 19309  004B74  3628               	rlcf	??i2___fttol& (0+255),f,c
 19310  004B76  E301               	bnc	u724_41
 19311  004B78  8029               	bsf	(??i2___fttol+1)& (0+255),0,c
 19312  004B7A                     u724_41:
 19313  004B7A  5028               	movf	??i2___fttol,w,c
 19314  004B7C  6E32               	movwf	i2___fttol@exp1,c
 19315  004B7E  5032               	movf	i2___fttol@exp1,w,c
 19316  004B80  A4D8               	btfss	status,2,c
 19317  004B82  D009               	goto	i2l5946
 19318  004B84  0E00               	movlw	0
 19319  004B86  6E24               	movwf	?i2___fttol,c
 19320  004B88  0E00               	movlw	0
 19321  004B8A  6E25               	movwf	?i2___fttol+1,c
 19322  004B8C  0E00               	movlw	0
 19323  004B8E  6E26               	movwf	?i2___fttol+2,c
 19324  004B90  0E00               	movlw	0
 19325  004B92  6E27               	movwf	?i2___fttol+3,c
 19326  004B94  0012               	return	
 19327  004B96                     i2l5946:
 19328  004B96  0E17               	movlw	23
 19329  004B98  6E28               	movwf	??i2___fttol& (0+255),c
 19330  004B9A  C024  F029         	movff	i2___fttol@f1,??i2___fttol+1
 19331  004B9E  C025  F02A         	movff	i2___fttol@f1+1,??i2___fttol+2
 19332  004BA2  C026  F02B         	movff	i2___fttol@f1+2,??i2___fttol+3
 19333  004BA6  2828               	incf	??i2___fttol,w,c
 19334  004BA8  6E2C               	movwf	(??i2___fttol+4)& (0+255),c
 19335  004BAA  D004               	goto	i2u726_40
 19336  004BAC                     i2u726_45:
 19337  004BAC  90D8               	bcf	status,0,c
 19338  004BAE  322B               	rrcf	??i2___fttol+3,f,c
 19339  004BB0  322A               	rrcf	??i2___fttol+2,f,c
 19340  004BB2  3229               	rrcf	??i2___fttol+1,f,c
 19341  004BB4                     i2u726_40:
 19342  004BB4  2E2C               	decfsz	(??i2___fttol+4)& (0+255),f,c
 19343  004BB6  D7FA               	goto	i2u726_45
 19344  004BB8  5029               	movf	??i2___fttol+1,w,c
 19345  004BBA  6E2D               	movwf	i2___fttol@sign1,c
 19346  004BBC  8E25               	bsf	i2___fttol@f1+1,7,c
 19347  004BBE  0EFF               	movlw	255
 19348  004BC0  1624               	andwf	i2___fttol@f1,f,c
 19349  004BC2  0EFF               	movlw	255
 19350  004BC4  1625               	andwf	i2___fttol@f1+1,f,c
 19351  004BC6  0E00               	movlw	0
 19352  004BC8  1626               	andwf	i2___fttol@f1+2,f,c
 19353  004BCA  5024               	movf	i2___fttol@f1,w,c
 19354  004BCC  6E2E               	movwf	i2___fttol@lval,c
 19355  004BCE  5025               	movf	i2___fttol@f1+1,w,c
 19356  004BD0  6E2F               	movwf	i2___fttol@lval+1,c
 19357  004BD2  5026               	movf	i2___fttol@f1+2,w,c
 19358  004BD4  6E30               	movwf	i2___fttol@lval+2,c
 19359  004BD6  6A31               	clrf	i2___fttol@lval+3,c
 19360  004BD8  0E8E               	movlw	142
 19361  004BDA  5E32               	subwf	i2___fttol@exp1,f,c
 19362  004BDC  AE32               	btfss	i2___fttol@exp1,7,c
 19363  004BDE  D016               	goto	i2l5968
 19364  004BE0  5032               	movf	i2___fttol@exp1,w,c
 19365  004BE2  0A80               	xorlw	128
 19366  004BE4  0F8F               	addlw	143
 19367  004BE6  B0D8               	btfsc	status,0,c
 19368  004BE8  D009               	goto	i2l5964
 19369  004BEA  0E00               	movlw	0
 19370  004BEC  6E24               	movwf	?i2___fttol,c
 19371  004BEE  0E00               	movlw	0
 19372  004BF0  6E25               	movwf	?i2___fttol+1,c
 19373  004BF2  0E00               	movlw	0
 19374  004BF4  6E26               	movwf	?i2___fttol+2,c
 19375  004BF6  0E00               	movlw	0
 19376  004BF8  6E27               	movwf	?i2___fttol+3,c
 19377  004BFA  0012               	return	
 19378  004BFC                     i2l5964:
 19379  004BFC  90D8               	bcf	status,0,c
 19380  004BFE  3231               	rrcf	i2___fttol@lval+3,f,c
 19381  004C00  3230               	rrcf	i2___fttol@lval+2,f,c
 19382  004C02  322F               	rrcf	i2___fttol@lval+1,f,c
 19383  004C04  322E               	rrcf	i2___fttol@lval,f,c
 19384  004C06  3E32               	incfsz	i2___fttol@exp1,f,c
 19385  004C08  D7F9               	goto	i2l5964
 19386  004C0A  D015               	goto	i2l5978
 19387  004C0C                     i2l5968:
 19388  004C0C  0E17               	movlw	23
 19389  004C0E  6432               	cpfsgt	i2___fttol@exp1,c
 19390  004C10  D00F               	goto	i2l5976
 19391  004C12  0E00               	movlw	0
 19392  004C14  6E24               	movwf	?i2___fttol,c
 19393  004C16  0E00               	movlw	0
 19394  004C18  6E25               	movwf	?i2___fttol+1,c
 19395  004C1A  0E00               	movlw	0
 19396  004C1C  6E26               	movwf	?i2___fttol+2,c
 19397  004C1E  0E00               	movlw	0
 19398  004C20  6E27               	movwf	?i2___fttol+3,c
 19399  004C22  0012               	return	
 19400  004C24                     i2l5974:
 19401  004C24  90D8               	bcf	status,0,c
 19402  004C26  362E               	rlcf	i2___fttol@lval,f,c
 19403  004C28  362F               	rlcf	i2___fttol@lval+1,f,c
 19404  004C2A  3630               	rlcf	i2___fttol@lval+2,f,c
 19405  004C2C  3631               	rlcf	i2___fttol@lval+3,f,c
 19406  004C2E  0632               	decf	i2___fttol@exp1,f,c
 19407  004C30                     i2l5976:
 19408  004C30  5032               	movf	i2___fttol@exp1,w,c
 19409  004C32  A4D8               	btfss	status,2,c
 19410  004C34  D7F7               	goto	i2l5974
 19411  004C36                     i2l5978:
 19412  004C36  502D               	movf	i2___fttol@sign1,w,c
 19413  004C38  B4D8               	btfsc	status,2,c
 19414  004C3A  D008               	goto	i2l5982
 19415  004C3C  1E31               	comf	i2___fttol@lval+3,f,c
 19416  004C3E  1E30               	comf	i2___fttol@lval+2,f,c
 19417  004C40  1E2F               	comf	i2___fttol@lval+1,f,c
 19418  004C42  6C2E               	negf	i2___fttol@lval,c
 19419  004C44  0E00               	movlw	0
 19420  004C46  222F               	addwfc	i2___fttol@lval+1,f,c
 19421  004C48  2230               	addwfc	i2___fttol@lval+2,f,c
 19422  004C4A  2231               	addwfc	i2___fttol@lval+3,f,c
 19423  004C4C                     i2l5982:
 19424  004C4C  C02E  F024         	movff	i2___fttol@lval,?i2___fttol
 19425  004C50  C02F  F025         	movff	i2___fttol@lval+1,?i2___fttol+1
 19426  004C54  C030  F026         	movff	i2___fttol@lval+2,?i2___fttol+2
 19427  004C58  C031  F027         	movff	i2___fttol@lval+3,?i2___fttol+3
 19428  004C5C  0012               	return	
 19429  004C5E                     __end_ofi2___fttol:
 19430                           	opt stack 0
 19431                           pclatu	equ	0xFFB
 19432                           pclath	equ	0xFFA
 19433                           tblptru	equ	0xFF8
 19434                           tblptrh	equ	0xFF7
 19435                           tblptrl	equ	0xFF6
 19436                           tablat	equ	0xFF5
 19437                           prodh	equ	0xFF4
 19438                           prodl	equ	0xFF3
 19439                           intcon	equ	0xFF2
 19440                           intcon3	equ	0xFF0
 19441                           postinc0	equ	0xFEE
 19442                           fsr0h	equ	0xFEA
 19443                           fsr0l	equ	0xFE9
 19444                           wreg	equ	0xFE8
 19445                           fsr1h	equ	0xFE2
 19446                           fsr1l	equ	0xFE1
 19447                           indf2	equ	0xFDF
 19448                           postinc2	equ	0xFDE
 19449                           postdec2	equ	0xFDD
 19450                           fsr2h	equ	0xFDA
 19451                           fsr2l	equ	0xFD9
 19452                           status	equ	0xFD8
 19453                           
 19454 ;; *************** function i2___ftsub *****************
 19455 ;; Defined at:
 19456 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftsub.c"
 19457 ;; Parameters:    Size  Location     Type
 19458 ;;  f1              3   57[COMRAM] float 
 19459 ;;  f2              3   60[COMRAM] float 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;		None
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  3   57[COMRAM] float 
 19464 ;; Registers used:
 19465 ;;		wreg, status,2, status,0, cstack
 19466 ;; Tracked objects:
 19467 ;;		On entry : 0/0
 19468 ;;		On exit  : 0/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19471 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19475 ;;Total ram usage:        6 bytes
 19476 ;; Hardware stack levels used:    1
 19477 ;; Hardware stack levels required when called:    2
 19478 ;; This function calls:
 19479 ;;		i2___ftadd
 19480 ;; This function is called by:
 19481 ;;		i2_printf
 19482 ;; This function uses a non-reentrant model
 19483 ;;
 19484                           
 19485                           	psect	text69
 19486  005A3A                     __ptext69:
 19487                           	opt stack 0
 19488  005A3A                     i2___ftsub:
 19489                           	opt stack 20
 19490                           
 19491                           ;incstack = 0
 19492  005A3A  503D               	movf	i2___ftsub@f2,w,c
 19493  005A3C  103E               	iorwf	i2___ftsub@f2+1,w,c
 19494  005A3E  103F               	iorwf	i2___ftsub@f2+2,w,c
 19495  005A40  B4D8               	btfsc	status,2,c
 19496  005A42  D006               	goto	i2l5936
 19497  005A44  0E00               	movlw	0
 19498  005A46  1A3D               	xorwf	i2___ftsub@f2,f,c
 19499  005A48  0E00               	movlw	0
 19500  005A4A  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 19501  005A4C  0E80               	movlw	128
 19502  005A4E  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 19503  005A50                     i2l5936:
 19504  005A50  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 19505  005A54  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 19506  005A58  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 19507  005A5C  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 19508  005A60  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 19509  005A64  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 19510  005A68  EC8F  F01D         	call	i2___ftadd	;wreg free
 19511  005A6C  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 19512  005A70  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 19513  005A74  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 19514  005A78  0012               	return	
 19515  005A7A                     __end_ofi2___ftsub:
 19516                           	opt stack 0
 19517                           pclatu	equ	0xFFB
 19518                           pclath	equ	0xFFA
 19519                           tblptru	equ	0xFF8
 19520                           tblptrh	equ	0xFF7
 19521                           tblptrl	equ	0xFF6
 19522                           tablat	equ	0xFF5
 19523                           prodh	equ	0xFF4
 19524                           prodl	equ	0xFF3
 19525                           intcon	equ	0xFF2
 19526                           intcon3	equ	0xFF0
 19527                           postinc0	equ	0xFEE
 19528                           fsr0h	equ	0xFEA
 19529                           fsr0l	equ	0xFE9
 19530                           wreg	equ	0xFE8
 19531                           fsr1h	equ	0xFE2
 19532                           fsr1l	equ	0xFE1
 19533                           indf2	equ	0xFDF
 19534                           postinc2	equ	0xFDE
 19535                           postdec2	equ	0xFDD
 19536                           fsr2h	equ	0xFDA
 19537                           fsr2l	equ	0xFD9
 19538                           status	equ	0xFD8
 19539                           
 19540 ;; *************** function i2___ftadd *****************
 19541 ;; Defined at:
 19542 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
 19543 ;; Parameters:    Size  Location     Type
 19544 ;;  f1              3   45[COMRAM] float 
 19545 ;;  f2              3   48[COMRAM] float 
 19546 ;; Auto vars:     Size  Location     Type
 19547 ;;  __ftadd         1   56[COMRAM] unsigned char 
 19548 ;;  __ftadd         1   55[COMRAM] unsigned char 
 19549 ;;  __ftadd         1   54[COMRAM] unsigned char 
 19550 ;; Return value:  Size  Location     Type
 19551 ;;                  3   45[COMRAM] float 
 19552 ;; Registers used:
 19553 ;;		wreg, status,2, status,0, cstack
 19554 ;; Tracked objects:
 19555 ;;		On entry : 0/0
 19556 ;;		On exit  : 0/0
 19557 ;;		Unchanged: 0/0
 19558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19559 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19560 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19561 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19562 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19563 ;;Total ram usage:       12 bytes
 19564 ;; Hardware stack levels used:    1
 19565 ;; Hardware stack levels required when called:    1
 19566 ;; This function calls:
 19567 ;;		i2___ftpack
 19568 ;; This function is called by:
 19569 ;;		_keypressed
 19570 ;;		i2_printf
 19571 ;;		i2___ftsub
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575                           	psect	text70
 19576  003B1E                     __ptext70:
 19577                           	opt stack 0
 19578  003B1E                     i2___ftadd:
 19579                           	opt stack 20
 19580                           
 19581                           ;incstack = 0
 19582  003B1E  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 19583  003B22  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 19584  003B24  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 19585  003B26  342F               	rlcf	i2___ftadd@f1+1,w,c
 19586  003B28  3634               	rlcf	??i2___ftadd& (0+255),f,c
 19587  003B2A  E301               	bnc	u641_41
 19588  003B2C  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 19589  003B2E                     u641_41:
 19590  003B2E  5034               	movf	??i2___ftadd,w,c
 19591  003B30  6E39               	movwf	i2___ftadd@exp1,c
 19592  003B32  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 19593  003B36  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 19594  003B38  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 19595  003B3A  3432               	rlcf	i2___ftadd@f2+1,w,c
 19596  003B3C  3634               	rlcf	??i2___ftadd& (0+255),f,c
 19597  003B3E  E301               	bnc	u642_41
 19598  003B40  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 19599  003B42                     u642_41:
 19600  003B42  5034               	movf	??i2___ftadd,w,c
 19601  003B44  6E38               	movwf	i2___ftadd@exp2,c
 19602  003B46  5039               	movf	i2___ftadd@exp1,w,c
 19603  003B48  B4D8               	btfsc	status,2,c
 19604  003B4A  D00B               	goto	i2l942
 19605  003B4C  5038               	movf	i2___ftadd@exp2,w,c
 19606  003B4E  5C39               	subwf	i2___ftadd@exp1,w,c
 19607  003B50  B0D8               	btfsc	status,0,c
 19608  003B52  D00E               	goto	i2l5376
 19609  003B54  5039               	movf	i2___ftadd@exp1,w,c
 19610  003B56  0800               	sublw	0
 19611  003B58  2438               	addwf	i2___ftadd@exp2,w,c
 19612  003B5A  6E34               	movwf	??i2___ftadd& (0+255),c
 19613  003B5C  0E18               	movlw	24
 19614  003B5E  6434               	cpfsgt	??i2___ftadd,c
 19615  003B60  D007               	goto	i2l5376
 19616  003B62                     i2l942:
 19617  003B62  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 19618  003B66  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 19619  003B6A  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 19620  003B6E  0012               	return	
 19621  003B70                     i2l5376:
 19622  003B70  5038               	movf	i2___ftadd@exp2,w,c
 19623  003B72  B4D8               	btfsc	status,2,c
 19624  003B74  D00B               	goto	i2l946
 19625  003B76  5039               	movf	i2___ftadd@exp1,w,c
 19626  003B78  5C38               	subwf	i2___ftadd@exp2,w,c
 19627  003B7A  B0D8               	btfsc	status,0,c
 19628  003B7C  D00E               	goto	i2l5382
 19629  003B7E  5038               	movf	i2___ftadd@exp2,w,c
 19630  003B80  0800               	sublw	0
 19631  003B82  2439               	addwf	i2___ftadd@exp1,w,c
 19632  003B84  6E34               	movwf	??i2___ftadd& (0+255),c
 19633  003B86  0E18               	movlw	24
 19634  003B88  6434               	cpfsgt	??i2___ftadd,c
 19635  003B8A  D007               	goto	i2l5382
 19636  003B8C                     i2l946:
 19637  003B8C  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 19638  003B90  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 19639  003B94  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 19640  003B98  0012               	return	
 19641  003B9A                     i2l5382:
 19642  003B9A  0E06               	movlw	6
 19643  003B9C  6E37               	movwf	i2___ftadd@sign,c
 19644  003B9E  BE30               	btfsc	i2___ftadd@f1+2,7,c
 19645  003BA0  8E37               	bsf	i2___ftadd@sign,7,c
 19646  003BA2  BE33               	btfsc	i2___ftadd@f2+2,7,c
 19647  003BA4  8C37               	bsf	i2___ftadd@sign,6,c
 19648  003BA6  8E2F               	bsf	i2___ftadd@f1+1,7,c
 19649  003BA8  0EFF               	movlw	255
 19650  003BAA  162E               	andwf	i2___ftadd@f1,f,c
 19651  003BAC  0EFF               	movlw	255
 19652  003BAE  162F               	andwf	i2___ftadd@f1+1,f,c
 19653  003BB0  0E00               	movlw	0
 19654  003BB2  1630               	andwf	i2___ftadd@f1+2,f,c
 19655  003BB4  8E32               	bsf	i2___ftadd@f2+1,7,c
 19656  003BB6  0EFF               	movlw	255
 19657  003BB8  1631               	andwf	i2___ftadd@f2,f,c
 19658  003BBA  0EFF               	movlw	255
 19659  003BBC  1632               	andwf	i2___ftadd@f2+1,f,c
 19660  003BBE  0E00               	movlw	0
 19661  003BC0  1633               	andwf	i2___ftadd@f2+2,f,c
 19662  003BC2  5038               	movf	i2___ftadd@exp2,w,c
 19663  003BC4  5C39               	subwf	i2___ftadd@exp1,w,c
 19664  003BC6  B0D8               	btfsc	status,0,c
 19665  003BC8  D01B               	goto	i2l5408
 19666  003BCA                     i2l5398:
 19667  003BCA  90D8               	bcf	status,0,c
 19668  003BCC  3631               	rlcf	i2___ftadd@f2,f,c
 19669  003BCE  3632               	rlcf	i2___ftadd@f2+1,f,c
 19670  003BD0  3633               	rlcf	i2___ftadd@f2+2,f,c
 19671  003BD2  0638               	decf	i2___ftadd@exp2,f,c
 19672  003BD4  5039               	movf	i2___ftadd@exp1,w,c
 19673  003BD6  1838               	xorwf	i2___ftadd@exp2,w,c
 19674  003BD8  B4D8               	btfsc	status,2,c
 19675  003BDA  D00D               	goto	i2l5406
 19676  003BDC  0637               	decf	i2___ftadd@sign,f,c
 19677  003BDE  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 19678  003BE2  0E07               	movlw	7
 19679  003BE4  1634               	andwf	??i2___ftadd,f,c
 19680  003BE6  B4D8               	btfsc	status,2,c
 19681  003BE8  D006               	goto	i2l5406
 19682  003BEA  D7EF               	goto	i2l5398
 19683  003BEC                     i2l5404:
 19684  003BEC  90D8               	bcf	status,0,c
 19685  003BEE  3230               	rrcf	i2___ftadd@f1+2,f,c
 19686  003BF0  322F               	rrcf	i2___ftadd@f1+1,f,c
 19687  003BF2  322E               	rrcf	i2___ftadd@f1,f,c
 19688  003BF4  2A39               	incf	i2___ftadd@exp1,f,c
 19689  003BF6                     i2l5406:
 19690  003BF6  5038               	movf	i2___ftadd@exp2,w,c
 19691  003BF8  1839               	xorwf	i2___ftadd@exp1,w,c
 19692  003BFA  B4D8               	btfsc	status,2,c
 19693  003BFC  D01F               	goto	i2l957
 19694  003BFE  D7F6               	goto	i2l5404
 19695  003C00                     i2l5408:
 19696  003C00  5039               	movf	i2___ftadd@exp1,w,c
 19697  003C02  5C38               	subwf	i2___ftadd@exp2,w,c
 19698  003C04  B0D8               	btfsc	status,0,c
 19699  003C06  D01A               	goto	i2l957
 19700  003C08                     i2l5410:
 19701  003C08  90D8               	bcf	status,0,c
 19702  003C0A  362E               	rlcf	i2___ftadd@f1,f,c
 19703  003C0C  362F               	rlcf	i2___ftadd@f1+1,f,c
 19704  003C0E  3630               	rlcf	i2___ftadd@f1+2,f,c
 19705  003C10  0639               	decf	i2___ftadd@exp1,f,c
 19706  003C12  5039               	movf	i2___ftadd@exp1,w,c
 19707  003C14  1838               	xorwf	i2___ftadd@exp2,w,c
 19708  003C16  B4D8               	btfsc	status,2,c
 19709  003C18  D00D               	goto	i2l5418
 19710  003C1A  0637               	decf	i2___ftadd@sign,f,c
 19711  003C1C  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 19712  003C20  0E07               	movlw	7
 19713  003C22  1634               	andwf	??i2___ftadd,f,c
 19714  003C24  B4D8               	btfsc	status,2,c
 19715  003C26  D006               	goto	i2l5418
 19716  003C28  D7EF               	goto	i2l5410
 19717  003C2A                     i2l5416:
 19718  003C2A  90D8               	bcf	status,0,c
 19719  003C2C  3233               	rrcf	i2___ftadd@f2+2,f,c
 19720  003C2E  3232               	rrcf	i2___ftadd@f2+1,f,c
 19721  003C30  3231               	rrcf	i2___ftadd@f2,f,c
 19722  003C32  2A38               	incf	i2___ftadd@exp2,f,c
 19723  003C34                     i2l5418:
 19724  003C34  5038               	movf	i2___ftadd@exp2,w,c
 19725  003C36  1839               	xorwf	i2___ftadd@exp1,w,c
 19726  003C38  A4D8               	btfss	status,2,c
 19727  003C3A  D7F7               	goto	i2l5416
 19728  003C3C                     i2l957:
 19729  003C3C  AE37               	btfss	i2___ftadd@sign,7,c
 19730  003C3E  D00C               	goto	i2l966
 19731  003C40  0EFF               	movlw	255
 19732  003C42  1A2E               	xorwf	i2___ftadd@f1,f,c
 19733  003C44  0EFF               	movlw	255
 19734  003C46  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 19735  003C48  0EFF               	movlw	255
 19736  003C4A  1A30               	xorwf	i2___ftadd@f1+2,f,c
 19737  003C4C  0E01               	movlw	1
 19738  003C4E  262E               	addwf	i2___ftadd@f1,f,c
 19739  003C50  0E00               	movlw	0
 19740  003C52  222F               	addwfc	i2___ftadd@f1+1,f,c
 19741  003C54  0E00               	movlw	0
 19742  003C56  2230               	addwfc	i2___ftadd@f1+2,f,c
 19743  003C58                     i2l966:
 19744  003C58  AC37               	btfss	i2___ftadd@sign,6,c
 19745  003C5A  D00C               	goto	i2l5424
 19746  003C5C  0EFF               	movlw	255
 19747  003C5E  1A31               	xorwf	i2___ftadd@f2,f,c
 19748  003C60  0EFF               	movlw	255
 19749  003C62  1A32               	xorwf	i2___ftadd@f2+1,f,c
 19750  003C64  0EFF               	movlw	255
 19751  003C66  1A33               	xorwf	i2___ftadd@f2+2,f,c
 19752  003C68  0E01               	movlw	1
 19753  003C6A  2631               	addwf	i2___ftadd@f2,f,c
 19754  003C6C  0E00               	movlw	0
 19755  003C6E  2232               	addwfc	i2___ftadd@f2+1,f,c
 19756  003C70  0E00               	movlw	0
 19757  003C72  2233               	addwfc	i2___ftadd@f2+2,f,c
 19758  003C74                     i2l5424:
 19759  003C74  0E00               	movlw	0
 19760  003C76  6E37               	movwf	i2___ftadd@sign,c
 19761  003C78  502E               	movf	i2___ftadd@f1,w,c
 19762  003C7A  2631               	addwf	i2___ftadd@f2,f,c
 19763  003C7C  502F               	movf	i2___ftadd@f1+1,w,c
 19764  003C7E  2232               	addwfc	i2___ftadd@f2+1,f,c
 19765  003C80  5030               	movf	i2___ftadd@f1+2,w,c
 19766  003C82  2233               	addwfc	i2___ftadd@f2+2,f,c
 19767  003C84  AE33               	btfss	i2___ftadd@f2+2,7,c
 19768  003C86  D00E               	goto	i2l5434
 19769  003C88  0EFF               	movlw	255
 19770  003C8A  1A31               	xorwf	i2___ftadd@f2,f,c
 19771  003C8C  0EFF               	movlw	255
 19772  003C8E  1A32               	xorwf	i2___ftadd@f2+1,f,c
 19773  003C90  0EFF               	movlw	255
 19774  003C92  1A33               	xorwf	i2___ftadd@f2+2,f,c
 19775  003C94  0E01               	movlw	1
 19776  003C96  2631               	addwf	i2___ftadd@f2,f,c
 19777  003C98  0E00               	movlw	0
 19778  003C9A  2232               	addwfc	i2___ftadd@f2+1,f,c
 19779  003C9C  0E00               	movlw	0
 19780  003C9E  2233               	addwfc	i2___ftadd@f2+2,f,c
 19781  003CA0  0E01               	movlw	1
 19782  003CA2  6E37               	movwf	i2___ftadd@sign,c
 19783  003CA4                     i2l5434:
 19784  003CA4  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 19785  003CA8  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 19786  003CAC  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 19787  003CB0  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 19788  003CB4  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 19789  003CB8  EC89  F028         	call	i2___ftpack	;wreg free
 19790  003CBC  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 19791  003CC0  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 19792  003CC4  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 19793  003CC8  0012               	return	
 19794  003CCA                     __end_ofi2___ftadd:
 19795                           	opt stack 0
 19796                           pclatu	equ	0xFFB
 19797                           pclath	equ	0xFFA
 19798                           tblptru	equ	0xFF8
 19799                           tblptrh	equ	0xFF7
 19800                           tblptrl	equ	0xFF6
 19801                           tablat	equ	0xFF5
 19802                           prodh	equ	0xFF4
 19803                           prodl	equ	0xFF3
 19804                           intcon	equ	0xFF2
 19805                           intcon3	equ	0xFF0
 19806                           postinc0	equ	0xFEE
 19807                           fsr0h	equ	0xFEA
 19808                           fsr0l	equ	0xFE9
 19809                           wreg	equ	0xFE8
 19810                           fsr1h	equ	0xFE2
 19811                           fsr1l	equ	0xFE1
 19812                           indf2	equ	0xFDF
 19813                           postinc2	equ	0xFDE
 19814                           postdec2	equ	0xFDD
 19815                           fsr2h	equ	0xFDA
 19816                           fsr2l	equ	0xFD9
 19817                           status	equ	0xFD8
 19818                           
 19819 ;; *************** function i2___ftpack *****************
 19820 ;; Defined at:
 19821 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
 19822 ;; Parameters:    Size  Location     Type
 19823 ;;  arg             3    0[COMRAM] unsigned um
 19824 ;;  exp             1    3[COMRAM] unsigned char 
 19825 ;;  sign            1    4[COMRAM] unsigned char 
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;		None
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  3    0[COMRAM] float 
 19830 ;; Registers used:
 19831 ;;		wreg, status,2, status,0
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19837 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19839 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19840 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19841 ;;Total ram usage:        8 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; This function calls:
 19844 ;;		Nothing
 19845 ;; This function is called by:
 19846 ;;		i2___awtoft
 19847 ;;		i2___ftadd
 19848 ;;		i2___ftdiv
 19849 ;;		i2___ftmul
 19850 ;;		i2___lltoft
 19851 ;; This function uses a non-reentrant model
 19852 ;;
 19853                           
 19854                           	psect	text71
 19855  005112                     __ptext71:
 19856                           	opt stack 0
 19857  005112                     i2___ftpack:
 19858                           	opt stack 21
 19859                           
 19860                           ;incstack = 0
 19861  005112  5004               	movf	i2___ftpack@exp,w,c
 19862  005114  B4D8               	btfsc	status,2,c
 19863  005116  D005               	goto	i2l4850
 19864  005118  5001               	movf	i2___ftpack@arg,w,c
 19865  00511A  1002               	iorwf	i2___ftpack@arg+1,w,c
 19866  00511C  1003               	iorwf	i2___ftpack@arg+2,w,c
 19867  00511E  A4D8               	btfss	status,2,c
 19868  005120  D00C               	goto	i2l4856
 19869  005122                     i2l4850:
 19870  005122  0E00               	movlw	0
 19871  005124  6E01               	movwf	?i2___ftpack,c
 19872  005126  0E00               	movlw	0
 19873  005128  6E02               	movwf	?i2___ftpack+1,c
 19874  00512A  0E00               	movlw	0
 19875  00512C  6E03               	movwf	?i2___ftpack+2,c
 19876  00512E  0012               	return	
 19877  005130                     i2l4854:
 19878  005130  2A04               	incf	i2___ftpack@exp,f,c
 19879  005132  90D8               	bcf	status,0,c
 19880  005134  3203               	rrcf	i2___ftpack@arg+2,f,c
 19881  005136  3202               	rrcf	i2___ftpack@arg+1,f,c
 19882  005138  3201               	rrcf	i2___ftpack@arg,f,c
 19883  00513A                     i2l4856:
 19884  00513A  0E00               	movlw	0
 19885  00513C  1401               	andwf	i2___ftpack@arg,w,c
 19886  00513E  6E06               	movwf	??i2___ftpack& (0+255),c
 19887  005140  0E00               	movlw	0
 19888  005142  1402               	andwf	i2___ftpack@arg+1,w,c
 19889  005144  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 19890  005146  0EFE               	movlw	254
 19891  005148  1403               	andwf	i2___ftpack@arg+2,w,c
 19892  00514A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 19893  00514C  5006               	movf	??i2___ftpack,w,c
 19894  00514E  1007               	iorwf	??i2___ftpack+1,w,c
 19895  005150  1008               	iorwf	??i2___ftpack+2,w,c
 19896  005152  B4D8               	btfsc	status,2,c
 19897  005154  D00C               	goto	i2l4862
 19898  005156  D7EC               	goto	i2l4854
 19899  005158                     i2l4858:
 19900  005158  2A04               	incf	i2___ftpack@exp,f,c
 19901  00515A  0E01               	movlw	1
 19902  00515C  2601               	addwf	i2___ftpack@arg,f,c
 19903  00515E  0E00               	movlw	0
 19904  005160  2202               	addwfc	i2___ftpack@arg+1,f,c
 19905  005162  0E00               	movlw	0
 19906  005164  2203               	addwfc	i2___ftpack@arg+2,f,c
 19907  005166  90D8               	bcf	status,0,c
 19908  005168  3203               	rrcf	i2___ftpack@arg+2,f,c
 19909  00516A  3202               	rrcf	i2___ftpack@arg+1,f,c
 19910  00516C  3201               	rrcf	i2___ftpack@arg,f,c
 19911  00516E                     i2l4862:
 19912  00516E  0E00               	movlw	0
 19913  005170  1401               	andwf	i2___ftpack@arg,w,c
 19914  005172  6E06               	movwf	??i2___ftpack& (0+255),c
 19915  005174  0E00               	movlw	0
 19916  005176  1402               	andwf	i2___ftpack@arg+1,w,c
 19917  005178  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 19918  00517A  0EFF               	movlw	255
 19919  00517C  1403               	andwf	i2___ftpack@arg+2,w,c
 19920  00517E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 19921  005180  5006               	movf	??i2___ftpack,w,c
 19922  005182  1007               	iorwf	??i2___ftpack+1,w,c
 19923  005184  1008               	iorwf	??i2___ftpack+2,w,c
 19924  005186  B4D8               	btfsc	status,2,c
 19925  005188  D006               	goto	i2l4866
 19926  00518A  D7E6               	goto	i2l4858
 19927  00518C                     i2l4864:
 19928  00518C  0604               	decf	i2___ftpack@exp,f,c
 19929  00518E  90D8               	bcf	status,0,c
 19930  005190  3601               	rlcf	i2___ftpack@arg,f,c
 19931  005192  3602               	rlcf	i2___ftpack@arg+1,f,c
 19932  005194  3603               	rlcf	i2___ftpack@arg+2,f,c
 19933  005196                     i2l4866:
 19934  005196  BE02               	btfsc	i2___ftpack@arg+1,7,c
 19935  005198  D003               	goto	i2l919
 19936  00519A  0E02               	movlw	2
 19937  00519C  6004               	cpfslt	i2___ftpack@exp,c
 19938  00519E  D7F6               	goto	i2l4864
 19939  0051A0                     i2l919:
 19940  0051A0  A004               	btfss	i2___ftpack@exp,0,c
 19941  0051A2  9E02               	bcf	i2___ftpack@arg+1,7,c
 19942  0051A4  90D8               	bcf	status,0,c
 19943  0051A6  3204               	rrcf	i2___ftpack@exp,f,c
 19944  0051A8  5004               	movf	i2___ftpack@exp,w,c
 19945  0051AA  1203               	iorwf	i2___ftpack@arg+2,f,c
 19946  0051AC  5005               	movf	i2___ftpack@sign,w,c
 19947  0051AE  A4D8               	btfss	status,2,c
 19948  0051B0  8E03               	bsf	i2___ftpack@arg+2,7,c
 19949  0051B2  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 19950  0051B6  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 19951  0051BA  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 19952  0051BE  0012               	return	
 19953  0051C0                     __end_ofi2___ftpack:
 19954                           	opt stack 0
 19955                           pclatu	equ	0xFFB
 19956                           pclath	equ	0xFFA
 19957                           tblptru	equ	0xFF8
 19958                           tblptrh	equ	0xFF7
 19959                           tblptrl	equ	0xFF6
 19960                           tablat	equ	0xFF5
 19961                           prodh	equ	0xFF4
 19962                           prodl	equ	0xFF3
 19963                           intcon	equ	0xFF2
 19964                           intcon3	equ	0xFF0
 19965                           postinc0	equ	0xFEE
 19966                           fsr0h	equ	0xFEA
 19967                           fsr0l	equ	0xFE9
 19968                           wreg	equ	0xFE8
 19969                           fsr1h	equ	0xFE2
 19970                           fsr1l	equ	0xFE1
 19971                           indf2	equ	0xFDF
 19972                           postinc2	equ	0xFDE
 19973                           postdec2	equ	0xFDD
 19974                           fsr2h	equ	0xFDA
 19975                           fsr2l	equ	0xFD9
 19976                           status	equ	0xFD8
 19977                           
 19978 ;; *************** function i2___ftneg *****************
 19979 ;; Defined at:
 19980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
 19981 ;; Parameters:    Size  Location     Type
 19982 ;;  f1              3    0[COMRAM] float 
 19983 ;; Auto vars:     Size  Location     Type
 19984 ;;		None
 19985 ;; Return value:  Size  Location     Type
 19986 ;;                  3    0[COMRAM] float 
 19987 ;; Registers used:
 19988 ;;		wreg, status,2, status,0
 19989 ;; Tracked objects:
 19990 ;;		On entry : 0/0
 19991 ;;		On exit  : 0/0
 19992 ;;		Unchanged: 0/0
 19993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19994 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19997 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19998 ;;Total ram usage:        3 bytes
 19999 ;; Hardware stack levels used:    1
 20000 ;; This function calls:
 20001 ;;		Nothing
 20002 ;; This function is called by:
 20003 ;;		i2_printf
 20004 ;; This function uses a non-reentrant model
 20005 ;;
 20006                           
 20007                           	psect	text72
 20008  005D62                     __ptext72:
 20009                           	opt stack 0
 20010  005D62                     i2___ftneg:
 20011                           	opt stack 22
 20012                           
 20013                           ;incstack = 0
 20014  005D62  5001               	movf	i2___ftneg@f1,w,c
 20015  005D64  1002               	iorwf	i2___ftneg@f1+1,w,c
 20016  005D66  1003               	iorwf	i2___ftneg@f1+2,w,c
 20017  005D68  B4D8               	btfsc	status,2,c
 20018  005D6A  D006               	goto	i2l1016
 20019  005D6C  0E00               	movlw	0
 20020  005D6E  1A01               	xorwf	i2___ftneg@f1,f,c
 20021  005D70  0E00               	movlw	0
 20022  005D72  1A02               	xorwf	i2___ftneg@f1+1,f,c
 20023  005D74  0E80               	movlw	128
 20024  005D76  1A03               	xorwf	i2___ftneg@f1+2,f,c
 20025  005D78                     i2l1016:
 20026  005D78  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 20027  005D7C  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 20028  005D80  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 20029  005D84  0012               	return		;funcret
 20030  005D86                     __end_ofi2___ftneg:
 20031                           	opt stack 0
 20032                           pclatu	equ	0xFFB
 20033                           pclath	equ	0xFFA
 20034                           tblptru	equ	0xFF8
 20035                           tblptrh	equ	0xFF7
 20036                           tblptrl	equ	0xFF6
 20037                           tablat	equ	0xFF5
 20038                           prodh	equ	0xFF4
 20039                           prodl	equ	0xFF3
 20040                           intcon	equ	0xFF2
 20041                           intcon3	equ	0xFF0
 20042                           postinc0	equ	0xFEE
 20043                           fsr0h	equ	0xFEA
 20044                           fsr0l	equ	0xFE9
 20045                           wreg	equ	0xFE8
 20046                           fsr1h	equ	0xFE2
 20047                           fsr1l	equ	0xFE1
 20048                           indf2	equ	0xFDF
 20049                           postinc2	equ	0xFDE
 20050                           postdec2	equ	0xFDD
 20051                           fsr2h	equ	0xFDA
 20052                           fsr2l	equ	0xFD9
 20053                           status	equ	0xFD8
 20054                           
 20055 ;; *************** function i2___ftge *****************
 20056 ;; Defined at:
 20057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
 20058 ;; Parameters:    Size  Location     Type
 20059 ;;  ff1             3    0[COMRAM] float 
 20060 ;;  ff2             3    3[COMRAM] float 
 20061 ;; Auto vars:     Size  Location     Type
 20062 ;;		None
 20063 ;; Return value:  Size  Location     Type
 20064 ;;		None               void
 20065 ;; Registers used:
 20066 ;;		wreg, status,2, status,0
 20067 ;; Tracked objects:
 20068 ;;		On entry : 0/0
 20069 ;;		On exit  : 0/0
 20070 ;;		Unchanged: 0/0
 20071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20072 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20076 ;;Total ram usage:        9 bytes
 20077 ;; Hardware stack levels used:    1
 20078 ;; This function calls:
 20079 ;;		Nothing
 20080 ;; This function is called by:
 20081 ;;		_keypressed
 20082 ;;		i2_printf
 20083 ;; This function uses a non-reentrant model
 20084 ;;
 20085                           
 20086                           	psect	text73
 20087  0052FC                     __ptext73:
 20088                           	opt stack 0
 20089  0052FC                     i2___ftge:
 20090                           	opt stack 22
 20091                           
 20092                           ;incstack = 0
 20093  0052FC  AE03               	btfss	i2___ftge@ff1+2,7,c
 20094  0052FE  D016               	goto	i2l5914
 20095  005300  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 20096  005304  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 20097  005308  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 20098  00530C  1E07               	comf	??i2___ftge,f,c
 20099  00530E  1E08               	comf	??i2___ftge+1,f,c
 20100  005310  1E09               	comf	??i2___ftge+2,f,c
 20101  005312  2A07               	incf	??i2___ftge,f,c
 20102  005314  0E00               	movlw	0
 20103  005316  2208               	addwfc	??i2___ftge+1,f,c
 20104  005318  2209               	addwfc	??i2___ftge+2,f,c
 20105  00531A  0E00               	movlw	0
 20106  00531C  2407               	addwf	??i2___ftge,w,c
 20107  00531E  6E01               	movwf	i2___ftge@ff1,c
 20108  005320  0E00               	movlw	0
 20109  005322  2008               	addwfc	??i2___ftge+1,w,c
 20110  005324  6E02               	movwf	i2___ftge@ff1+1,c
 20111  005326  0E80               	movlw	128
 20112  005328  2009               	addwfc	??i2___ftge+2,w,c
 20113  00532A  6E03               	movwf	i2___ftge@ff1+2,c
 20114  00532C                     i2l5914:
 20115  00532C  AE06               	btfss	i2___ftge@ff2+2,7,c
 20116  00532E  D016               	goto	i2l5918
 20117  005330  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 20118  005334  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 20119  005338  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 20120  00533C  1E07               	comf	??i2___ftge,f,c
 20121  00533E  1E08               	comf	??i2___ftge+1,f,c
 20122  005340  1E09               	comf	??i2___ftge+2,f,c
 20123  005342  2A07               	incf	??i2___ftge,f,c
 20124  005344  0E00               	movlw	0
 20125  005346  2208               	addwfc	??i2___ftge+1,f,c
 20126  005348  2209               	addwfc	??i2___ftge+2,f,c
 20127  00534A  0E00               	movlw	0
 20128  00534C  2407               	addwf	??i2___ftge,w,c
 20129  00534E  6E04               	movwf	i2___ftge@ff2,c
 20130  005350  0E00               	movlw	0
 20131  005352  2008               	addwfc	??i2___ftge+1,w,c
 20132  005354  6E05               	movwf	i2___ftge@ff2+1,c
 20133  005356  0E80               	movlw	128
 20134  005358  2009               	addwfc	??i2___ftge+2,w,c
 20135  00535A  6E06               	movwf	i2___ftge@ff2+2,c
 20136  00535C                     i2l5918:
 20137  00535C  0E00               	movlw	0
 20138  00535E  1A01               	xorwf	i2___ftge@ff1,f,c
 20139  005360  0E00               	movlw	0
 20140  005362  1A02               	xorwf	i2___ftge@ff1+1,f,c
 20141  005364  0E80               	movlw	128
 20142  005366  1A03               	xorwf	i2___ftge@ff1+2,f,c
 20143  005368  0E00               	movlw	0
 20144  00536A  1A04               	xorwf	i2___ftge@ff2,f,c
 20145  00536C  0E00               	movlw	0
 20146  00536E  1A05               	xorwf	i2___ftge@ff2+1,f,c
 20147  005370  0E80               	movlw	128
 20148  005372  1A06               	xorwf	i2___ftge@ff2+2,f,c
 20149  005374  5004               	movf	i2___ftge@ff2,w,c
 20150  005376  5C01               	subwf	i2___ftge@ff1,w,c
 20151  005378  5005               	movf	i2___ftge@ff2+1,w,c
 20152  00537A  5802               	subwfb	i2___ftge@ff1+1,w,c
 20153  00537C  5006               	movf	i2___ftge@ff2+2,w,c
 20154  00537E  5803               	subwfb	i2___ftge@ff1+2,w,c
 20155  005380  B0D8               	btfsc	status,0,c
 20156  005382  D002               	goto	i2l5924
 20157  005384  90D8               	bcf	status,0,c
 20158  005386  0012               	return	
 20159  005388                     i2l5924:
 20160  005388  80D8               	bsf	status,0,c
 20161  00538A  0012               	return	
 20162  00538C                     __end_ofi2___ftge:
 20163                           	opt stack 0
 20164                           pclatu	equ	0xFFB
 20165                           pclath	equ	0xFFA
 20166                           tblptru	equ	0xFF8
 20167                           tblptrh	equ	0xFF7
 20168                           tblptrl	equ	0xFF6
 20169                           tablat	equ	0xFF5
 20170                           prodh	equ	0xFF4
 20171                           prodl	equ	0xFF3
 20172                           intcon	equ	0xFF2
 20173                           intcon3	equ	0xFF0
 20174                           postinc0	equ	0xFEE
 20175                           fsr0h	equ	0xFEA
 20176                           fsr0l	equ	0xFE9
 20177                           wreg	equ	0xFE8
 20178                           fsr1h	equ	0xFE2
 20179                           fsr1l	equ	0xFE1
 20180                           indf2	equ	0xFDF
 20181                           postinc2	equ	0xFDE
 20182                           postdec2	equ	0xFDD
 20183                           fsr2h	equ	0xFDA
 20184                           fsr2l	equ	0xFD9
 20185                           status	equ	0xFD8
 20186                           
 20187 ;; *************** function i2_initLCD *****************
 20188 ;; Defined at:
 20189 ;;		line 15 in file "lcd.c"
 20190 ;; Parameters:    Size  Location     Type
 20191 ;;		None
 20192 ;; Auto vars:     Size  Location     Type
 20193 ;;		None
 20194 ;; Return value:  Size  Location     Type
 20195 ;;                  1    wreg      void 
 20196 ;; Registers used:
 20197 ;;		wreg, status,2, status,0, cstack
 20198 ;; Tracked objects:
 20199 ;;		On entry : 0/0
 20200 ;;		On exit  : 0/0
 20201 ;;		Unchanged: 0/0
 20202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20205 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20207 ;;Total ram usage:        1 bytes
 20208 ;; Hardware stack levels used:    1
 20209 ;; Hardware stack levels required when called:    2
 20210 ;; This function calls:
 20211 ;;		i2_lcdInst
 20212 ;; This function is called by:
 20213 ;;		_keypressed
 20214 ;; This function uses a non-reentrant model
 20215 ;;
 20216                           
 20217                           	psect	text74
 20218  005970                     __ptext74:
 20219                           	opt stack 0
 20220  005970                     i2_initLCD:
 20221                           	opt stack 21
 20222                           
 20223                           ;lcd.c: 16: _delay((unsigned long)((15)*(8000000/4000.0)));
 20224                           
 20225                           ;incstack = 0
 20226  005970  0E27               	movlw	39
 20227  005972  6E04               	movwf	??i2_initLCD& (0+255),c
 20228  005974  0EF5               	movlw	245
 20229  005976                     i2u1161_47:
 20230  005976  2EE8               	decfsz	wreg,f,c
 20231  005978  D7FE               	bra	i2u1161_47
 20232  00597A  2E04               	decfsz	??i2_initLCD& (0+255),f,c
 20233  00597C  D7FC               	bra	i2u1161_47
 20234  00597E  F000               	nop	
 20235                           
 20236                           ;lcd.c: 17: lcdInst(0b00110011);
 20237  005980  0E33               	movlw	51
 20238  005982  EC01  F02F         	call	i2_lcdInst
 20239                           
 20240                           ;lcd.c: 18: lcdInst(0b00110010);
 20241  005986  0E32               	movlw	50
 20242  005988  EC01  F02F         	call	i2_lcdInst
 20243                           
 20244                           ;lcd.c: 19: lcdInst(0b00101000);
 20245  00598C  0E28               	movlw	40
 20246  00598E  EC01  F02F         	call	i2_lcdInst
 20247                           
 20248                           ;lcd.c: 20: lcdInst(0b00001111);
 20249  005992  0E0F               	movlw	15
 20250  005994  EC01  F02F         	call	i2_lcdInst
 20251                           
 20252                           ;lcd.c: 21: lcdInst(0b00000110);
 20253  005998  0E06               	movlw	6
 20254  00599A  EC01  F02F         	call	i2_lcdInst
 20255                           
 20256                           ;lcd.c: 22: lcdInst(0b00000001);
 20257  00599E  0E01               	movlw	1
 20258  0059A0  EC01  F02F         	call	i2_lcdInst
 20259                           
 20260                           ;lcd.c: 23: _delay((unsigned long)((15)*(8000000/4000.0)));
 20261  0059A4  0E27               	movlw	39
 20262  0059A6  6E04               	movwf	??i2_initLCD& (0+255),c
 20263  0059A8  0EF5               	movlw	245
 20264  0059AA                     i2u1162_47:
 20265  0059AA  2EE8               	decfsz	wreg,f,c
 20266  0059AC  D7FE               	bra	i2u1162_47
 20267  0059AE  2E04               	decfsz	??i2_initLCD& (0+255),f,c
 20268  0059B0  D7FC               	bra	i2u1162_47
 20269  0059B2  F000               	nop	
 20270  0059B4  0012               	return		;funcret
 20271  0059B6                     __end_ofi2_initLCD:
 20272                           	opt stack 0
 20273                           pclatu	equ	0xFFB
 20274                           pclath	equ	0xFFA
 20275                           tblptru	equ	0xFF8
 20276                           tblptrh	equ	0xFF7
 20277                           tblptrl	equ	0xFF6
 20278                           tablat	equ	0xFF5
 20279                           prodh	equ	0xFF4
 20280                           prodl	equ	0xFF3
 20281                           intcon	equ	0xFF2
 20282                           intcon3	equ	0xFF0
 20283                           postinc0	equ	0xFEE
 20284                           fsr0h	equ	0xFEA
 20285                           fsr0l	equ	0xFE9
 20286                           wreg	equ	0xFE8
 20287                           fsr1h	equ	0xFE2
 20288                           fsr1l	equ	0xFE1
 20289                           indf2	equ	0xFDF
 20290                           postinc2	equ	0xFDE
 20291                           postdec2	equ	0xFDD
 20292                           fsr2h	equ	0xFDA
 20293                           fsr2l	equ	0xFD9
 20294                           status	equ	0xFD8
 20295                           
 20296 ;; *************** function i2_lcdInst *****************
 20297 ;; Defined at:
 20298 ;;		line 26 in file "lcd.c"
 20299 ;; Parameters:    Size  Location     Type
 20300 ;;  data            1    wreg     unsigned char 
 20301 ;; Auto vars:     Size  Location     Type
 20302 ;;  data            1    2[COMRAM] unsigned char 
 20303 ;; Return value:  Size  Location     Type
 20304 ;;                  1    wreg      void 
 20305 ;; Registers used:
 20306 ;;		wreg, status,2, status,0, cstack
 20307 ;; Tracked objects:
 20308 ;;		On entry : 0/0
 20309 ;;		On exit  : 0/0
 20310 ;;		Unchanged: 0/0
 20311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20316 ;;Total ram usage:        1 bytes
 20317 ;; Hardware stack levels used:    1
 20318 ;; Hardware stack levels required when called:    1
 20319 ;; This function calls:
 20320 ;;		i2_lcdNibble
 20321 ;; This function is called by:
 20322 ;;		_keypressed
 20323 ;;		i2_initLCD
 20324 ;; This function uses a non-reentrant model
 20325 ;;
 20326                           
 20327                           	psect	text75
 20328  005E02                     __ptext75:
 20329                           	opt stack 0
 20330  005E02                     i2_lcdInst:
 20331                           	opt stack 22
 20332                           
 20333                           ;incstack = 0
 20334                           ;i2lcdInst@data stored from wreg
 20335  005E02  6E03               	movwf	i2lcdInst@data,c
 20336                           
 20337                           ;lcd.c: 27: LATDbits.LATD2 = 0;
 20338  005E04  948C               	bcf	3980,2,c	;volatile
 20339                           
 20340                           ;lcd.c: 28: lcdNibble(data);
 20341  005E06  5003               	movf	i2lcdInst@data,w,c
 20342  005E08  EC84  F02B         	call	i2_lcdNibble
 20343  005E0C  0012               	return		;funcret
 20344  005E0E                     __end_ofi2_lcdInst:
 20345                           	opt stack 0
 20346                           pclatu	equ	0xFFB
 20347                           pclath	equ	0xFFA
 20348                           tblptru	equ	0xFF8
 20349                           tblptrh	equ	0xFF7
 20350                           tblptrl	equ	0xFF6
 20351                           tablat	equ	0xFF5
 20352                           prodh	equ	0xFF4
 20353                           prodl	equ	0xFF3
 20354                           intcon	equ	0xFF2
 20355                           intcon3	equ	0xFF0
 20356                           postinc0	equ	0xFEE
 20357                           fsr0h	equ	0xFEA
 20358                           fsr0l	equ	0xFE9
 20359                           wreg	equ	0xFE8
 20360                           fsr1h	equ	0xFE2
 20361                           fsr1l	equ	0xFE1
 20362                           indf2	equ	0xFDF
 20363                           postinc2	equ	0xFDE
 20364                           postdec2	equ	0xFDD
 20365                           fsr2h	equ	0xFDA
 20366                           fsr2l	equ	0xFD9
 20367                           status	equ	0xFD8
 20368                           
 20369 ;; *************** function i2_lcdNibble *****************
 20370 ;; Defined at:
 20371 ;;		line 36 in file "lcd.c"
 20372 ;; Parameters:    Size  Location     Type
 20373 ;;  data            1    wreg     unsigned char 
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;  data            1    1[COMRAM] unsigned char 
 20376 ;;  lcdNibble       1    0[COMRAM] unsigned char 
 20377 ;; Return value:  Size  Location     Type
 20378 ;;                  1    wreg      void 
 20379 ;; Registers used:
 20380 ;;		wreg, status,2, status,0
 20381 ;; Tracked objects:
 20382 ;;		On entry : 0/0
 20383 ;;		On exit  : 0/0
 20384 ;;		Unchanged: 0/0
 20385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20389 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20390 ;;Total ram usage:        2 bytes
 20391 ;; Hardware stack levels used:    1
 20392 ;; This function calls:
 20393 ;;		Nothing
 20394 ;; This function is called by:
 20395 ;;		i2_lcdInst
 20396 ;;		i2_putch
 20397 ;; This function uses a non-reentrant model
 20398 ;;
 20399                           
 20400                           	psect	text76
 20401  005708                     __ptext76:
 20402                           	opt stack 0
 20403  005708                     i2_lcdNibble:
 20404                           	opt stack 21
 20405                           
 20406                           ;incstack = 0
 20407                           ;i2lcdNibble@data stored from wreg
 20408  005708  6E02               	movwf	i2lcdNibble@data,c
 20409                           
 20410                           ;lcd.c: 38: char temp = data & 0xF0;
 20411  00570A  5002               	movf	i2lcdNibble@data,w,c
 20412  00570C  0BF0               	andlw	240
 20413  00570E  6E01               	movwf	i2lcdNibble@temp,c
 20414                           
 20415                           ;lcd.c: 39: LATD = LATD & 0x0F;
 20416  005710  508C               	movf	3980,w,c	;volatile
 20417  005712  0B0F               	andlw	15
 20418  005714  6E8C               	movwf	3980,c	;volatile
 20419                           
 20420                           ;lcd.c: 40: LATD = temp | LATD;
 20421  005716  5001               	movf	i2lcdNibble@temp,w,c
 20422  005718  108C               	iorwf	3980,w,c	;volatile
 20423  00571A  6E8C               	movwf	3980,c	;volatile
 20424                           
 20425                           ;lcd.c: 42: LATDbits.LATD3 = 0;
 20426  00571C  968C               	bcf	3980,3,c	;volatile
 20427                           
 20428                           ;lcd.c: 43: _delay((unsigned long)((25)*(8000000/4000000.0)));
 20429  00571E  0E10               	movlw	16
 20430  005720                     i2u1163_47:
 20431  005720  2EE8               	decfsz	wreg,f,c
 20432  005722  D7FE               	bra	i2u1163_47
 20433  005724  D000               	nop2	
 20434                           
 20435                           ;lcd.c: 44: LATDbits.LATD3 = 1;
 20436  005726  868C               	bsf	3980,3,c	;volatile
 20437                           
 20438                           ;lcd.c: 45: _delay((unsigned long)((25)*(8000000/4000000.0)));
 20439  005728  0E10               	movlw	16
 20440  00572A                     i2u1164_47:
 20441  00572A  2EE8               	decfsz	wreg,f,c
 20442  00572C  D7FE               	bra	i2u1164_47
 20443  00572E  D000               	nop2	
 20444                           
 20445                           ;lcd.c: 47: data = data << 4;
 20446  005730  3802               	swapf	i2lcdNibble@data,w,c
 20447  005732  0BF0               	andlw	240
 20448  005734  6E02               	movwf	i2lcdNibble@data,c
 20449                           
 20450                           ;lcd.c: 49: temp = data & 0xF0;
 20451  005736  5002               	movf	i2lcdNibble@data,w,c
 20452  005738  0BF0               	andlw	240
 20453  00573A  6E01               	movwf	i2lcdNibble@temp,c
 20454                           
 20455                           ;lcd.c: 50: LATD = LATD & 0x0F;
 20456  00573C  508C               	movf	3980,w,c	;volatile
 20457  00573E  0B0F               	andlw	15
 20458  005740  6E8C               	movwf	3980,c	;volatile
 20459                           
 20460                           ;lcd.c: 51: LATD = temp | LATD;
 20461  005742  5001               	movf	i2lcdNibble@temp,w,c
 20462  005744  108C               	iorwf	3980,w,c	;volatile
 20463  005746  6E8C               	movwf	3980,c	;volatile
 20464                           
 20465                           ;lcd.c: 53: LATDbits.LATD3 = 0;
 20466  005748  968C               	bcf	3980,3,c	;volatile
 20467                           
 20468                           ;lcd.c: 54: _delay((unsigned long)((25)*(8000000/4000000.0)));
 20469  00574A  0E10               	movlw	16
 20470  00574C                     i2u1165_47:
 20471  00574C  2EE8               	decfsz	wreg,f,c
 20472  00574E  D7FE               	bra	i2u1165_47
 20473  005750  D000               	nop2	
 20474                           
 20475                           ;lcd.c: 55: LATDbits.LATD3 = 1;
 20476  005752  868C               	bsf	3980,3,c	;volatile
 20477                           
 20478                           ;lcd.c: 56: _delay((unsigned long)((25)*(8000000/4000000.0)));
 20479  005754  0E10               	movlw	16
 20480  005756                     i2u1166_47:
 20481  005756  2EE8               	decfsz	wreg,f,c
 20482  005758  D7FE               	bra	i2u1166_47
 20483  00575A  D000               	nop2	
 20484  00575C  0012               	return		;funcret
 20485  00575E                     __end_ofi2_lcdNibble:
 20486                           	opt stack 0
 20487                           pclatu	equ	0xFFB
 20488                           pclath	equ	0xFFA
 20489                           tblptru	equ	0xFF8
 20490                           tblptrh	equ	0xFF7
 20491                           tblptrl	equ	0xFF6
 20492                           tablat	equ	0xFF5
 20493                           prodh	equ	0xFF4
 20494                           prodl	equ	0xFF3
 20495                           intcon	equ	0xFF2
 20496                           intcon3	equ	0xFF0
 20497                           postinc0	equ	0xFEE
 20498                           fsr0h	equ	0xFEA
 20499                           fsr0l	equ	0xFE9
 20500                           wreg	equ	0xFE8
 20501                           fsr1h	equ	0xFE2
 20502                           fsr1l	equ	0xFE1
 20503                           indf2	equ	0xFDF
 20504                           postinc2	equ	0xFDE
 20505                           postdec2	equ	0xFDD
 20506                           fsr2h	equ	0xFDA
 20507                           fsr2l	equ	0xFD9
 20508                           status	equ	0xFD8
 20509                           
 20510 ;; *************** function i2_dc_reverse *****************
 20511 ;; Defined at:
 20512 ;;		line 115 in file "start.c"
 20513 ;; Parameters:    Size  Location     Type
 20514 ;;		None
 20515 ;; Auto vars:     Size  Location     Type
 20516 ;;  dc_reverse      2    1[COMRAM] int 
 20517 ;; Return value:  Size  Location     Type
 20518 ;;                  1    wreg      void 
 20519 ;; Registers used:
 20520 ;;		wreg, status,2, status,0, cstack
 20521 ;; Tracked objects:
 20522 ;;		On entry : 0/0
 20523 ;;		On exit  : 0/0
 20524 ;;		Unchanged: 0/0
 20525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20530 ;;Total ram usage:        3 bytes
 20531 ;; Hardware stack levels used:    1
 20532 ;; Hardware stack levels required when called:    1
 20533 ;; This function calls:
 20534 ;;		i2_dc_stop
 20535 ;; This function is called by:
 20536 ;;		_keypressed
 20537 ;; This function uses a non-reentrant model
 20538 ;;
 20539                           
 20540                           	psect	text77
 20541  005A7A                     __ptext77:
 20542                           	opt stack 0
 20543  005A7A                     i2_dc_reverse:
 20544                           	opt stack 22
 20545                           
 20546                           ;start.c: 116: dc_stop();
 20547                           
 20548                           ;incstack = 0
 20549  005A7A  EC17  F02F         	call	i2_dc_stop	;wreg free
 20550                           
 20551                           ;start.c: 117: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 20552  005A7E  0E00               	movlw	0
 20553  005A80  6E03               	movwf	i2dc_reverse@i+1,c
 20554  005A82  0E00               	movlw	0
 20555  005A84  6E02               	movwf	i2dc_reverse@i,c
 20556  005A86  BE03               	btfsc	i2dc_reverse@i+1,7,c
 20557  005A88  D006               	goto	i2l6482
 20558  005A8A  5003               	movf	i2dc_reverse@i+1,w,c
 20559  005A8C  E113               	bnz	i2l291
 20560  005A8E  0E64               	movlw	100
 20561  005A90  5C02               	subwf	i2dc_reverse@i,w,c
 20562  005A92  B0D8               	btfsc	status,0,c
 20563  005A94  D00F               	goto	i2l291
 20564  005A96                     i2l6482:
 20565  005A96  0E1A               	movlw	26
 20566  005A98  6E01               	movwf	??i2_dc_reverse& (0+255),c
 20567  005A9A  0EF8               	movlw	248
 20568  005A9C                     i2u1167_47:
 20569  005A9C  2EE8               	decfsz	wreg,f,c
 20570  005A9E  D7FE               	bra	i2u1167_47
 20571  005AA0  2E01               	decfsz	??i2_dc_reverse& (0+255),f,c
 20572  005AA2  D7FC               	bra	i2u1167_47
 20573  005AA4  D000               	nop2	
 20574  005AA6  4A02               	infsnz	i2dc_reverse@i,f,c
 20575  005AA8  2A03               	incf	i2dc_reverse@i+1,f,c
 20576  005AAA  BE03               	btfsc	i2dc_reverse@i+1,7,c
 20577  005AAC  D7F4               	goto	i2l6482
 20578  005AAE  5003               	movf	i2dc_reverse@i+1,w,c
 20579  005AB0  E101               	bnz	i2u810_40
 20580  005AB2  D7ED               	goto	L17
 20581  005AB4                     i2u810_40:
 20582  005AB4                     i2l291:
 20583                           
 20584                           ;start.c: 118: LATCbits.LATC2 = 0;
 20585  005AB4  948B               	bcf	3979,2,c	;volatile
 20586                           
 20587                           ;start.c: 119: LATCbits.LATC1 = 1;
 20588  005AB6  828B               	bsf	3979,1,c	;volatile
 20589  005AB8  0012               	return		;funcret
 20590  005ABA                     __end_ofi2_dc_reverse:
 20591                           	opt stack 0
 20592                           pclatu	equ	0xFFB
 20593                           pclath	equ	0xFFA
 20594                           tblptru	equ	0xFF8
 20595                           tblptrh	equ	0xFF7
 20596                           tblptrl	equ	0xFF6
 20597                           tablat	equ	0xFF5
 20598                           prodh	equ	0xFF4
 20599                           prodl	equ	0xFF3
 20600                           intcon	equ	0xFF2
 20601                           intcon3	equ	0xFF0
 20602                           postinc0	equ	0xFEE
 20603                           fsr0h	equ	0xFEA
 20604                           fsr0l	equ	0xFE9
 20605                           wreg	equ	0xFE8
 20606                           fsr1h	equ	0xFE2
 20607                           fsr1l	equ	0xFE1
 20608                           indf2	equ	0xFDF
 20609                           postinc2	equ	0xFDE
 20610                           postdec2	equ	0xFDD
 20611                           fsr2h	equ	0xFDA
 20612                           fsr2l	equ	0xFD9
 20613                           status	equ	0xFD8
 20614                           
 20615 ;; *************** function i2_dc_forward *****************
 20616 ;; Defined at:
 20617 ;;		line 108 in file "start.c"
 20618 ;; Parameters:    Size  Location     Type
 20619 ;;		None
 20620 ;; Auto vars:     Size  Location     Type
 20621 ;;  dc_forward      2    1[COMRAM] int 
 20622 ;; Return value:  Size  Location     Type
 20623 ;;                  1    wreg      void 
 20624 ;; Registers used:
 20625 ;;		wreg, status,2, status,0, cstack
 20626 ;; Tracked objects:
 20627 ;;		On entry : 0/0
 20628 ;;		On exit  : 0/0
 20629 ;;		Unchanged: 0/0
 20630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20635 ;;Total ram usage:        3 bytes
 20636 ;; Hardware stack levels used:    1
 20637 ;; Hardware stack levels required when called:    1
 20638 ;; This function calls:
 20639 ;;		i2_dc_stop
 20640 ;; This function is called by:
 20641 ;;		_keypressed
 20642 ;; This function uses a non-reentrant model
 20643 ;;
 20644                           
 20645                           	psect	text78
 20646  005ABA                     __ptext78:
 20647                           	opt stack 0
 20648  005ABA                     i2_dc_forward:
 20649                           	opt stack 22
 20650                           
 20651                           ;start.c: 109: dc_stop();
 20652                           
 20653                           ;incstack = 0
 20654  005ABA  EC17  F02F         	call	i2_dc_stop	;wreg free
 20655                           
 20656                           ;start.c: 110: for(int i=0;i<100;i++){_delay((unsigned long)((10)*(8000000/4000.0)));};
 20657  005ABE  0E00               	movlw	0
 20658  005AC0  6E03               	movwf	i2dc_forward@i+1,c
 20659  005AC2  0E00               	movlw	0
 20660  005AC4  6E02               	movwf	i2dc_forward@i,c
 20661  005AC6  BE03               	btfsc	i2dc_forward@i+1,7,c
 20662  005AC8  D006               	goto	i2l6470
 20663  005ACA  5003               	movf	i2dc_forward@i+1,w,c
 20664  005ACC  E113               	bnz	i2l286
 20665  005ACE  0E64               	movlw	100
 20666  005AD0  5C02               	subwf	i2dc_forward@i,w,c
 20667  005AD2  B0D8               	btfsc	status,0,c
 20668  005AD4  D00F               	goto	i2l286
 20669  005AD6                     i2l6470:
 20670  005AD6  0E1A               	movlw	26
 20671  005AD8  6E01               	movwf	??i2_dc_forward& (0+255),c
 20672  005ADA  0EF8               	movlw	248
 20673  005ADC                     i2u1168_47:
 20674  005ADC  2EE8               	decfsz	wreg,f,c
 20675  005ADE  D7FE               	bra	i2u1168_47
 20676  005AE0  2E01               	decfsz	??i2_dc_forward& (0+255),f,c
 20677  005AE2  D7FC               	bra	i2u1168_47
 20678  005AE4  D000               	nop2	
 20679  005AE6  4A02               	infsnz	i2dc_forward@i,f,c
 20680  005AE8  2A03               	incf	i2dc_forward@i+1,f,c
 20681  005AEA  BE03               	btfsc	i2dc_forward@i+1,7,c
 20682  005AEC  D7F4               	goto	i2l6470
 20683  005AEE  5003               	movf	i2dc_forward@i+1,w,c
 20684  005AF0  E101               	bnz	i2u808_40
 20685  005AF2  D7ED               	goto	L18
 20686  005AF4                     i2u808_40:
 20687  005AF4                     i2l286:
 20688                           
 20689                           ;start.c: 111: LATCbits.LATC1 = 0;
 20690  005AF4  928B               	bcf	3979,1,c	;volatile
 20691                           
 20692                           ;start.c: 112: LATCbits.LATC2 = 1;
 20693  005AF6  848B               	bsf	3979,2,c	;volatile
 20694  005AF8  0012               	return		;funcret
 20695  005AFA                     __end_ofi2_dc_forward:
 20696                           	opt stack 0
 20697                           pclatu	equ	0xFFB
 20698                           pclath	equ	0xFFA
 20699                           tblptru	equ	0xFF8
 20700                           tblptrh	equ	0xFF7
 20701                           tblptrl	equ	0xFF6
 20702                           tablat	equ	0xFF5
 20703                           prodh	equ	0xFF4
 20704                           prodl	equ	0xFF3
 20705                           intcon	equ	0xFF2
 20706                           intcon3	equ	0xFF0
 20707                           postinc0	equ	0xFEE
 20708                           fsr0h	equ	0xFEA
 20709                           fsr0l	equ	0xFE9
 20710                           wreg	equ	0xFE8
 20711                           fsr1h	equ	0xFE2
 20712                           fsr1l	equ	0xFE1
 20713                           indf2	equ	0xFDF
 20714                           postinc2	equ	0xFDE
 20715                           postdec2	equ	0xFDD
 20716                           fsr2h	equ	0xFDA
 20717                           fsr2l	equ	0xFD9
 20718                           status	equ	0xFD8
 20719                           
 20720 ;; *************** function i2_dc_stop *****************
 20721 ;; Defined at:
 20722 ;;		line 103 in file "start.c"
 20723 ;; Parameters:    Size  Location     Type
 20724 ;;		None
 20725 ;; Auto vars:     Size  Location     Type
 20726 ;;		None
 20727 ;; Return value:  Size  Location     Type
 20728 ;;                  1    wreg      void 
 20729 ;; Registers used:
 20730 ;;		None
 20731 ;; Tracked objects:
 20732 ;;		On entry : 0/0
 20733 ;;		On exit  : 0/0
 20734 ;;		Unchanged: 0/0
 20735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20740 ;;Total ram usage:        0 bytes
 20741 ;; Hardware stack levels used:    1
 20742 ;; This function calls:
 20743 ;;		Nothing
 20744 ;; This function is called by:
 20745 ;;		_keypressed
 20746 ;;		i2_dc_forward
 20747 ;;		i2_dc_reverse
 20748 ;; This function uses a non-reentrant model
 20749 ;;
 20750                           
 20751                           	psect	text79
 20752  005E2E                     __ptext79:
 20753                           	opt stack 0
 20754  005E2E                     i2_dc_stop:
 20755                           	opt stack 23
 20756                           
 20757                           ;start.c: 104: LATCbits.LATC2 = 0;
 20758                           
 20759                           ;incstack = 0
 20760  005E2E  948B               	bcf	3979,2,c	;volatile
 20761                           
 20762                           ;start.c: 105: LATCbits.LATC1 = 0;
 20763  005E30  928B               	bcf	3979,1,c	;volatile
 20764  005E32  0012               	return		;funcret
 20765  005E34                     __end_ofi2_dc_stop:
 20766                           	opt stack 0
 20767                           pclatu	equ	0xFFB
 20768                           pclath	equ	0xFFA
 20769                           tblptru	equ	0xFF8
 20770                           tblptrh	equ	0xFF7
 20771                           tblptrl	equ	0xFF6
 20772                           tablat	equ	0xFF5
 20773                           prodh	equ	0xFF4
 20774                           prodl	equ	0xFF3
 20775                           intcon	equ	0xFF2
 20776                           intcon3	equ	0xFF0
 20777                           postinc0	equ	0xFEE
 20778                           fsr0h	equ	0xFEA
 20779                           fsr0l	equ	0xFE9
 20780                           wreg	equ	0xFE8
 20781                           fsr1h	equ	0xFE2
 20782                           fsr1l	equ	0xFE1
 20783                           indf2	equ	0xFDF
 20784                           postinc2	equ	0xFDE
 20785                           postdec2	equ	0xFDD
 20786                           fsr2h	equ	0xFDA
 20787                           fsr2l	equ	0xFD9
 20788                           status	equ	0xFD8
 20789                           pclatu	equ	0xFFB
 20790                           pclath	equ	0xFFA
 20791                           tblptru	equ	0xFF8
 20792                           tblptrh	equ	0xFF7
 20793                           tblptrl	equ	0xFF6
 20794                           tablat	equ	0xFF5
 20795                           prodh	equ	0xFF4
 20796                           prodl	equ	0xFF3
 20797                           intcon	equ	0xFF2
 20798                           intcon3	equ	0xFF0
 20799                           postinc0	equ	0xFEE
 20800                           fsr0h	equ	0xFEA
 20801                           fsr0l	equ	0xFE9
 20802                           wreg	equ	0xFE8
 20803                           fsr1h	equ	0xFE2
 20804                           fsr1l	equ	0xFE1
 20805                           indf2	equ	0xFDF
 20806                           postinc2	equ	0xFDE
 20807                           postdec2	equ	0xFDD
 20808                           fsr2h	equ	0xFDA
 20809                           fsr2l	equ	0xFD9
 20810                           status	equ	0xFD8
 20811                           
 20812                           	psect	rparam
 20813  0000                     pclatu	equ	0xFFB
 20814                           pclath	equ	0xFFA
 20815                           tblptru	equ	0xFF8
 20816                           tblptrh	equ	0xFF7
 20817                           tblptrl	equ	0xFF6
 20818                           tablat	equ	0xFF5
 20819                           prodh	equ	0xFF4
 20820                           prodl	equ	0xFF3
 20821                           intcon	equ	0xFF2
 20822                           intcon3	equ	0xFF0
 20823                           postinc0	equ	0xFEE
 20824                           fsr0h	equ	0xFEA
 20825                           fsr0l	equ	0xFE9
 20826                           wreg	equ	0xFE8
 20827                           fsr1h	equ	0xFE2
 20828                           fsr1l	equ	0xFE1
 20829                           indf2	equ	0xFDF
 20830                           postinc2	equ	0xFDE
 20831                           postdec2	equ	0xFDD
 20832                           fsr2h	equ	0xFDA
 20833                           fsr2l	equ	0xFD9
 20834                           status	equ	0xFD8
 20835                           
 20836                           	psect	temp
 20837  00007D                     btemp:
 20838                           	opt stack 0
 20839  00007D                     	ds	1
 20840  0000                     int$flags	set	btemp
 20841                           pclatu	equ	0xFFB
 20842                           pclath	equ	0xFFA
 20843                           tblptru	equ	0xFF8
 20844                           tblptrh	equ	0xFF7
 20845                           tblptrl	equ	0xFF6
 20846                           tablat	equ	0xFF5
 20847                           prodh	equ	0xFF4
 20848                           prodl	equ	0xFF3
 20849                           intcon	equ	0xFF2
 20850                           intcon3	equ	0xFF0
 20851                           postinc0	equ	0xFEE
 20852                           fsr0h	equ	0xFEA
 20853                           fsr0l	equ	0xFE9
 20854                           wreg	equ	0xFE8
 20855                           fsr1h	equ	0xFE2
 20856                           fsr1l	equ	0xFE1
 20857                           indf2	equ	0xFDF
 20858                           postinc2	equ	0xFDE
 20859                           postdec2	equ	0xFDD
 20860                           fsr2h	equ	0xFDA
 20861                           fsr2l	equ	0xFD9
 20862                           status	equ	0xFD8


Data Sizes:
    Strings     206
    Constant    180
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    122     124
    BANK0           128     71      73
    BANK1           256    179     198
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_22(CODE[15]), STR_21(CODE[12]), STR_20(CODE[5]), STR_19(CODE[9]), 
		 -> STR_18(CODE[9]), STR_17(CODE[21]), STR_16(CODE[17]), STR_15(CODE[21]), 
		 -> STR_14(CODE[9]), STR_13(CODE[11]), STR_12(CODE[8]), STR_11(CODE[12]), 
		 -> STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[6]), STR_7(CODE[12]), 
		 -> STR_6(CODE[12]), STR_5(CODE[3]), STR_4(CODE[5]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _keypressed in COMRAM

    _keypressed->i2_printf
    i2_ultrasonicFindBottle->i2___fttol
    i2___ftdiv->i2___awtoft
    i2___awtoft->i2___awdiv
    i2_printf->i2___ftsub
    i2_scale->i2___ftmul
    i2_putch->i2_lcdNibble
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___ftmul->i2___wmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2___ftmul
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2_initLCD->i2_lcdInst
    i2_lcdInst->i2_lcdNibble

Critical Paths under _main in BANK0

    ___ftdiv->___awtoft
    ___awtoft->___awdiv
    _initLCD->_lcdInst
    _printf->___lltoft
    _printf->___wmul
    _scale->___wmul
    _putch->_lcdNibble
    _fround->___wmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _lcdInst->_lcdNibble
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv

Critical Paths under _keypressed in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sort
    _sort->_displayLog
    _ultrasonicFindBottle->___fttol
    ___ftdiv->___awtoft
    _displayLog->_printf
    _printRTC->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___wmul
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _keypressed in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _keypressed in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _keypressed in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _keypressed in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _keypressed in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _keypressed in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _keypressed in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _keypressed in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _keypressed in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _keypressed in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _keypressed in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _keypressed in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _keypressed in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _keypressed in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _keypressed in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  292091
                                            177 BANK1      2     2      0
                    _Eeprom_ReadByte
                    _I2C_Master_Init
                            _dc_stop
                            _initLCD
                            _lcdInst
                           _printRTC
                             _printf
                               _sort
 ---------------------------------------------------------------------------------
 (1) _sort                                                69    69      0  162606
                                            108 BANK1     69    69      0
                   _Eeprom_WriteByte
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                         _dc_forward
                         _dc_reverse
                            _dc_stop
                         _displayLog
                            _initLCD
                            _lcdInst
                             _printf
                            _readADC
                        _resetCounts
                          _rotate180
                          _rotate270
                           _rotate90
               _ultrasonicFindBottle
 ---------------------------------------------------------------------------------
 (2) _ultrasonicFindBottle                                 8     6      2    8033
                                             41 BANK1      8     6      2
                           ___awtoft
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3842
                                              3 BANK1     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3371
                                             69 BANK0      1     1      0
                                              0 BANK1      3     0      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _rotate90                                             3     3      0      46
                                             55 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _rotate270                                            3     3      0      46
                                             55 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _rotate180                                            3     3      0      46
                                             55 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _resetCounts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              2     2      0      22
                                             55 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0     135
                                             58 BANK0      1     1      0
                            _lcdInst
 ---------------------------------------------------------------------------------
 (2) _displayLog                                          15     5     10   64957
                                             93 BANK1     15     5     10
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _dc_reverse                                           3     3      0      46
                                             55 BANK0      3     3      0
                            _dc_stop
 ---------------------------------------------------------------------------------
 (2) _dc_forward                                           3     3      0      46
                                             55 BANK0      3     3      0
                            _dc_stop
 ---------------------------------------------------------------------------------
 (2) _dc_stop                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Eeprom_WriteByte                                     4     0      4     194
                                             55 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _printRTC                                             4     4      0   64458
                                             93 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              47    37     10   63705
                                             47 BANK1     46    36     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   14317
                                             19 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0     135
                                             57 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             55 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   14038
                                             19 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2856
                                             69 BANK0      2     2      0
                                              0 BANK1      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    6640
                                              4 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             55 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2676
                                             61 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     431
                                             55 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     591
                                             55 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2703
                                             63 BANK0      8     4      4
                                              0 BANK1      1     1      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     671
                                             68 BANK0      1     1      0
                                              0 BANK1      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     622
                                             26 BANK1     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    5165
                                             41 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    4801
                                             29 BANK1     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2524
                                             55 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             55 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1924
                                             55 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _lcdInst                                              1     1      0     135
                                             57 BANK0      1     1      0
                          _lcdNibble
 ---------------------------------------------------------------------------------
 (4) _lcdNibble                                            2     2      0     113
                                             55 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     406
                                             56 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      2     2      0      45
                                             56 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                             55 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     910
                                              0 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     802
                                             55 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Eeprom_ReadByte                                      2     0      2     108
                                             55 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _keypressed                                          70    70      0   37074
                                            107 COMRAM    15    15      0
                                              0 BANK0     55    55      0
                          i2___awdiv
                         i2___awtoft
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___fttol
                       i2_dc_forward
                       i2_dc_reverse
                          i2_dc_stop
                          i2_initLCD
                          i2_lcdInst
                           i2_printf
                          i2_readADC
                        i2_rotate180
                        i2_rotate270
                         i2_rotate90
             i2_ultrasonicFindBottle
 ---------------------------------------------------------------------------------
 (8) i2_ultrasonicFindBottle                               8     6      2    2521
                                             50 COMRAM     8     6      2
                         i2___awtoft
                          i2___ftdiv
                          i2___fttol
 ---------------------------------------------------------------------------------
 (9) i2___ftdiv                                           15     9      6    1057
                                             18 COMRAM    15     9      6
                         i2___awtoft (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___awtoft                                           4     1      3     894
                                             14 COMRAM     4     1      3
                          i2___awdiv (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2_rotate90                                           3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_rotate270                                          3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_rotate180                                          3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) i2_readADC                                            2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_printf                                            45    37      8   24917
                                             63 COMRAM    44    36      8
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (9) i2_scale                                             13    10      3    5465
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (9) i2_putch                                              1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (9) i2_isdigit                                            3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_fround                                            16    13      3    5267
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4    1041
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftmul                                          15     9      6    2039
                                             20 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___awtoft (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) i2___awdiv                                           8     4      4    1132
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) i2__tdiv_to_l_                                       15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (9) i2__div_to_l_                                        12     6      6     481
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) i2___lltoft                                           9     5      4     716
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___llmod                                            9     1      8     367
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___lldiv                                           13     5      8     370
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (9) i2___fttol                                           15    11      4     434
                                             35 COMRAM    15    11      4
                         i2___awtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___ftsub                                            6     0      6    1788
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftadd                                          12     6      6    1669
                                             45 COMRAM    12     6      6
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) i2___ftneg                                            3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (9) i2___ftge                                             9     3      6     552
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) i2_initLCD                                            1     1      0     135
                                              3 COMRAM     1     1      0
                          i2_lcdInst
 ---------------------------------------------------------------------------------
 (8) i2_lcdInst                                            1     1      0     135
                                              2 COMRAM     1     1      0
                        i2_lcdNibble
 ---------------------------------------------------------------------------------
 (10) i2_lcdNibble                                         2     2      0     113
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) i2_dc_reverse                                         3     3      0      46
                                              0 COMRAM     3     3      0
                          i2_dc_stop
 ---------------------------------------------------------------------------------
 (8) i2_dc_forward                                         3     3      0      46
                                              0 COMRAM     3     3      0
                          i2_dc_stop
 ---------------------------------------------------------------------------------
 (8) i2_dc_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Eeprom_ReadByte
   _I2C_Master_Init
     ___lldiv
   _dc_stop
   _initLCD
     _lcdInst
       _lcdNibble
   _lcdInst
     _lcdNibble
   _printRTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _lcdInst
       _lcdNibble
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _lcdNibble
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _putch
       _lcdNibble
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _sort
     _Eeprom_WriteByte
     ___awdiv
       ___awmod (ARG)
     ___awtoft
       ___awdiv (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _dc_forward
       _dc_stop
     _dc_reverse
       _dc_stop
     _dc_stop
     _displayLog
       _lcdInst
         _lcdNibble
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcdNibble
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _initLCD
       _lcdInst
         _lcdNibble
     _lcdInst
       _lcdNibble
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _lcdNibble
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _readADC
     _resetCounts
     _rotate180
     _rotate270
     _rotate90
     _ultrasonicFindBottle
       ___awtoft
         ___awdiv (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)

 _keypressed (ROOT)
   i2___awdiv
     i2___awmod (ARG)
   i2___awtoft
     i2___awdiv (ARG)
       i2___awmod (ARG)
     i2___ftpack (ARG)
   i2___ftadd
     i2___ftpack
     i2_fround (ARG)
       i2___awdiv
         i2___awmod (ARG)
       i2___awmod
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
   i2___ftdiv
     i2___awtoft (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___ftpack (ARG)
     i2___ftpack (ARG)
   i2___ftge
   i2___ftmul
     i2___awdiv (ARG)
       i2___awmod (ARG)
     i2___awmod (ARG)
     i2___awtoft (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___ftpack (ARG)
     i2___ftpack (ARG)
     i2___wmul (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
   i2___fttol
     i2___awtoft (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___ftpack (ARG)
     i2___ftdiv (ARG)
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
   i2_dc_forward
     i2_dc_stop
   i2_dc_reverse
     i2_dc_stop
   i2_dc_stop
   i2_initLCD
     i2_lcdInst
       i2_lcdNibble
   i2_lcdInst
     i2_lcdNibble
   i2_printf
     i2___awdiv
       i2___awmod (ARG)
     i2___ftadd
       i2___ftpack
       i2_fround (ARG)
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___awtoft (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2___ftge
     i2___ftmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
       i2___wmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2___ftneg
     i2___ftsub
       i2___ftadd
         i2___ftpack
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___awtoft (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lltoft (ARG)
         i2___ftpack
     i2___fttol
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftdiv (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
     i2___lldiv
     i2___llmod
       i2___lldiv (ARG)
     i2___lltoft
       i2___ftpack
     i2___wmul
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
     i2__div_to_l_
     i2__tdiv_to_l_
     i2_fround
       i2___awdiv
         i2___awmod (ARG)
       i2___awmod
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
     i2_isdigit
     i2_putch
       i2_lcdNibble
     i2_scale
       i2___awdiv
         i2___awmod (ARG)
       i2___awmod
       i2___ftmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
   i2_readADC
   i2_rotate180
   i2_rotate270
   i2_rotate90
   i2_ultrasonicFindBottle
     i2___awtoft
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___ftpack (ARG)
     i2___ftdiv
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___fttol
       i2___awtoft (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftdiv (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___awtoft (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      C6       7       77.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     47      49       5       57.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7A      7C       1       98.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18B      34        0.0%
DATA                 0      0     18B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Apr 11 14:39:34 2017

  __size_of_ultrasonicFindBottle 013C         __end_of_Eeprom_WriteByte 5CF4  
                   ___awdiv@sign 00C2              ___wmul@multiplicand 0102  
                    __CFG_BORV$3 000000                       i2___awtoft 5B76  
                     i2___ftpack 5112                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_OSC$HS 000000  
                   ___ftadd@exp1 0128                     ___ftadd@exp2 0127  
                     i2___lltoft 56AC                     ___ftadd@sign 0126  
                            l301 0CB2                              l404 4DE0  
                            l261 4450                              l422 5CEA  
                            l334 16BE                              l407 4DEE  
                            l416 5D96                              l256 4440  
                            l328 1078                              l274 5894  
                            l362 15BC                              l291 57A8  
                            l525 497C                              l269 5848  
                            l286 57F8                              l366 1646  
                            l279 5928                              l634 0776  
                            l494 5DC2                              l595 08F6  
                            l942 36D8                              l919 484C  
                            l946 3712                              l948 373A  
                            l957 3810                              l966 383A  
                            l887 3FDE                              l991 3E56  
                            l984 3D92                              l985 3DD6  
                            l977 4264                     __CFG_CPB$OFF 000000  
                            _PEN 007E2A                     __CFG_CPD$OFF 000000  
                            _SEN 007E28                     ___awmod@sign 00BC  
          ultrasonicFindBottle@a 012F                              prod 000FF3  
                            wreg 000FE8              __end_ofi2_rotate180 5B76  
            __end_ofi2_rotate270 5A3A                     __CFG_LVP$OFF 000000  
                   ___ftdiv@cntr 010C                     ___ftdiv@sign 0111  
                   __CFG_WDT$OFF 000000                             l1016 5C3A  
                           l1066 5100                             l1076 52EA  
                           l4510 5200                             l4502 51DC  
                           l4512 520C                             l4514 5212  
                           l4522 5244                             l4506 51EC  
                           l4602 5CC2                             l4612 3D04  
                           l4470 4FE8                             l4526 5258  
                           l4518 5236                             l4720 3FD4  
                           l4712 3FA8                             l4472 4FF4  
                           l4464 4FCA                             l4618 3D3E  
                           l4490 504C                             l4482 502A  
                           l4474 4FFA                             l4458 4FB4  
                           l5610 58EC                             l8002 10AC  
                           l4804 5084                             l7220 3720  
                           l4708 3F94                             l4660 3E4C  
                           l4652 3E20                             l8100 1582  
                           l8020 11A2                             l8012 1188  
                           l4806 5094                             l4734 4E50  
                           l7214 36E6                             l4718 3FC4  
                           l4486 5038                             l7302 40B2  
                           l4816 50EE                             l4808 509A  
                           l4744 4ED4                             l4832 52D8  
                           l4824 527E                             l4648 3E0C  
                           l7312 40F0                             l8104 159C  
                           l8024 11B8                             l8008 1132  
                           l4738 4E90                             l7242 37A0  
                           l7226 3730                             l4826 528E  
                           l4674 3EB4                             l4658 3E3C  
                           l7306 40D0                             l7410 004E  
                           l5562 5808                             l8122 160C  
                           l8106 15A6                             l8050 13DC  
                           l8034 129A                             l5660 5C6E  
                           l7180 4800                             l7172 47A2  
                           l7244 37AE                             l7236 3772  
                           l4780 437A                             l4828 5294  
                           l4668 3E8E                             l7316 410E  
                           l7420 0088                             l7404 0022  
                           l5580 57D2                             l5556 5C8A  
                           l8116 15EC                             l8044 1336  
                           l8028 11D2                             l7190 4856  
                           l7182 4830                             l7174 47B0  
                           l7262 3864                             l7254 37F6  
                           l7246 37BC                             l4790 43B0  
                           l4758 42D4                             l7342 3628  
                           l7334 3544                             l7502 03A2  
                           l7430 0106                             l7414 0058  
                           l5558 5C9C                             l8126 1626  
                           l8118 15F6                             l8054 13FA  
                           l8038 12B0                             l7184 483E  
                           l7176 47E0                             l7168 478E  
                           l7272 38B2                             l7256 3804  
                           l7248 37C8                             l4776 4366  
                           l4696 3F5C                             l4688 3F08  
                           l7600 079E                             l7504 03B8  
                           l7440 0144                             l7432 010C  
                           l7408 0038                             l5592 5782  
                           l8128 1630                             l8080 1518  
                           l8064 1490                             l4794 43CC  
                           l4786 4396                             l7282 402A  
                           l7362 2D5E                             l7610 08CC  
                           l7514 0448                             l7506 03E8  
                           l7442 015C                             l8138 1676  
                           l8090 1556                             l8058 1418  
                           l7196 4872                             l4788 43A6  
                           l7380 2FAE                             l7356 2C98  
                           l7700 0B30                             l7612 08DA  
                           l7604 07F0                             l7532 053A  
                           l7508 03FE                             l7452 01A2  
                           l7436 0132                             l7460 01F8  
                           l7428 0100                             l8084 1536  
                           l8092 155A                             l8068 14AE  
                           l8164 4F1E                             l7374 2EE8  
                           l7366 2D84                             l7702 0BB4  
                           l7710 0C3C                             l7550 05D6  
                           l7534 0540                             l7518 0476  
                           l7446 0170                             l7438 013E  
                           l5598 5854                             l8086 153C  
                           l8078 1512                             l7288 4064  
                           l7712 0C44                             l7632 096C  
                           l7616 08E8                             l7560 062C  
                           l7528 04D4                             l7448 018A  
                           l8096 156C                             l8176 4F52  
                           l7394 549A                             l7634 0972  
                           l7570 065E                             l7554 05FE  
                           l7546 0586                             l7490 0304  
                           l7474 0252                             l7458 01BA  
                           l7714 0C5A                             l7722 4188  
                           l7388 58B8                             l7396 54AA  
                           l7708 0C2A                             l7628 0942  
                           l7572 0672                             l7564 063A  
                           l7670 0A4A                             l7646 09B8  
                           l7662 0A04                             l7590 0758  
                           l7566 0650                             l7582 0728  
                           l7806 4504                             l7648 09BE  
                           l7664 0A16                             l7584 0736  
                           l7576 069A                             l7840 48BC  
                           l7728 41C2                             l7808 450E  
                           l7920 0DDE                             l7912 0D82  
                           l7904 0D5A                             l7690 0AE0  
                           l7682 0AB8                             l7674 0A82  
                           l7594 077A                             l7498 0374  
                           l7850 48E6                             l7770 59D2  
                           l7676 0A8C                             l7588 0744  
                           l7844 48C6                             l7748 4222  
                           l7932 0E16                             l7916 0DC6  
                           l7908 0D66                             _ADON 007E10  
                           l7694 0AFA                             l7862 4962  
                           l7942 0E62                             l7688 0AD4  
                           l7936 0E30                             l7928 0E00  
                           l7952 0F3E                             l7872 0C9C  
                           l7698 0B20                             l7858 494C  
                           l7786 43F6                             l7962 0F80  
                           l7938 0E4C                             l7882 0CE2  
                           l7956 0F60                             l7972 0FF2  
                           l7948 0EE8                             l7892 0D02  
                           l7982 1018                             l7966 0F9A  
                           l7958 0F6A                             l7992 1052  
                           l7968 0FA0                             l7986 1032  
                           l7978 1002            __size_ofi2__div_to_l_ 0128  
                           l7998 1096                             STR_1 FF68  
                           STR_2 FFD1                             STR_3 FFEE  
                           STR_4 FF73                             STR_5 FFD1  
                           STR_6 FF93                             STR_7 FF9F  
                           STR_8 FFF4                             STR_9 FFD4  
                           _LATD 000F8C                     printf@tmpval 014B  
                           u5221 3CE0                             u5241 3D1A  
                           u5431 42B0                             u5450 42FA  
                           _RCEN 007E2B                             u5455 42F0  
                           u6770 57F8                             u6790 57A8  
                           u6880 5C6C                             u9611 4040  
                           u9381 3686                             u9391 36A4  
                           u9830 0298                             u9591 4006  
                           u9835 028C                             _RSEN 007E29  
                           _main 4ED8                     ___ftpack@arg 00B7  
          __size_ofi2_dc_forward 0040                             _keys FF13  
                           _logs 01BE                     ___ftpack@exp 00BA  
                           _time 01B3                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           _sort 0C7A                             btemp 007D  
                   i2___ftadd@f1 002E                     i2___ftadd@f2 0031  
                   i2___ftge@ff1 0001                     i2___ftge@ff2 0004  
                           prodh 000FF4                             prodl 000FF3  
                           start 000E            __size_ofi2_dc_reverse 0040  
                  __CFG_IESO$OFF 000000                     i2___ftdiv@f1 0013  
                   i2___ftdiv@f2 0016                     i2___ftdiv@f3 001D  
                __end_ofi2_scale 33C4                     i2___ftneg@f1 0001  
                __end_ofi2_putch 5E02                     i2___awtoft@c 000F  
               sort@timeExceeded 016F                    __CFG_MCLRE$ON 000000  
                   ___ftmul@cntr 0111                     i2___ftmul@f1 0015  
                   i2___ftmul@f2 0018                     ___param_bank 000000  
                   ___ftmul@sign 0112           i2_ultrasonicFindBottle 497E  
                   i2___ftsub@f1 003A                     i2___ftsub@f2 003D  
                   i2___fttol@f1 0024                      i2_lcdNibble 5708  
               sort@numRotations 01AF                       i2_rotate90 5AFA  
                   ___fttol@exp1 0128                     i2___lltoft@c 0009  
                   ___fttol@lval 0124                 ?_I2C_Master_Init 0100  
               ?_I2C_Master_Read 0001                 ?_I2C_Master_Wait 0001  
               ?_I2C_Master_Stop 0001                            ?_main 0001  
                          _ACKEN 007E2C                            _ACKDT 007E2D  
                __end_of___awdiv 5056                            _EEADR 000FA9  
                __end_of___ftadd 38D8                            STR_10 FFDD  
                          STR_11 FFAB                            STR_20 FFFA  
                          STR_12 FFE6                            STR_13 FFB7  
                          STR_21 FF87                            STR_14 FFCB  
                          STR_22 FF78                            STR_23 FF46  
                          STR_15 FF31                            STR_16 FF57  
                          STR_17 FF31                            STR_18 FFC2  
                __end_of___awmod 5262                  __end_of___ftdiv 429A  
                __end_of___ftneg 5C48                            ?_sort 0001  
                __end_of___lldiv 5112                            u10050 076E  
                          u10311 419E                  __end_of___ftmul 414E  
                          u10350 4434                            u10510 0DBA  
                          u11207 15C6                            u11127 0CBC  
                          u10600 0F54                            _T0CON 000FD5  
                          u11217 15DA                            u11137 0CD0  
                          u10435 567C                            u11307 586E  
                          u10291 4164                            u11227 1614  
                          u11147 0E1E                            u10380 44EE  
                ___awdiv@divisor 00BF                            u11317 5882  
                          u11237 1650                            u11157 0F88  
                          u11407 55D4                            u11327 5C92  
                          u11247 1664                            u11167 1020  
                          _T1CON 000FCD                            u11417 55DE  
                __end_of___llmod 52FC                            u11337 5932  
                          u11257 43E2                            u11177 105A  
                __end_of___ftsub 58E2                            u11347 5966  
                          u11267 5822                            u11187 11C0  
                __end_of___fttol 43DE                            u11357 578A  
                          u11277 5836                            u11197 158A  
                          u10670 1078                            u11367 57DA  
                          u11287 5906                            u11377 496A  
                          u11297 5918                            u11387 559E  
                          u11397 55A8                            i2l110 21FE  
                          i2l107 2A9A                            i2l133 249E  
                          i2l135 24EE                            i2l261 49D8  
                          i2l174 2AEA                            i2l256 49C8  
                          i2l274 5B74                            i2l291 5AB4  
                          i2l269 5B36                            i2l286 5AF4  
                          i2l279 5A38                            i2l634 1D0E  
                          i2l595 1E6E                            i2l942 3B62  
                          i2l919 51A0                            i2l946 3B8C  
                ___awdiv@counter 00C1                            i2l957 3C3C  
                          i2l966 3C58                            i2l887 4762  
                          i2l991 463A                            i2l984 45AC  
                          i2l985 45D4                            i2l977 4D12  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _PORTB 000F81                     i2__div_to_l_ 464C  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                  __end_of_dc_stop 5E2E  
                  __CFG_PWRT$OFF 000000                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                     ___lltoft@exp 0100  
                __end_of_lcdInst 5DF6                   __CFG_EBTR0$OFF 000000  
                 __CFG_FCMEN$OFF 000000                   __CFG_EBTR1$OFF 000000  
                 __CFG_EBTR2$OFF 000000                   __CFG_EBTR3$OFF 000000  
                  __CFG_WRTB$OFF 000000                    __CFG_WRTC$OFF 000000  
                  __CFG_WRTD$OFF 000000                     i2_dc_forward 5ABA  
                __end_of_readADC 5CA2                  __end_of_initLCD 5970  
                 __CFG_EBTRB$OFF 000000                       i2isdigit@c 0003  
                  ___awtoft@sign 00C5                  __end_of_dpowers FEA5  
               ?_Eeprom_ReadByte 00B7                       i2scale@scl 002A  
                          _scale 2B26                  __end_of_isdigit 5CCC  
                  ___ftpack@sign 00BB                            _putch 5DD6  
                   i2_dc_reverse 5A7A                            pclath 000FFA  
                          tablat 000FF5                 __end_ofi2___ftge 538C  
               __end_ofi2___wmul 5D1A                            sort@i 0185  
                          sort@x 0180                            status 000FD8  
               __end_ofi2_fround 3B1E                    i2___ftdiv@exp 0020  
             __size_ofi2___awdiv 0084               __size_ofi2___ftadd 01AC  
             __size_ofi2___awmod 0070                   __CFG_PBADEN$ON 000000  
                  i2printf@width 0069               __size_ofi2___ftdiv 00E6  
             __size_ofi2___ftneg 0024               __size_ofi2___lldiv 0082  
             __size_ofi2___ftmul 00F4               __size_ofi2___llmod 0066  
             __size_ofi2___ftsub 0040               __size_ofi2___fttol 00F4  
               __end_ofi2_printf 2144               __size_ofi2_dc_stop 0006  
                __initialization 5D1A                i2___lldiv@divisor 0005  
             __size_ofi2_lcdInst 000C                     __end_of_main 4F98  
        keypressed@lightVolt_266 0089                i2___lldiv@counter 000D  
                   __end_of_keys FF24                    i2___ftmul@exp 001E  
                   __end_of_sort 1706                       i2printf@ap 0056  
                     i2printf@cp 0052               __size_ofi2_readADC 0024  
             __size_ofi2_initLCD 0046               __size_ofi2_isdigit 001E  
                    i2_rotate180 5B38                      i2_rotate270 59FA  
                    ?i2___awtoft 000F                      ?i2___ftpack 0001  
                    ?i2___lltoft 0009                           ??_main 00C7  
                  ___fttol@sign1 0123                           ??_sort 016C  
                  __activetblptr 000002             __size_of__tdiv_to_l_ 019E  
              ?_I2C_Master_Start 0001                ?_I2C_Master_Write 00B8  
             ??_I2C_Master_Start 00B8                           _ADCON0 000FC2  
                         _ADCON1 000FC1               ??_I2C_Master_Write 00BA  
               ___llmod@dividend 0100                           ?_scale 0113  
                         _ADRESH 000FC4                           _EEADRH 000FAA  
                         _EEDATA 000FA8                           _EECON2 000FA7  
               ___awdiv@dividend 00BD                  i2lcdNibble@data 0002  
               __end_of___awtoft 59FA                           ?_putch 0001  
               __end_of___ftpack 4880                  i2lcdNibble@temp 0001  
               __end_of___lltoft 550E                           _INT1IE 007F83  
                         _INT1IF 007F80                           i2l1016 5D78  
                         i2l1066 5480                           i2l1076 563A  
                         i2l6004 5432                           i2l6006 543E  
                         i2l5310 53CE                           i2l5302 53B0  
                         i2l6016 5472                           i2l6008 5442  
                         i2l6032 562C                           i2l6024 55F8  
                         i2l6040 56BE                           i2l5320 53EE  
                         i2l5312 53D2                           i2l7000 263E  
                         i2l5410 3C08                           i2l6026 5604  
                         i2l5404 3BEC                           i2l6028 5608  
                         i2l5308 53C6                           i2l5324 53F8  
                         i2l5340 5522                           i2l7020 2712  
                         i2l7004 2654                           i2l5406 3BF6  
                         i2l6038 56B2                           i2l5350 5544  
                         i2l5424 3C74                           i2l5416 3C2A  
                         i2l5408 3C00                           i2l5328 5406  
                         i2l5352 5548                           i2l5360 5566  
                         i2l5344 552E                           i2l6400 4996  
                         i2l7032 27FA                           i2l7016 26FC  
                         i2l7024 272A                           i2l7008 266C  
                         i2l5434 3CA4                           i2l5418 3C34  
                         i2l5450 4AC6                           i2l7042 288C  
                         i2l5364 5574                           i2l5356 555C  
                         i2l5348 553C                           i2l5444 4A9E  
                         i2l6420 4A62                           i2l7036 2810  
                         i2l5382 3B9A                           i2l6502 1724  
                         i2l6422 4A6C                           i2l7054 29A8  
                         i2l5376 3B70                           i2l5296 53A0  
                         i2l5464 4AF8                           i2l6600 1A34  
                         i2l6504 1736                           i2l6440 5B40  
                         i2l7080 2A78                           i2l7072 2A3E  
                         i2l7064 2A12                           i2l7056 29B6  
                         i2l4850 5122                           i2l5474 4B20  
                         i2l5714 31AC                           i2l6602 1A44  
                         i2l6530 17E6                           i2l6522 17C8  
                         i2l6514 176A                           i2l7066 2A1E  
                         i2l7058 29C4                           i2l5804 4750  
                         i2l5900 4610                           i2l5468 4B08  
                         i2l5732 33A0                           i2l5708 3108  
                         i2l6612 1A9C                           i2l6540 181A  
                         i2l6532 17F0                           i2l6524 17CC  
                         i2l6508 173C                           i2l6452 5A02  
                         i2l6428 5B02                           i2l5820 4CAE  
                         i2l7068 2A28                           i2l7076 2A56  
                         i2l7084 2A96                           i2l6470 5AD6  
                         i2l4862 516E                           i2l4854 5130  
                         i2l5398 3BCA                           i2l5806 475C  
                         i2l5478 4B30                           i2l5726 32FC  
                         i2l5718 31D0                           i2l6710 1E64  
                         i2l6622 1AF0                           i2l6542 182E  
                         i2l6534 17F6                           i2l6526 17D0  
                         i2l5814 4C86                           i2l4864 518C  
                         i2l4856 513A                           i2l5760 4688  
                         i2l6704 1E4E                           i2l6640 1B90  
                         i2l6608 1A78                           i2l6536 1808  
                         i2l6552 1854                           i2l5744 5B8A  
                         i2l5840 4CEC                           i2l6482 5A96  
                         i2l5914 532C                           i2l4866 5196  
                         i2l4858 5158                           i2l5754 466A  
                         i2l5906 4628                           i2l6802 2102  
                         i2l6722 1EAE                           i2l6706 1E58  
                         i2l6626 1B54                           i2l6546 1842  
                         i2l6554 188E                           i2l7098 2AD8  
                         i2l5924 5388                           i2l5908 4634  
                         i2l5860 4546                           i2l6804 2112  
                         i2l6740 1F10                           i2l6660 1C16  
                         i2l6644 1BC0                           i2l6628 1B58  
                         i2l6492 5D4E                           i2l5918 535C  
                         i2l5782 46FA                           i2l5774 46CA  
                         i2l5694 3ADE                           i2l5686 3A1E  
                         i2l6806 2118                           i2l6742 1F14  
                         i2l6726 1ED4                           i2l6670 1C4C  
                         i2l6654 1BFA                           i2l6494 5D5C  
                         i2l6902 228E                           i2l5936 5A50  
                         i2l6728 1ED8                           i2l6664 1C22  
                         i2l6648 1BDA                           i2l6592 19D2  
                         i2l6584 196E                           i2l6568 18DE  
                         i2l6808 2128                           i2l6904 229A  
                         i2l5946 4B96                           i2l5794 4728  
                         i2l5866 4572                           i2l6770 1FAA  
                         i2l6682 1CEA                           i2l6666 1C30  
                         i2l6658 1C06                           i2l6498 1712  
                         i2l6930 2368                           i2l6914 22EC  
                         i2l6906 22B6                           i2l6922 231A  
                         i2l5964 4BFC                           i2l6764 1F7E  
                         i2l6756 1F4C                           i2l6684 1CF8  
                         i2l6676 1CD4                           i2l6596 19F6  
                         i2l5982 4C4C                           i2l5974 4C24  
                         i2l5798 4738                           i2l6782 1FDE  
                         i2l6758 1F5C                           i2l6694 1D2A  
                         i2l6678 1CDE                           i2l6598 1A06  
                         i2l6942 2434                           i2l6926 2352  
                         i2l6950 2462                           i2l6918 2302  
                         i2l5976 4C30                           i2l5968 4C0C  
                         i2l5896 4600                           i2l6784 1FE6  
                         i2l6792 2014                           i2l6776 1FC8  
                         i2l6768 1FA2                           i2l6688 1D12  
                         i2l6936 23E4                           i2l6880 21DA  
                         i2l5978 4C36                           i2l5994 5DBA  
                         i2l6794 2020                           i2l6698 1D7A  
                         i2l6954 2488                           i2l6946 244A  
                         i2l6796 2098                           i2l6788 1FFA  
                         i2l6980 2548                           i2l6964 24CA  
                         i2l6884 2204                           i2l6894 2260  
                         i2l6992 25AE                           i2l6984 256A  
                         i2l6976 2526                           i2l6888 222E  
                         i2l6898 2276                           i2l6988 258C  
                      ??i2_scale 0027                           u710_41 452A  
                         u712_41 4556                           u641_41 3B2E  
                         u705_41 4C6E                           u642_41 3B42  
                         u707_41 4C96                           u724_41 4B7A  
                         u662_41 4A86                           u664_41 4AAE  
                         _TMR0IE 007F95                           _TMR0IF 007F92  
                      ??i2_putch 0003                     ?_resetCounts 0001  
                         _TMR0ON 007EAF                           _TMR1ON 007E68  
                         _SSPADD 000FC8                           _TRISC3 007CA3  
                         _TRISC4 007CA4                           _SSPBUF 000FC9  
         __size_ofi2__tdiv_to_l_ 0132                   __CFG_XINST$OFF 000000  
                   i2_scale$1727 0027                 __end_of__powers_ FEF3  
                   sort@proxVolt 01A3                           ___ftge 4E10  
                         ___wmul 5BAE                        ??___awdiv 00C1  
                      ??___ftadd 0123                   __CFG_STVREN$ON 000000  
                      ??___awmod 00BB                      ?i2_rotate90 0001  
                      ??___ftdiv 0109                        ??___ftneg 00BA  
                      ??___lldiv 00BF                        ??___ftmul 010A  
                      ??___llmod 00C4                        ??___ftsub 00C7  
                      ??___fttol 011E                           _fround 33C4  
                      ??_dc_stop 00B7                           clear_0 5D20  
               ___awdiv@quotient 00C3                  ___awmod@divisor 00B9  
                ___awmod@counter 00BB                        ??_lcdInst 00B9  
                         _printf 0012                           main@ec 01B1  
                         _yopCap 01C2                   i2___awdiv@sign 000C  
          ___ftmul@f3_as_product 010E          i2ultrasonicFindBottle@a 0039  
                      ??_readADC 00B7                        ??_initLCD 00BA  
                      ??_isdigit 00B7                __end_ofi2___awdiv 5410  
              __end_ofi2___ftadd 3CCA                __end_ofi2___awmod 557E  
              __end_ofi2___ftdiv 4D44                   i2___ftadd@exp1 0039  
                 i2___ftadd@exp2 0038                __end_ofi2___ftneg 5D86  
              __end_ofi2___lldiv 5492                __end_ofi2___ftmul 4B6A  
              __end_ofi2___llmod 564C                __end_ofi2___ftsub 5A7A  
              __end_ofi2___fttol 4C5E                   i2___ftadd@sign 0037  
               __end_of_printRTC 497E                     __mediumconst FE7C  
                         tblptrh 000FF7          Eeprom_WriteByte@address 00B7  
                         tblptrl 000FF6                           tblptru 000FF8  
               __end_of_rotate90 584A                __end_ofi2_dc_stop 5E34  
                 i2___awmod@sign 0006                __end_ofi2_lcdInst 5E0E  
              __end_ofi2_readADC 5D62                __end_ofi2_initLCD 59B6  
              __end_ofi2_isdigit 5DC2                   i2___ftdiv@cntr 001C  
                     __accesstop 0080          __end_of__initialization 5D30  
                 i2___ftdiv@sign 0021                       ___ftadd@f1 011D  
                     ___ftadd@f2 0120              __size_ofi2___awtoft 0038  
            __size_ofi2___ftpack 00AE                   i2printf@tmpval 005A  
                     ___ftge@ff1 00B7                       ___ftge@ff2 00BA  
            __size_ofi2___lltoft 005C                    ___rparam_used 000001  
                     ___ftdiv@f1 0103                       ___ftdiv@f2 0106  
                     ___ftdiv@f3 010D                       ___ftneg@f1 00B7  
                     ___awtoft@c 0100                   i2___ftpack@arg 0001  
             i2__tdiv_to_l_@exp1 000F                i2___llmod@divisor 0012  
                 i2___ftpack@exp 0004               i2__tdiv_to_l_@cntr 000E  
           sort@lightVoltSum_632 01A9             sort@lightVoltSum_638 01AC  
              i2___llmod@counter 0016               i2__tdiv_to_l_@quot 000A  
                     ___ftmul@f1 0104                       ___ftmul@f2 0107  
                     ___ftsub@f1 0129                       ___ftsub@f2 012C  
                     ___fttol@f1 011A             __end_of_happynewyear FF2B  
                 __pcstackCOMRAM 0001               i2___lldiv@dividend 0001  
                     ___lltoft@c 00BF                   i2___ftmul@cntr 0022  
                  __end_of_scale 2FD4                   i2___ftmul@sign 0023  
                  __end_of_putch 5DE6                ?_Eeprom_WriteByte 00B7  
                    i2printf@idx 0051                      i2printf@len 0054  
                    i2printf@exp 005E                      i2printf@val 0060  
                 i2___fttol@exp1 0032                   i2___fttol@lval 002E  
                      ?i2___ftge 0001                      i2rotate90@i 0002  
             ??_Eeprom_WriteByte 00BB                        ?i2___wmul 000F  
                  i2__tdiv_to_l_ 451A               __size_of_lcdNibble 0068  
                     __div_to_l_ 3E68                      i2putch@data 0003  
                    keypressed@i 0094                        ?i2_fround 0024  
                     _dc_forward 57AE     __end_of_ultrasonicFindBottle 451A  
                      ?i2_printf 0040                  __div_to_l_@exp1 00C2  
                __div_to_l_@cntr 00C1                          ??_scale 00C7  
                 i2___lltoft@exp 0011                       _dc_reverse 575E  
                __div_to_l_@quot 00BD                          ??_putch 00B9  
             i2___lldiv@quotient 0009                       __pbssBANK0 00C7  
                     __pbssBANK1 01B3              __size_ofi2_rotate90 003E  
               i2__tdiv_to_l_@f1 0001                 i2__tdiv_to_l_@f2 0004  
        ?i2_ultrasonicFindBottle 0033                    __div_to_l_@f1 00B7  
                  __div_to_l_@f2 00BA                          ?___ftge 00B7  
                   ?i2_lcdNibble 0001                          ?___wmul 0100  
                        ?_fround 0113                        ?___awtoft 0100  
                      ?___ftpack 00B7                          ?_printf 012F  
                      ?___lltoft 00BF                   ?i2__tdiv_to_l_ 0001  
                     ??i2___ftge 0007                    sort@lightVolt 0171  
                     ??i2___wmul 0013                displayLog@eskaCap 015D  
                 keypressed@prox 008C                       ??i2_fround 0027  
             __size_of_rotate180 004C               __size_of_rotate270 0048  
                sort@bottleFound 017C                       ??i2_printf 0048  
                     _displayLog 4D44                    i2dc_forward@i 0002  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7                          i2_scale 2FD4  
                        i2_putch 5DF6   __end_ofi2_ultrasonicFindBottle 4A76  
              __end_of_lcdNibble 55E6             __size_of_resetCounts 0034  
              __end_of__npowers_ FECC                          __Hparam 0000  
                     _scale$1494 0116                          __Lparam 0000  
                  i2dc_reverse@i 0002                        ?_printRTC 0001  
           Eeprom_WriteByte@data 00B9                  __size_of___ftge 00C8  
                        ___awdiv 4F98                          ___ftadd 3670  
                      ?_rotate90 0001                          ___awmod 51C0  
                        ___ftdiv 414E                          ___ftneg 5C18  
                        ___lldiv 5056                  __size_of___wmul 0036  
                        ___ftmul 3FF0                          ___llmod 5262  
                        ___ftsub 5896                          ___fttol 429A  
                   ?i2_rotate180 0001                     ?i2_rotate270 0001  
                        _dc_stop 5E28                          __pcinit 5D1A  
                   ??i2___awtoft 0012                     ??i2___ftpack 0006  
                     ??___awtoft 00C5                       ??___ftpack 00BC  
                __size_of_fround 02AC          i2___ftmul@f3_as_product 001F  
                        __ramtop 1000                     ??i2___lltoft 000D  
                        _lcdInst 5DE6                       ??___lltoft 00C3  
                        __ptext0 4ED8                          __ptext1 0C7A  
                        __ptext2 43DE                          __ptext3 414E  
                        __ptext4 59B6                          __ptext5 57FE  
                        __ptext6 58E2                          __ptext7 584A  
                        __ptext8 5BE4                          __ptext9 5C76  
               keypressed@IRVolt 00AA                  __size_of_printf 0C68  
                        _eskaCap 01BA                   displayLog@time 0165  
                  i2_fround$1725 002A                    i2_fround$1726 0027  
                        _readADC 5C76                          _initLCD 592A  
              __end_of_hexpowers FF13                      ?__div_to_l_ 00B7  
                        _counter 007B                          _dpowers FE7D  
              __end_of_itemArray FF31                     i2fround@prec 002D  
                        _isdigit 5CA2                 ___awmod@dividend 00B7  
                     _keypressed 0008         __size_of_I2C_Master_Init 0060  
       __size_of_I2C_Master_Read 002E                      ?_dc_forward 0001  
       __size_of_I2C_Master_Wait 0014         __size_of_I2C_Master_Stop 0008  
                    ?_dc_reverse 0001                          _sorting 01C0  
                 __pintcode_body 2144             end_of_initialization 5D30  
            displayLog@eskaNoCap 015F                    __Lmediumconst FE7C  
                        int_func 2144              i2___wmul@multiplier 000F  
                      i2u1150_47 265A                        i2u1142_47 21E0  
                      i2u1151_47 2718                        i2u1143_47 227C  
                      i2u1160_47 5D54                        i2u1152_47 2A44  
                      i2u1144_47 2308                        i2u1161_47 5976  
                      i2u1153_47 4982                        i2u1145_47 2450  
                      i2u1162_47 59AA                        i2u1154_47 5B16  
                      i2u1146_47 24A6                        i2u1163_47 5720  
                      i2u1155_47 5B28                        i2u1147_47 24B8  
                      i2u1164_47 572A                        i2u1156_47 5A16  
                      i2u1148_47 24F6                        i2u1165_47 574C  
                      i2u1157_47 5A28                        i2u1149_47 2508  
                      i2u1166_47 5756                        i2u1158_47 5B54  
             __end_ofi2___awtoft 5BAE                        i2u1167_47 5A9C  
                      i2u1159_47 5B66               __end_ofi2___ftpack 51C0  
                      i2u1168_47 5ADC         __size_of_Eeprom_ReadByte 001E  
      __size_of_I2C_Master_Start 0008               __end_ofi2___lltoft 5708  
      __size_of_I2C_Master_Write 000A                  ___lldiv@divisor 00BB  
                ___lldiv@counter 00C3                __end_of_rotate180 5896  
              __end_of_rotate270 592A                          printf@c 015C  
                        printf@f 012F                       ??_printRTC 015D  
               I2C_Master_Init@c 0100                 I2C_Master_Read@a 00B8  
                        postdec2 000FDD             _ultrasonicFindBottle 43DE  
                        postinc0 000FEE                          postinc2 000FDE  
                   ??i2_rotate90 0001                       ??_rotate90 00B7  
                 __tdiv_to_l_@f1 00B7                   __tdiv_to_l_@f2 00BA  
                ??i2__tdiv_to_l_ 0007                    ??__tdiv_to_l_ 00BD  
                      _PORTBbits 000F81                        _PORTEbits 000F84  
                   _happynewyear FF24                      ?_displayLog 015D  
                      i2___awdiv 538C                        i2___ftadd 3B1E  
                      i2___awmod 550E                        i2___ftdiv 4C5E  
                      i2___ftneg 5D62                        i2___lldiv 5410  
                      i2___ftmul 4A76                        i2___llmod 55E6  
                      i2___ftsub 5A3A                        i2___fttol 4B6A  
                      i2_dc_stop 5E2E               __end_ofi2_rotate90 5B38  
                      i2_lcdInst 5E02                      ___ftdiv@exp 0110  
                    printf@width 015A                  i2___awtoft@sign 0012  
             i2___llmod@dividend 000E                        i2_readADC 5D3E  
                      i2_initLCD 5970               i2___awdiv@dividend 0007  
                i2___ftpack@sign 0005                        i2_isdigit 5DA4  
            __size_of__div_to_l_ 0188                      ___ftmul@exp 010D  
          ?_ultrasonicFindBottle 0129              __size_of_dc_forward 0050  
                 __end_of___ftge 4ED8              __size_of_dc_reverse 0050  
                 __end_of___wmul 5BE4             __size_ofi2_lcdNibble 0056  
                  i2lcdInst@data 0003                   __end_of_fround 3670  
               i2___wmul@product 0013                   __end_of_printf 0C7A  
                  i2_printf$1728 004E                     i2printf@flag 0064  
                   i2printf@fval 0066                     i2printf@prec 0058  
            start_initialization 5D1A                __size_ofi2___ftge 0090  
                    ?_keypressed 0001               i2___awdiv@quotient 000D  
              __size_ofi2___wmul 0026              __end_of__tdiv_to_l_ 3E68  
                      i2printf@c 006B                        i2printf@f 0040  
            keypressed@lightVolt 0080           keypressed@lightVoltSum 00B0  
                i2___fttol@sign1 002D                     i2rotate180@i 0002  
                   i2rotate270@i 0002                __size_ofi2_fround 0246  
                     ?i2___awdiv 0007                       ?i2___ftadd 002E  
                     ?i2___awmod 0001                       ?i2___ftdiv 0013  
                     ?i2___ftneg 0001                       ?i2___lldiv 0001  
                     ?i2___ftmul 0015                       ?i2___llmod 000E  
                     ?i2___ftsub 003A                       ?i2___fttol 0024  
      __size_of_Eeprom_WriteByte 0028                __size_ofi2_printf 0A3E  
                     ?i2_dc_stop 0001                ??_I2C_Master_Init 0104  
              ??_I2C_Master_Read 00B8                ??_I2C_Master_Wait 00B7  
                     ?i2_lcdInst 0001                ??_I2C_Master_Stop 00B8  
                ___llmod@divisor 0104                     keypressed@IR 0090  
                     ?i2_readADC 0001                       ?i2_initLCD 0001  
                ___llmod@counter 00C4                       ?i2_isdigit 0001  
           sort@currentContainer 017A                         ??___ftge 00BD  
                       ??___wmul 00C5              __size_of_displayLog 00CC  
              ??_Eeprom_ReadByte 00B9                 __CFG_LPT1OSC$OFF 000000  
                       ??_fround 00C7                         ??_printf 0139  
           __size_ofi2_rotate180 003E             __size_ofi2_rotate270 0040  
                     fround@prec 011C                    ?i2__div_to_l_ 0001  
              __size_of___awtoft 0044                __size_of___ftpack 010C  
              __size_of___lltoft 007C                      __pbssCOMRAM 007B  
                  __pcstackBANK0 0080                    __pcstackBANK1 0100  
                  ?i2_dc_forward 0001                     _isdigit$1152 00B8  
                  ?i2_dc_reverse 0001                         ?i2_scale 0024  
                       ?i2_putch 0001                 i2readADC@channel 0002  
              sort@lightVolt_640 0177                sort@lightVolt_634 0174  
               _I2C_Master_Start 5E20                 _I2C_Master_Write 5E0E  
         ??_ultrasonicFindBottle 012B                __CFG_CCP2MX$PORTC 000000  
            __size_of_keypressed 2B1E                        __pintcode 0008  
                  __pmediumconst FE7C                        _lcdNibble 557E  
                       ?___awdiv 00BD                         ?___ftadd 011D  
                       ?___awmod 00B7                         ?___ftdiv 0103  
                       ?___ftneg 00B7                         ?___lldiv 00B7  
                       ?___ftmul 0104                         ?___llmod 0100  
                       ?___ftsub 0129                        __npowers_ FEA5  
                       ?___fttol 011A               keypressed@IRSensor 0086  
              __size_of_printRTC 00FE                         ?_dc_stop 0001  
              __size_of_rotate90 004C                         ?_lcdInst 0001  
                    __tdiv_to_l_ 3CCA                        _eskaNoCap 01BC  
               displayLog@press1 016B                   ??i2__div_to_l_ 0007  
                   ??__div_to_l_ 00BD                         ?_readADC 0001  
               displayLog@yopCap 0161                         ?_initLCD 0001  
                       ?_isdigit 0001                   ??i2_dc_forward 0001  
                   ??_dc_forward 00B7                        _hexpowers FEF3  
                 ??i2_dc_reverse 0001                        _itemArray FF2B  
                   ??_dc_reverse 00B7                      ??i2___awdiv 000B  
                    ??i2___ftadd 0034                      ??i2___awmod 0005  
                    ??i2___ftdiv 0019                      ??i2___ftneg 0004  
                    ??i2___lldiv 0009                      ??i2___ftmul 001B  
                 __size_of_scale 04AE                      ??i2___llmod 0016  
                    ??i2___ftsub 0040                      ??i2___fttol 0028  
                 __size_of_putch 0010                      ??i2_dc_stop 0001  
                keypressed@i_250 009A                  keypressed@i_261 00A4  
                keypressed@i_253 009C                  keypressed@i_245 0096  
                keypressed@i_254 009E                  keypressed@i_246 0092  
                keypressed@i_255 00A0                  keypressed@i_248 0098  
                keypressed@i_265 00A6                  keypressed@i_258 00A2  
                keypressed@i_275 00A8                    ??_resetCounts 00B7  
                    ??i2_lcdInst 0003                   ___wmul@product 00C5  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                       _LATEbits 000F8D                      ??i2_readADC 0001  
                    ??i2_initLCD 0004                  keypressed@light 008E  
                    ??i2_isdigit 0001               __end_of__div_to_l_ 3FF0  
                       _PIR2bits 000FA1                         i2u810_40 5AB4  
                       i2u821_40 1916                         i2u821_45 190C  
                       i2u726_40 4BB4                         i2u726_45 4BAC  
                       i2u808_40 5AF4                         i2u843_40 1D08  
                       i2u874_40 21FE                         i2u891_40 24EC  
                       i2u796_40 49BE                         i2u892_40 2524  
                       i2u799_40 4A52                 __CFG_WDTPS$32768 000000  
                     ?_lcdNibble 0001               __end_of_dc_forward 57FE  
                i2__div_to_l_@f1 0001                  i2__div_to_l_@f2 0004  
                      _rotate180 584A                        _rotate270 58E2  
             __end_of_dc_reverse 57AE                       _ADCON0bits 000FC2  
              ___wmul@multiplier 0100                         i2___ftge 52FC  
                       i2___wmul 5CF4                    lcdNibble@data 00B8  
                     printf@flag 0155                    lcdNibble@temp 00B7  
                     printf@fval 0157                       printf@prec 0149  
             displayLog@yopNoCap 0163                i2___awdiv@divisor 0009  
                       i2_fround 38D8                i2___awdiv@counter 000B  
                     sort@IRVolt 0182                      dc_forward@i 00B8  
                       i2_printf 1706                     ??_displayLog 0167  
                     rotate180@i 00B8                       rotate270@i 00B8  
            I2C_Master_Read@temp 00B9                 _Eeprom_WriteByte 5CCC  
             i2___awmod@dividend 0001                 __size_ofi2_scale 03F0  
               __size_ofi2_putch 000C                       _EECON1bits 000FA6  
             keypressed@keypress 00B6                       sort@bottle 01A1  
                       __Hrparam 0000                      dc_reverse@i 00B8  
                       __Lrparam 0000              __end_of_resetCounts 5C18  
             __CFG_BOREN$SBORDIS 000000               keypressed@proxVolt 0083  
               __size_of___awdiv 00BE                 __size_of___ftadd 0268  
               __size_of___awmod 00A2                 __size_of___ftdiv 014C  
             __end_of_displayLog 4E10                 __size_of___ftneg 0030  
          i2___wmul@multiplicand 0011                 __size_of___lldiv 00BC  
               __size_of___ftmul 015E                       ?_rotate180 0001  
                     ?_rotate270 0001                 __size_of___llmod 009A  
               __size_of___ftsub 004C                 __size_of___fttol 0144  
                 readADC@channel 00B8                         ___awtoft 59B6  
                       ___ftpack 4774                      _fround$1492 0119  
                    _fround$1493 0116                         ___lltoft 5492  
          __end_ofi2__tdiv_to_l_ 464C                 __size_of_dc_stop 0006  
         Eeprom_ReadByte@address 00B7                 __size_of_lcdInst 0010  
                _I2C_Master_Init 564C                 __size_of_readADC 002C  
                _I2C_Master_Read 5C48                 __size_of_initLCD 0046  
                _I2C_Master_Wait 5DC2                 sort@lightVoltSum 01A6  
                _I2C_Master_Stop 5E18                     ??_keypressed 006C  
               __size_of_isdigit 002A         ??i2_ultrasonicFindBottle 0035  
                       __ptext10 592A                         __ptext11 4D44  
                       __ptext20 5CA2                         __ptext12 575E  
                       __ptext21 33C4                         __ptext13 57AE  
                       __ptext30 429A                         __ptext22 5BAE  
                       __ptext14 5E28                         __ptext31 5896  
                       __ptext23 3FF0                         __ptext15 5CCC  
                       __ptext40 5E20                         __ptext32 3670  
                       __ptext24 51C0                         __ptext16 4880  
                       __ptext41 5C48                         __ptext33 4774  
                       __ptext25 4F98                         __ptext17 0012  
                       __ptext50 5AFA                         __ptext42 5DC2  
                       __ptext34 5C18                         __ptext26 3CCA  
                       __ptext18 2B26                         __ptext51 59FA  
                       __ptext43 564C                         __ptext35 4E10  
                       __ptext27 3E68                         __ptext19 5DD6  
                       __ptext60 4A76                         __ptext52 5B38  
                       __ptext44 5056                         __ptext36 5DE6  
                       __ptext28 5492                         __ptext61 550E  
                       __ptext53 5D3E                         __ptext45 5D86  
                       __ptext37 557E                         __ptext29 5262  
                       __ptext70 3B1E                         __ptext62 538C  
                       __ptext54 1706                         __ptext38 5E0E  
                       __ptext71 5112                         __ptext63 451A  
                       __ptext55 2FD4                         __ptext47 497E  
                       __ptext39 5E18                         __ptext72 5D62  
                       __ptext64 464C                         __ptext56 5DF6  
                       __ptext48 4C5E                         __ptext73 52FC  
                       __ptext65 56AC                         __ptext57 5DA4  
                       __ptext49 5B76                         __ptext74 5970  
                       __ptext66 55E6                         __ptext58 38D8  
                       __ptext75 5E02                         __ptext67 5410  
                       __ptext59 5CF4                         __ptext76 5708  
                       __ptext68 4B6A                         __ptext77 5A7A  
                       __ptext69 5A3A                         __ptext78 5ABA  
                       __ptext79 5E2E                         __powers_ FECC  
                displayLog@total 0169                   i2_isdigit$1152 0002  
                  __size_of_main 00C0                  _Eeprom_ReadByte 5D86  
                  __size_of_sort 0A8C             __end_ofi2__div_to_l_ 4774  
           __end_ofi2_dc_forward 5AFA                    ??i2_lcdNibble 0001  
                       _printRTC 4880                      ??_lcdNibble 00B7  
                      printRTC@i 0160               __end_of_keypressed 2B26  
                       int$flags 007D                         _rotate90 57FE  
           __end_ofi2_dc_reverse 5ABA                        printf@idx 0142  
                      printf@len 0145                        printf@exp 014F  
                      printf@val 0151                         _yopNoCap 01C4  
                      rotate90@i 00B8                        sort@i_630 018D  
                      sort@i_631 018F                        sort@i_624 0187  
                      sort@i_633 0191                        sort@i_642 0197  
                      sort@i_626 0189                        sort@i_643 0199  
                      sort@i_635 0193                        sort@i_644 019B  
                      sort@i_645 019D                        sort@i_629 018B  
                      sort@i_639 0195                i2___awmod@divisor 0003  
                      putch@data 00B9                i2___awmod@counter 0005  
       __end_of_I2C_Master_Start 5E28         __end_of_I2C_Master_Write 5E18  
                     _INTCONbits 000FF2                        sort@timer 017E  
                       isdigit@c 00B9                         scale@scl 0119  
                       intlevel2 0000       keypressed@lightVoltSum_264 00B3  
               __tdiv_to_l_@exp1 00C5                 __tdiv_to_l_@cntr 00C4  
               __tdiv_to_l_@quot 00C0                      _resetCounts 5BE4  
               ___lldiv@dividend 00B7                      _timeElapsed 00C7  
                       printf@ap 0147                         printf@cp 0143  
        __end_of_I2C_Master_Init 56AC          __end_of_I2C_Master_Read 5C76  
                  ??i2_rotate180 0001                    ??i2_rotate270 0001  
        __end_of_I2C_Master_Wait 5DD6                      ??_rotate180 00B7  
                    ??_rotate270 00B7          __end_of_I2C_Master_Stop 5E20  
                    lcdInst@data 00B9                         sort@done 019F  
         keypressed@proxVolt_263 00AD                     ?__tdiv_to_l_ 00B7  
                    _printf$1495 013F              __end_ofi2_lcdNibble 575E  
               ___lldiv@quotient 00BF                I2C_Master_Write@d 00B8  
                  printRTC@i_868 015E          __end_of_Eeprom_ReadByte 5DA4  
__size_ofi2_ultrasonicFindBottle 00F8                i2__div_to_l_@exp1 000C  
              i2__div_to_l_@cntr 000B                i2__div_to_l_@quot 0007  
